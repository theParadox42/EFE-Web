!function(e, t) {
    "use strict";
    "object" == typeof module && "object" == typeof module.exports ? module.exports = e.document ? t(e, !0) : function(e) {
        if (!e.document) throw new Error("jQuery requires a window with a document");
        return t(e);
    } : t(e);
}("undefined" != typeof window ? window : this, function(e, t) {
    "use strict";
    var r = [], i = e.document, n = Object.getPrototypeOf, o = r.slice, s = r.concat, a = r.push, h = r.indexOf, l = {}, u = l.toString, c = l.hasOwnProperty, p = c.toString, d = p.call(Object), f = {}, m = function(e) {
        return "function" == typeof e && "number" != typeof e.nodeType;
    }, g = function(e) {
        return null != e && e === e.window;
    }, v = {
        type: !0,
        src: !0,
        nonce: !0,
        noModule: !0
    };
    function y(e, t, r) {
        var n, o, s = (r = r || i).createElement("script");
        if (s.text = e, t) for (n in v) (o = t[n] || t.getAttribute && t.getAttribute(n)) && s.setAttribute(n, o);
        r.head.appendChild(s).parentNode.removeChild(s);
    }
    function b(e) {
        return null == e ? e + "" : "object" == typeof e || "function" == typeof e ? l[u.call(e)] || "object" : typeof e;
    }
    var x = "3.4.1", _ = function(e, t) {
        return new _.fn.init(e, t);
    }, w = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
    function S(e) {
        var t = !!e && "length" in e && e.length, r = b(e);
        return !m(e) && !g(e) && ("array" === r || 0 === t || "number" == typeof t && 0 < t && t - 1 in e);
    }
    _.fn = _.prototype = {
        jquery: x,
        constructor: _,
        length: 0,
        toArray: function() {
            return o.call(this);
        },
        get: function(e) {
            return null == e ? o.call(this) : e < 0 ? this[e + this.length] : this[e];
        },
        pushStack: function(e) {
            var t = _.merge(this.constructor(), e);
            return t.prevObject = this, t;
        },
        each: function(e) {
            return _.each(this, e);
        },
        map: function(e) {
            return this.pushStack(_.map(this, function(t, r) {
                return e.call(t, r, t);
            }));
        },
        slice: function() {
            return this.pushStack(o.apply(this, arguments));
        },
        first: function() {
            return this.eq(0);
        },
        last: function() {
            return this.eq(-1);
        },
        eq: function(e) {
            var t = this.length, r = +e + (e < 0 ? t : 0);
            return this.pushStack(0 <= r && r < t ? [ this[r] ] : []);
        },
        end: function() {
            return this.prevObject || this.constructor();
        },
        push: a,
        sort: r.sort,
        splice: r.splice
    }, _.extend = _.fn.extend = function() {
        var e, t, r, i, n, o, s = arguments[0] || {}, a = 1, h = arguments.length, l = !1;
        for ("boolean" == typeof s && (l = s, s = arguments[a] || {}, a++), "object" == typeof s || m(s) || (s = {}), 
        a === h && (s = this, a--); a < h; a++) if (null != (e = arguments[a])) for (t in e) i = e[t], 
        "__proto__" !== t && s !== i && (l && i && (_.isPlainObject(i) || (n = Array.isArray(i))) ? (r = s[t], 
        o = n && !Array.isArray(r) ? [] : n || _.isPlainObject(r) ? r : {}, n = !1, s[t] = _.extend(l, o, i)) : void 0 !== i && (s[t] = i));
        return s;
    }, _.extend({
        expando: "jQuery" + (x + Math.random()).replace(/\D/g, ""),
        isReady: !0,
        error: function(e) {
            throw new Error(e);
        },
        noop: function() {},
        isPlainObject: function(e) {
            var t, r;
            return !(!e || "[object Object]" !== u.call(e) || (t = n(e)) && ("function" != typeof (r = c.call(t, "constructor") && t.constructor) || p.call(r) !== d));
        },
        isEmptyObject: function(e) {
            var t;
            for (t in e) return !1;
            return !0;
        },
        globalEval: function(e, t) {
            y(e, {
                nonce: t && t.nonce
            });
        },
        each: function(e, t) {
            var r, i = 0;
            if (S(e)) for (r = e.length; i < r && !1 !== t.call(e[i], i, e[i]); i++) ; else for (i in e) if (!1 === t.call(e[i], i, e[i])) break;
            return e;
        },
        trim: function(e) {
            return null == e ? "" : (e + "").replace(w, "");
        },
        makeArray: function(e, t) {
            var r = t || [];
            return null != e && (S(Object(e)) ? _.merge(r, "string" == typeof e ? [ e ] : e) : a.call(r, e)), 
            r;
        },
        inArray: function(e, t, r) {
            return null == t ? -1 : h.call(t, e, r);
        },
        merge: function(e, t) {
            for (var r = +t.length, i = 0, n = e.length; i < r; i++) e[n++] = t[i];
            return e.length = n, e;
        },
        grep: function(e, t, r) {
            for (var i = [], n = 0, o = e.length, s = !r; n < o; n++) !t(e[n], n) !== s && i.push(e[n]);
            return i;
        },
        map: function(e, t, r) {
            var i, n, o = 0, a = [];
            if (S(e)) for (i = e.length; o < i; o++) null != (n = t(e[o], o, r)) && a.push(n); else for (o in e) null != (n = t(e[o], o, r)) && a.push(n);
            return s.apply([], a);
        },
        guid: 1,
        support: f
    }), "function" == typeof Symbol && (_.fn[Symbol.iterator] = r[Symbol.iterator]), 
    _.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function(e, t) {
        l["[object " + t + "]"] = t.toLowerCase();
    });
    var T = function(e) {
        var t, r, i, n, o, s, a, h, l, u, c, p, d, f, m, g, v, y, b, x = "sizzle" + 1 * new Date(), _ = e.document, w = 0, S = 0, T = he(), E = he(), M = he(), C = he(), L = function(e, t) {
            return e === t && (c = !0), 0;
        }, R = {}.hasOwnProperty, A = [], D = A.pop, P = A.push, k = A.push, I = A.slice, O = function(e, t) {
            for (var r = 0, i = e.length; r < i; r++) if (e[r] === t) return r;
            return -1;
        }, U = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped", N = "[\\x20\\t\\r\\n\\f]", B = "(?:\\\\.|[\\w-]|[^\0-\\xa0])+", F = "\\[" + N + "*(" + B + ")(?:" + N + "*([*^$|!~]?=)" + N + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + B + "))|)" + N + "*\\]", G = ":(" + B + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + F + ")*)|.*)\\)|)", z = new RegExp(N + "+", "g"), j = new RegExp("^" + N + "+|((?:^|[^\\\\])(?:\\\\.)*)" + N + "+$", "g"), H = new RegExp("^" + N + "*," + N + "*"), V = new RegExp("^" + N + "*([>+~]|" + N + ")" + N + "*"), W = new RegExp(N + "|>"), q = new RegExp(G), X = new RegExp("^" + B + "$"), Y = {
            ID: new RegExp("^#(" + B + ")"),
            CLASS: new RegExp("^\\.(" + B + ")"),
            TAG: new RegExp("^(" + B + "|[*])"),
            ATTR: new RegExp("^" + F),
            PSEUDO: new RegExp("^" + G),
            CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + N + "*(even|odd|(([+-]|)(\\d*)n|)" + N + "*(?:([+-]|)" + N + "*(\\d+)|))" + N + "*\\)|)", "i"),
            bool: new RegExp("^(?:" + U + ")$", "i"),
            needsContext: new RegExp("^" + N + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + N + "*((?:-\\d)?\\d*)" + N + "*\\)|)(?=[^-]|$)", "i")
        }, Z = /HTML$/i, Q = /^(?:input|select|textarea|button)$/i, K = /^h\d$/i, $ = /^[^{]+\{\s*\[native \w/, J = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, ee = /[+~]/, te = new RegExp("\\\\([\\da-f]{1,6}" + N + "?|(" + N + ")|.)", "ig"), re = function(e, t, r) {
            var i = "0x" + t - 65536;
            return i != i || r ? t : i < 0 ? String.fromCharCode(i + 65536) : String.fromCharCode(i >> 10 | 55296, 1023 & i | 56320);
        }, ie = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g, ne = function(e, t) {
            return t ? "\0" === e ? "ï¿½" : e.slice(0, -1) + "\\" + e.charCodeAt(e.length - 1).toString(16) + " " : "\\" + e;
        }, oe = function() {
            p();
        }, se = xe(function(e) {
            return !0 === e.disabled && "fieldset" === e.nodeName.toLowerCase();
        }, {
            dir: "parentNode",
            next: "legend"
        });
        try {
            k.apply(A = I.call(_.childNodes), _.childNodes), A[_.childNodes.length].nodeType;
        } catch (t) {
            k = {
                apply: A.length ? function(e, t) {
                    P.apply(e, I.call(t));
                } : function(e, t) {
                    for (var r = e.length, i = 0; e[r++] = t[i++]; ) ;
                    e.length = r - 1;
                }
            };
        }
        function ae(e, t, i, n) {
            var o, a, l, u, c, f, v, y = t && t.ownerDocument, w = t ? t.nodeType : 9;
            if (i = i || [], "string" != typeof e || !e || 1 !== w && 9 !== w && 11 !== w) return i;
            if (!n && ((t ? t.ownerDocument || t : _) !== d && p(t), t = t || d, m)) {
                if (11 !== w && (c = J.exec(e))) if (o = c[1]) {
                    if (9 === w) {
                        if (!(l = t.getElementById(o))) return i;
                        if (l.id === o) return i.push(l), i;
                    } else if (y && (l = y.getElementById(o)) && b(t, l) && l.id === o) return i.push(l), 
                    i;
                } else {
                    if (c[2]) return k.apply(i, t.getElementsByTagName(e)), i;
                    if ((o = c[3]) && r.getElementsByClassName && t.getElementsByClassName) return k.apply(i, t.getElementsByClassName(o)), 
                    i;
                }
                if (r.qsa && !C[e + " "] && (!g || !g.test(e)) && (1 !== w || "object" !== t.nodeName.toLowerCase())) {
                    if (v = e, y = t, 1 === w && W.test(e)) {
                        for ((u = t.getAttribute("id")) ? u = u.replace(ie, ne) : t.setAttribute("id", u = x), 
                        a = (f = s(e)).length; a--; ) f[a] = "#" + u + " " + be(f[a]);
                        v = f.join(","), y = ee.test(e) && ve(t.parentNode) || t;
                    }
                    try {
                        return k.apply(i, y.querySelectorAll(v)), i;
                    } catch (t) {
                        C(e, !0);
                    } finally {
                        u === x && t.removeAttribute("id");
                    }
                }
            }
            return h(e.replace(j, "$1"), t, i, n);
        }
        function he() {
            var e = [];
            return function t(r, n) {
                return e.push(r + " ") > i.cacheLength && delete t[e.shift()], t[r + " "] = n;
            };
        }
        function le(e) {
            return e[x] = !0, e;
        }
        function ue(e) {
            var t = d.createElement("fieldset");
            try {
                return !!e(t);
            } catch (e) {
                return !1;
            } finally {
                t.parentNode && t.parentNode.removeChild(t), t = null;
            }
        }
        function ce(e, t) {
            for (var r = e.split("|"), n = r.length; n--; ) i.attrHandle[r[n]] = t;
        }
        function pe(e, t) {
            var r = t && e, i = r && 1 === e.nodeType && 1 === t.nodeType && e.sourceIndex - t.sourceIndex;
            if (i) return i;
            if (r) for (;r = r.nextSibling; ) if (r === t) return -1;
            return e ? 1 : -1;
        }
        function de(e) {
            return function(t) {
                return "input" === t.nodeName.toLowerCase() && t.type === e;
            };
        }
        function fe(e) {
            return function(t) {
                var r = t.nodeName.toLowerCase();
                return ("input" === r || "button" === r) && t.type === e;
            };
        }
        function me(e) {
            return function(t) {
                return "form" in t ? t.parentNode && !1 === t.disabled ? "label" in t ? "label" in t.parentNode ? t.parentNode.disabled === e : t.disabled === e : t.isDisabled === e || t.isDisabled !== !e && se(t) === e : t.disabled === e : "label" in t && t.disabled === e;
            };
        }
        function ge(e) {
            return le(function(t) {
                return t = +t, le(function(r, i) {
                    for (var n, o = e([], r.length, t), s = o.length; s--; ) r[n = o[s]] && (r[n] = !(i[n] = r[n]));
                });
            });
        }
        function ve(e) {
            return e && void 0 !== e.getElementsByTagName && e;
        }
        for (t in r = ae.support = {}, o = ae.isXML = function(e) {
            var t = e.namespaceURI, r = (e.ownerDocument || e).documentElement;
            return !Z.test(t || r && r.nodeName || "HTML");
        }, p = ae.setDocument = function(e) {
            var t, n, s = e ? e.ownerDocument || e : _;
            return s !== d && 9 === s.nodeType && s.documentElement && (f = (d = s).documentElement, 
            m = !o(d), _ !== d && (n = d.defaultView) && n.top !== n && (n.addEventListener ? n.addEventListener("unload", oe, !1) : n.attachEvent && n.attachEvent("onunload", oe)), 
            r.attributes = ue(function(e) {
                return e.className = "i", !e.getAttribute("className");
            }), r.getElementsByTagName = ue(function(e) {
                return e.appendChild(d.createComment("")), !e.getElementsByTagName("*").length;
            }), r.getElementsByClassName = $.test(d.getElementsByClassName), r.getById = ue(function(e) {
                return f.appendChild(e).id = x, !d.getElementsByName || !d.getElementsByName(x).length;
            }), r.getById ? (i.filter.ID = function(e) {
                var t = e.replace(te, re);
                return function(e) {
                    return e.getAttribute("id") === t;
                };
            }, i.find.ID = function(e, t) {
                if (void 0 !== t.getElementById && m) {
                    var r = t.getElementById(e);
                    return r ? [ r ] : [];
                }
            }) : (i.filter.ID = function(e) {
                var t = e.replace(te, re);
                return function(e) {
                    var r = void 0 !== e.getAttributeNode && e.getAttributeNode("id");
                    return r && r.value === t;
                };
            }, i.find.ID = function(e, t) {
                if (void 0 !== t.getElementById && m) {
                    var r, i, n, o = t.getElementById(e);
                    if (o) {
                        if ((r = o.getAttributeNode("id")) && r.value === e) return [ o ];
                        for (n = t.getElementsByName(e), i = 0; o = n[i++]; ) if ((r = o.getAttributeNode("id")) && r.value === e) return [ o ];
                    }
                    return [];
                }
            }), i.find.TAG = r.getElementsByTagName ? function(e, t) {
                return void 0 !== t.getElementsByTagName ? t.getElementsByTagName(e) : r.qsa ? t.querySelectorAll(e) : void 0;
            } : function(e, t) {
                var r, i = [], n = 0, o = t.getElementsByTagName(e);
                if ("*" === e) {
                    for (;r = o[n++]; ) 1 === r.nodeType && i.push(r);
                    return i;
                }
                return o;
            }, i.find.CLASS = r.getElementsByClassName && function(e, t) {
                if (void 0 !== t.getElementsByClassName && m) return t.getElementsByClassName(e);
            }, v = [], g = [], (r.qsa = $.test(d.querySelectorAll)) && (ue(function(e) {
                f.appendChild(e).innerHTML = "<a id='" + x + "'></a><select id='" + x + "-\r\\' msallowcapture=''><option selected=''></option></select>", 
                e.querySelectorAll("[msallowcapture^='']").length && g.push("[*^$]=" + N + "*(?:''|\"\")"), 
                e.querySelectorAll("[selected]").length || g.push("\\[" + N + "*(?:value|" + U + ")"), 
                e.querySelectorAll("[id~=" + x + "-]").length || g.push("~="), e.querySelectorAll(":checked").length || g.push(":checked"), 
                e.querySelectorAll("a#" + x + "+*").length || g.push(".#.+[+~]");
            }), ue(function(e) {
                e.innerHTML = "<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";
                var t = d.createElement("input");
                t.setAttribute("type", "hidden"), e.appendChild(t).setAttribute("name", "D"), e.querySelectorAll("[name=d]").length && g.push("name" + N + "*[*^$|!~]?="), 
                2 !== e.querySelectorAll(":enabled").length && g.push(":enabled", ":disabled"), 
                f.appendChild(e).disabled = !0, 2 !== e.querySelectorAll(":disabled").length && g.push(":enabled", ":disabled"), 
                e.querySelectorAll("*,:x"), g.push(",.*:");
            })), (r.matchesSelector = $.test(y = f.matches || f.webkitMatchesSelector || f.mozMatchesSelector || f.oMatchesSelector || f.msMatchesSelector)) && ue(function(e) {
                r.disconnectedMatch = y.call(e, "*"), y.call(e, "[s!='']:x"), v.push("!=", G);
            }), g = g.length && new RegExp(g.join("|")), v = v.length && new RegExp(v.join("|")), 
            t = $.test(f.compareDocumentPosition), b = t || $.test(f.contains) ? function(e, t) {
                var r = 9 === e.nodeType ? e.documentElement : e, i = t && t.parentNode;
                return e === i || !(!i || 1 !== i.nodeType || !(r.contains ? r.contains(i) : e.compareDocumentPosition && 16 & e.compareDocumentPosition(i)));
            } : function(e, t) {
                if (t) for (;t = t.parentNode; ) if (t === e) return !0;
                return !1;
            }, L = t ? function(e, t) {
                if (e === t) return c = !0, 0;
                var i = !e.compareDocumentPosition - !t.compareDocumentPosition;
                return i || (1 & (i = (e.ownerDocument || e) === (t.ownerDocument || t) ? e.compareDocumentPosition(t) : 1) || !r.sortDetached && t.compareDocumentPosition(e) === i ? e === d || e.ownerDocument === _ && b(_, e) ? -1 : t === d || t.ownerDocument === _ && b(_, t) ? 1 : u ? O(u, e) - O(u, t) : 0 : 4 & i ? -1 : 1);
            } : function(e, t) {
                if (e === t) return c = !0, 0;
                var r, i = 0, n = e.parentNode, o = t.parentNode, s = [ e ], a = [ t ];
                if (!n || !o) return e === d ? -1 : t === d ? 1 : n ? -1 : o ? 1 : u ? O(u, e) - O(u, t) : 0;
                if (n === o) return pe(e, t);
                for (r = e; r = r.parentNode; ) s.unshift(r);
                for (r = t; r = r.parentNode; ) a.unshift(r);
                for (;s[i] === a[i]; ) i++;
                return i ? pe(s[i], a[i]) : s[i] === _ ? -1 : a[i] === _ ? 1 : 0;
            }), d;
        }, ae.matches = function(e, t) {
            return ae(e, null, null, t);
        }, ae.matchesSelector = function(e, t) {
            if ((e.ownerDocument || e) !== d && p(e), r.matchesSelector && m && !C[t + " "] && (!v || !v.test(t)) && (!g || !g.test(t))) try {
                var i = y.call(e, t);
                if (i || r.disconnectedMatch || e.document && 11 !== e.document.nodeType) return i;
            } catch (e) {
                C(t, !0);
            }
            return 0 < ae(t, d, null, [ e ]).length;
        }, ae.contains = function(e, t) {
            return (e.ownerDocument || e) !== d && p(e), b(e, t);
        }, ae.attr = function(e, t) {
            (e.ownerDocument || e) !== d && p(e);
            var n = i.attrHandle[t.toLowerCase()], o = n && R.call(i.attrHandle, t.toLowerCase()) ? n(e, t, !m) : void 0;
            return void 0 !== o ? o : r.attributes || !m ? e.getAttribute(t) : (o = e.getAttributeNode(t)) && o.specified ? o.value : null;
        }, ae.escape = function(e) {
            return (e + "").replace(ie, ne);
        }, ae.error = function(e) {
            throw new Error("Syntax error, unrecognized expression: " + e);
        }, ae.uniqueSort = function(e) {
            var t, i = [], n = 0, o = 0;
            if (c = !r.detectDuplicates, u = !r.sortStable && e.slice(0), e.sort(L), c) {
                for (;t = e[o++]; ) t === e[o] && (n = i.push(o));
                for (;n--; ) e.splice(i[n], 1);
            }
            return u = null, e;
        }, n = ae.getText = function(e) {
            var t, r = "", i = 0, o = e.nodeType;
            if (o) {
                if (1 === o || 9 === o || 11 === o) {
                    if ("string" == typeof e.textContent) return e.textContent;
                    for (e = e.firstChild; e; e = e.nextSibling) r += n(e);
                } else if (3 === o || 4 === o) return e.nodeValue;
            } else for (;t = e[i++]; ) r += n(t);
            return r;
        }, (i = ae.selectors = {
            cacheLength: 50,
            createPseudo: le,
            match: Y,
            attrHandle: {},
            find: {},
            relative: {
                ">": {
                    dir: "parentNode",
                    first: !0
                },
                " ": {
                    dir: "parentNode"
                },
                "+": {
                    dir: "previousSibling",
                    first: !0
                },
                "~": {
                    dir: "previousSibling"
                }
            },
            preFilter: {
                ATTR: function(e) {
                    return e[1] = e[1].replace(te, re), e[3] = (e[3] || e[4] || e[5] || "").replace(te, re), 
                    "~=" === e[2] && (e[3] = " " + e[3] + " "), e.slice(0, 4);
                },
                CHILD: function(e) {
                    return e[1] = e[1].toLowerCase(), "nth" === e[1].slice(0, 3) ? (e[3] || ae.error(e[0]), 
                    e[4] = +(e[4] ? e[5] + (e[6] || 1) : 2 * ("even" === e[3] || "odd" === e[3])), e[5] = +(e[7] + e[8] || "odd" === e[3])) : e[3] && ae.error(e[0]), 
                    e;
                },
                PSEUDO: function(e) {
                    var t, r = !e[6] && e[2];
                    return Y.CHILD.test(e[0]) ? null : (e[3] ? e[2] = e[4] || e[5] || "" : r && q.test(r) && (t = s(r, !0)) && (t = r.indexOf(")", r.length - t) - r.length) && (e[0] = e[0].slice(0, t), 
                    e[2] = r.slice(0, t)), e.slice(0, 3));
                }
            },
            filter: {
                TAG: function(e) {
                    var t = e.replace(te, re).toLowerCase();
                    return "*" === e ? function() {
                        return !0;
                    } : function(e) {
                        return e.nodeName && e.nodeName.toLowerCase() === t;
                    };
                },
                CLASS: function(e) {
                    var t = T[e + " "];
                    return t || (t = new RegExp("(^|" + N + ")" + e + "(" + N + "|$)")) && T(e, function(e) {
                        return t.test("string" == typeof e.className && e.className || void 0 !== e.getAttribute && e.getAttribute("class") || "");
                    });
                },
                ATTR: function(e, t, r) {
                    return function(i) {
                        var n = ae.attr(i, e);
                        return null == n ? "!=" === t : !t || (n += "", "=" === t ? n === r : "!=" === t ? n !== r : "^=" === t ? r && 0 === n.indexOf(r) : "*=" === t ? r && -1 < n.indexOf(r) : "$=" === t ? r && n.slice(-r.length) === r : "~=" === t ? -1 < (" " + n.replace(z, " ") + " ").indexOf(r) : "|=" === t && (n === r || n.slice(0, r.length + 1) === r + "-"));
                    };
                },
                CHILD: function(e, t, r, i, n) {
                    var o = "nth" !== e.slice(0, 3), s = "last" !== e.slice(-4), a = "of-type" === t;
                    return 1 === i && 0 === n ? function(e) {
                        return !!e.parentNode;
                    } : function(t, r, h) {
                        var l, u, c, p, d, f, m = o !== s ? "nextSibling" : "previousSibling", g = t.parentNode, v = a && t.nodeName.toLowerCase(), y = !h && !a, b = !1;
                        if (g) {
                            if (o) {
                                for (;m; ) {
                                    for (p = t; p = p[m]; ) if (a ? p.nodeName.toLowerCase() === v : 1 === p.nodeType) return !1;
                                    f = m = "only" === e && !f && "nextSibling";
                                }
                                return !0;
                            }
                            if (f = [ s ? g.firstChild : g.lastChild ], s && y) {
                                for (b = (d = (l = (u = (c = (p = g)[x] || (p[x] = {}))[p.uniqueID] || (c[p.uniqueID] = {}))[e] || [])[0] === w && l[1]) && l[2], 
                                p = d && g.childNodes[d]; p = ++d && p && p[m] || (b = d = 0) || f.pop(); ) if (1 === p.nodeType && ++b && p === t) {
                                    u[e] = [ w, d, b ];
                                    break;
                                }
                            } else if (y && (b = d = (l = (u = (c = (p = t)[x] || (p[x] = {}))[p.uniqueID] || (c[p.uniqueID] = {}))[e] || [])[0] === w && l[1]), 
                            !1 === b) for (;(p = ++d && p && p[m] || (b = d = 0) || f.pop()) && ((a ? p.nodeName.toLowerCase() !== v : 1 !== p.nodeType) || !++b || (y && ((u = (c = p[x] || (p[x] = {}))[p.uniqueID] || (c[p.uniqueID] = {}))[e] = [ w, b ]), 
                            p !== t)); ) ;
                            return (b -= n) === i || b % i == 0 && 0 <= b / i;
                        }
                    };
                },
                PSEUDO: function(e, t) {
                    var r, n = i.pseudos[e] || i.setFilters[e.toLowerCase()] || ae.error("unsupported pseudo: " + e);
                    return n[x] ? n(t) : 1 < n.length ? (r = [ e, e, "", t ], i.setFilters.hasOwnProperty(e.toLowerCase()) ? le(function(e, r) {
                        for (var i, o = n(e, t), s = o.length; s--; ) e[i = O(e, o[s])] = !(r[i] = o[s]);
                    }) : function(e) {
                        return n(e, 0, r);
                    }) : n;
                }
            },
            pseudos: {
                not: le(function(e) {
                    var t = [], r = [], i = a(e.replace(j, "$1"));
                    return i[x] ? le(function(e, t, r, n) {
                        for (var o, s = i(e, null, n, []), a = e.length; a--; ) (o = s[a]) && (e[a] = !(t[a] = o));
                    }) : function(e, n, o) {
                        return t[0] = e, i(t, null, o, r), t[0] = null, !r.pop();
                    };
                }),
                has: le(function(e) {
                    return function(t) {
                        return 0 < ae(e, t).length;
                    };
                }),
                contains: le(function(e) {
                    return e = e.replace(te, re), function(t) {
                        return -1 < (t.textContent || n(t)).indexOf(e);
                    };
                }),
                lang: le(function(e) {
                    return X.test(e || "") || ae.error("unsupported lang: " + e), e = e.replace(te, re).toLowerCase(), 
                    function(t) {
                        var r;
                        do {
                            if (r = m ? t.lang : t.getAttribute("xml:lang") || t.getAttribute("lang")) return (r = r.toLowerCase()) === e || 0 === r.indexOf(e + "-");
                        } while ((t = t.parentNode) && 1 === t.nodeType);
                        return !1;
                    };
                }),
                target: function(t) {
                    var r = e.location && e.location.hash;
                    return r && r.slice(1) === t.id;
                },
                root: function(e) {
                    return e === f;
                },
                focus: function(e) {
                    return e === d.activeElement && (!d.hasFocus || d.hasFocus()) && !!(e.type || e.href || ~e.tabIndex);
                },
                enabled: me(!1),
                disabled: me(!0),
                checked: function(e) {
                    var t = e.nodeName.toLowerCase();
                    return "input" === t && !!e.checked || "option" === t && !!e.selected;
                },
                selected: function(e) {
                    return e.parentNode && e.parentNode.selectedIndex, !0 === e.selected;
                },
                empty: function(e) {
                    for (e = e.firstChild; e; e = e.nextSibling) if (e.nodeType < 6) return !1;
                    return !0;
                },
                parent: function(e) {
                    return !i.pseudos.empty(e);
                },
                header: function(e) {
                    return K.test(e.nodeName);
                },
                input: function(e) {
                    return Q.test(e.nodeName);
                },
                button: function(e) {
                    var t = e.nodeName.toLowerCase();
                    return "input" === t && "button" === e.type || "button" === t;
                },
                text: function(e) {
                    var t;
                    return "input" === e.nodeName.toLowerCase() && "text" === e.type && (null == (t = e.getAttribute("type")) || "text" === t.toLowerCase());
                },
                first: ge(function() {
                    return [ 0 ];
                }),
                last: ge(function(e, t) {
                    return [ t - 1 ];
                }),
                eq: ge(function(e, t, r) {
                    return [ r < 0 ? r + t : r ];
                }),
                even: ge(function(e, t) {
                    for (var r = 0; r < t; r += 2) e.push(r);
                    return e;
                }),
                odd: ge(function(e, t) {
                    for (var r = 1; r < t; r += 2) e.push(r);
                    return e;
                }),
                lt: ge(function(e, t, r) {
                    for (var i = r < 0 ? r + t : t < r ? t : r; 0 <= --i; ) e.push(i);
                    return e;
                }),
                gt: ge(function(e, t, r) {
                    for (var i = r < 0 ? r + t : r; ++i < t; ) e.push(i);
                    return e;
                })
            }
        }).pseudos.nth = i.pseudos.eq, {
            radio: !0,
            checkbox: !0,
            file: !0,
            password: !0,
            image: !0
        }) i.pseudos[t] = de(t);
        for (t in {
            submit: !0,
            reset: !0
        }) i.pseudos[t] = fe(t);
        function ye() {}
        function be(e) {
            for (var t = 0, r = e.length, i = ""; t < r; t++) i += e[t].value;
            return i;
        }
        function xe(e, t, r) {
            var i = t.dir, n = t.next, o = n || i, s = r && "parentNode" === o, a = S++;
            return t.first ? function(t, r, n) {
                for (;t = t[i]; ) if (1 === t.nodeType || s) return e(t, r, n);
                return !1;
            } : function(t, r, h) {
                var l, u, c, p = [ w, a ];
                if (h) {
                    for (;t = t[i]; ) if ((1 === t.nodeType || s) && e(t, r, h)) return !0;
                } else for (;t = t[i]; ) if (1 === t.nodeType || s) if (u = (c = t[x] || (t[x] = {}))[t.uniqueID] || (c[t.uniqueID] = {}), 
                n && n === t.nodeName.toLowerCase()) t = t[i] || t; else {
                    if ((l = u[o]) && l[0] === w && l[1] === a) return p[2] = l[2];
                    if ((u[o] = p)[2] = e(t, r, h)) return !0;
                }
                return !1;
            };
        }
        function _e(e) {
            return 1 < e.length ? function(t, r, i) {
                for (var n = e.length; n--; ) if (!e[n](t, r, i)) return !1;
                return !0;
            } : e[0];
        }
        function we(e, t, r, i, n) {
            for (var o, s = [], a = 0, h = e.length, l = null != t; a < h; a++) (o = e[a]) && (r && !r(o, i, n) || (s.push(o), 
            l && t.push(a)));
            return s;
        }
        function Se(e, t, r, i, n, o) {
            return i && !i[x] && (i = Se(i)), n && !n[x] && (n = Se(n, o)), le(function(o, s, a, h) {
                var l, u, c, p = [], d = [], f = s.length, m = o || function(e, t, r) {
                    for (var i = 0, n = t.length; i < n; i++) ae(e, t[i], r);
                    return r;
                }(t || "*", a.nodeType ? [ a ] : a, []), g = !e || !o && t ? m : we(m, p, e, a, h), v = r ? n || (o ? e : f || i) ? [] : s : g;
                if (r && r(g, v, a, h), i) for (l = we(v, d), i(l, [], a, h), u = l.length; u--; ) (c = l[u]) && (v[d[u]] = !(g[d[u]] = c));
                if (o) {
                    if (n || e) {
                        if (n) {
                            for (l = [], u = v.length; u--; ) (c = v[u]) && l.push(g[u] = c);
                            n(null, v = [], l, h);
                        }
                        for (u = v.length; u--; ) (c = v[u]) && -1 < (l = n ? O(o, c) : p[u]) && (o[l] = !(s[l] = c));
                    }
                } else v = we(v === s ? v.splice(f, v.length) : v), n ? n(null, s, v, h) : k.apply(s, v);
            });
        }
        function Te(e) {
            for (var t, r, n, o = e.length, s = i.relative[e[0].type], a = s || i.relative[" "], h = s ? 1 : 0, u = xe(function(e) {
                return e === t;
            }, a, !0), c = xe(function(e) {
                return -1 < O(t, e);
            }, a, !0), p = [ function(e, r, i) {
                var n = !s && (i || r !== l) || ((t = r).nodeType ? u(e, r, i) : c(e, r, i));
                return t = null, n;
            } ]; h < o; h++) if (r = i.relative[e[h].type]) p = [ xe(_e(p), r) ]; else {
                if ((r = i.filter[e[h].type].apply(null, e[h].matches))[x]) {
                    for (n = ++h; n < o && !i.relative[e[n].type]; n++) ;
                    return Se(1 < h && _e(p), 1 < h && be(e.slice(0, h - 1).concat({
                        value: " " === e[h - 2].type ? "*" : ""
                    })).replace(j, "$1"), r, h < n && Te(e.slice(h, n)), n < o && Te(e = e.slice(n)), n < o && be(e));
                }
                p.push(r);
            }
            return _e(p);
        }
        return ye.prototype = i.filters = i.pseudos, i.setFilters = new ye(), s = ae.tokenize = function(e, t) {
            var r, n, o, s, a, h, l, u = E[e + " "];
            if (u) return t ? 0 : u.slice(0);
            for (a = e, h = [], l = i.preFilter; a; ) {
                for (s in r && !(n = H.exec(a)) || (n && (a = a.slice(n[0].length) || a), h.push(o = [])), 
                r = !1, (n = V.exec(a)) && (r = n.shift(), o.push({
                    value: r,
                    type: n[0].replace(j, " ")
                }), a = a.slice(r.length)), i.filter) !(n = Y[s].exec(a)) || l[s] && !(n = l[s](n)) || (r = n.shift(), 
                o.push({
                    value: r,
                    type: s,
                    matches: n
                }), a = a.slice(r.length));
                if (!r) break;
            }
            return t ? a.length : a ? ae.error(e) : E(e, h).slice(0);
        }, a = ae.compile = function(e, t) {
            var r, n, o, a, h, u, c = [], f = [], g = M[e + " "];
            if (!g) {
                for (t || (t = s(e)), r = t.length; r--; ) (g = Te(t[r]))[x] ? c.push(g) : f.push(g);
                (g = M(e, (n = f, a = 0 < (o = c).length, h = 0 < n.length, u = function(e, t, r, s, u) {
                    var c, f, g, v = 0, y = "0", b = e && [], x = [], _ = l, S = e || h && i.find.TAG("*", u), T = w += null == _ ? 1 : Math.random() || .1, E = S.length;
                    for (u && (l = t === d || t || u); y !== E && null != (c = S[y]); y++) {
                        if (h && c) {
                            for (f = 0, t || c.ownerDocument === d || (p(c), r = !m); g = n[f++]; ) if (g(c, t || d, r)) {
                                s.push(c);
                                break;
                            }
                            u && (w = T);
                        }
                        a && ((c = !g && c) && v--, e && b.push(c));
                    }
                    if (v += y, a && y !== v) {
                        for (f = 0; g = o[f++]; ) g(b, x, t, r);
                        if (e) {
                            if (0 < v) for (;y--; ) b[y] || x[y] || (x[y] = D.call(s));
                            x = we(x);
                        }
                        k.apply(s, x), u && !e && 0 < x.length && 1 < v + o.length && ae.uniqueSort(s);
                    }
                    return u && (w = T, l = _), b;
                }, a ? le(u) : u))).selector = e;
            }
            return g;
        }, h = ae.select = function(e, t, r, n) {
            var o, h, l, u, c, p = "function" == typeof e && e, d = !n && s(e = p.selector || e);
            if (r = r || [], 1 === d.length) {
                if (2 < (h = d[0] = d[0].slice(0)).length && "ID" === (l = h[0]).type && 9 === t.nodeType && m && i.relative[h[1].type]) {
                    if (!(t = (i.find.ID(l.matches[0].replace(te, re), t) || [])[0])) return r;
                    p && (t = t.parentNode), e = e.slice(h.shift().value.length);
                }
                for (o = Y.needsContext.test(e) ? 0 : h.length; o-- && (l = h[o], !i.relative[u = l.type]); ) if ((c = i.find[u]) && (n = c(l.matches[0].replace(te, re), ee.test(h[0].type) && ve(t.parentNode) || t))) {
                    if (h.splice(o, 1), !(e = n.length && be(h))) return k.apply(r, n), r;
                    break;
                }
            }
            return (p || a(e, d))(n, t, !m, r, !t || ee.test(e) && ve(t.parentNode) || t), r;
        }, r.sortStable = x.split("").sort(L).join("") === x, r.detectDuplicates = !!c, 
        p(), r.sortDetached = ue(function(e) {
            return 1 & e.compareDocumentPosition(d.createElement("fieldset"));
        }), ue(function(e) {
            return e.innerHTML = "<a href='#'></a>", "#" === e.firstChild.getAttribute("href");
        }) || ce("type|href|height|width", function(e, t, r) {
            if (!r) return e.getAttribute(t, "type" === t.toLowerCase() ? 1 : 2);
        }), r.attributes && ue(function(e) {
            return e.innerHTML = "<input/>", e.firstChild.setAttribute("value", ""), "" === e.firstChild.getAttribute("value");
        }) || ce("value", function(e, t, r) {
            if (!r && "input" === e.nodeName.toLowerCase()) return e.defaultValue;
        }), ue(function(e) {
            return null == e.getAttribute("disabled");
        }) || ce(U, function(e, t, r) {
            var i;
            if (!r) return !0 === e[t] ? t.toLowerCase() : (i = e.getAttributeNode(t)) && i.specified ? i.value : null;
        }), ae;
    }(e);
    _.find = T, _.expr = T.selectors, _.expr[":"] = _.expr.pseudos, _.uniqueSort = _.unique = T.uniqueSort, 
    _.text = T.getText, _.isXMLDoc = T.isXML, _.contains = T.contains, _.escapeSelector = T.escape;
    var E = function(e, t, r) {
        for (var i = [], n = void 0 !== r; (e = e[t]) && 9 !== e.nodeType; ) if (1 === e.nodeType) {
            if (n && _(e).is(r)) break;
            i.push(e);
        }
        return i;
    }, M = function(e, t) {
        for (var r = []; e; e = e.nextSibling) 1 === e.nodeType && e !== t && r.push(e);
        return r;
    }, C = _.expr.match.needsContext;
    function L(e, t) {
        return e.nodeName && e.nodeName.toLowerCase() === t.toLowerCase();
    }
    var R = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;
    function A(e, t, r) {
        return m(t) ? _.grep(e, function(e, i) {
            return !!t.call(e, i, e) !== r;
        }) : t.nodeType ? _.grep(e, function(e) {
            return e === t !== r;
        }) : "string" != typeof t ? _.grep(e, function(e) {
            return -1 < h.call(t, e) !== r;
        }) : _.filter(t, e, r);
    }
    _.filter = function(e, t, r) {
        var i = t[0];
        return r && (e = ":not(" + e + ")"), 1 === t.length && 1 === i.nodeType ? _.find.matchesSelector(i, e) ? [ i ] : [] : _.find.matches(e, _.grep(t, function(e) {
            return 1 === e.nodeType;
        }));
    }, _.fn.extend({
        find: function(e) {
            var t, r, i = this.length, n = this;
            if ("string" != typeof e) return this.pushStack(_(e).filter(function() {
                for (t = 0; t < i; t++) if (_.contains(n[t], this)) return !0;
            }));
            for (r = this.pushStack([]), t = 0; t < i; t++) _.find(e, n[t], r);
            return 1 < i ? _.uniqueSort(r) : r;
        },
        filter: function(e) {
            return this.pushStack(A(this, e || [], !1));
        },
        not: function(e) {
            return this.pushStack(A(this, e || [], !0));
        },
        is: function(e) {
            return !!A(this, "string" == typeof e && C.test(e) ? _(e) : e || [], !1).length;
        }
    });
    var D, P = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;
    (_.fn.init = function(e, t, r) {
        var n, o;
        if (!e) return this;
        if (r = r || D, "string" == typeof e) {
            if (!(n = "<" === e[0] && ">" === e[e.length - 1] && 3 <= e.length ? [ null, e, null ] : P.exec(e)) || !n[1] && t) return !t || t.jquery ? (t || r).find(e) : this.constructor(t).find(e);
            if (n[1]) {
                if (t = t instanceof _ ? t[0] : t, _.merge(this, _.parseHTML(n[1], t && t.nodeType ? t.ownerDocument || t : i, !0)), 
                R.test(n[1]) && _.isPlainObject(t)) for (n in t) m(this[n]) ? this[n](t[n]) : this.attr(n, t[n]);
                return this;
            }
            return (o = i.getElementById(n[2])) && (this[0] = o, this.length = 1), this;
        }
        return e.nodeType ? (this[0] = e, this.length = 1, this) : m(e) ? void 0 !== r.ready ? r.ready(e) : e(_) : _.makeArray(e, this);
    }).prototype = _.fn, D = _(i);
    var k = /^(?:parents|prev(?:Until|All))/, I = {
        children: !0,
        contents: !0,
        next: !0,
        prev: !0
    };
    function O(e, t) {
        for (;(e = e[t]) && 1 !== e.nodeType; ) ;
        return e;
    }
    _.fn.extend({
        has: function(e) {
            var t = _(e, this), r = t.length;
            return this.filter(function() {
                for (var e = 0; e < r; e++) if (_.contains(this, t[e])) return !0;
            });
        },
        closest: function(e, t) {
            var r, i = 0, n = this.length, o = [], s = "string" != typeof e && _(e);
            if (!C.test(e)) for (;i < n; i++) for (r = this[i]; r && r !== t; r = r.parentNode) if (r.nodeType < 11 && (s ? -1 < s.index(r) : 1 === r.nodeType && _.find.matchesSelector(r, e))) {
                o.push(r);
                break;
            }
            return this.pushStack(1 < o.length ? _.uniqueSort(o) : o);
        },
        index: function(e) {
            return e ? "string" == typeof e ? h.call(_(e), this[0]) : h.call(this, e.jquery ? e[0] : e) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1;
        },
        add: function(e, t) {
            return this.pushStack(_.uniqueSort(_.merge(this.get(), _(e, t))));
        },
        addBack: function(e) {
            return this.add(null == e ? this.prevObject : this.prevObject.filter(e));
        }
    }), _.each({
        parent: function(e) {
            var t = e.parentNode;
            return t && 11 !== t.nodeType ? t : null;
        },
        parents: function(e) {
            return E(e, "parentNode");
        },
        parentsUntil: function(e, t, r) {
            return E(e, "parentNode", r);
        },
        next: function(e) {
            return O(e, "nextSibling");
        },
        prev: function(e) {
            return O(e, "previousSibling");
        },
        nextAll: function(e) {
            return E(e, "nextSibling");
        },
        prevAll: function(e) {
            return E(e, "previousSibling");
        },
        nextUntil: function(e, t, r) {
            return E(e, "nextSibling", r);
        },
        prevUntil: function(e, t, r) {
            return E(e, "previousSibling", r);
        },
        siblings: function(e) {
            return M((e.parentNode || {}).firstChild, e);
        },
        children: function(e) {
            return M(e.firstChild);
        },
        contents: function(e) {
            return void 0 !== e.contentDocument ? e.contentDocument : (L(e, "template") && (e = e.content || e), 
            _.merge([], e.childNodes));
        }
    }, function(e, t) {
        _.fn[e] = function(r, i) {
            var n = _.map(this, t, r);
            return "Until" !== e.slice(-5) && (i = r), i && "string" == typeof i && (n = _.filter(i, n)), 
            1 < this.length && (I[e] || _.uniqueSort(n), k.test(e) && n.reverse()), this.pushStack(n);
        };
    });
    var U = /[^\x20\t\r\n\f]+/g;
    function N(e) {
        return e;
    }
    function B(e) {
        throw e;
    }
    function F(e, t, r, i) {
        var n;
        try {
            e && m(n = e.promise) ? n.call(e).done(t).fail(r) : e && m(n = e.then) ? n.call(e, t, r) : t.apply(void 0, [ e ].slice(i));
        } catch (e) {
            r.apply(void 0, [ e ]);
        }
    }
    _.Callbacks = function(e) {
        var t, r;
        e = "string" == typeof e ? (t = e, r = {}, _.each(t.match(U) || [], function(e, t) {
            r[t] = !0;
        }), r) : _.extend({}, e);
        var i, n, o, s, a = [], h = [], l = -1, u = function() {
            for (s = s || e.once, o = i = !0; h.length; l = -1) for (n = h.shift(); ++l < a.length; ) !1 === a[l].apply(n[0], n[1]) && e.stopOnFalse && (l = a.length, 
            n = !1);
            e.memory || (n = !1), i = !1, s && (a = n ? [] : "");
        }, c = {
            add: function() {
                return a && (n && !i && (l = a.length - 1, h.push(n)), function t(r) {
                    _.each(r, function(r, i) {
                        m(i) ? e.unique && c.has(i) || a.push(i) : i && i.length && "string" !== b(i) && t(i);
                    });
                }(arguments), n && !i && u()), this;
            },
            remove: function() {
                return _.each(arguments, function(e, t) {
                    for (var r; -1 < (r = _.inArray(t, a, r)); ) a.splice(r, 1), r <= l && l--;
                }), this;
            },
            has: function(e) {
                return e ? -1 < _.inArray(e, a) : 0 < a.length;
            },
            empty: function() {
                return a && (a = []), this;
            },
            disable: function() {
                return s = h = [], a = n = "", this;
            },
            disabled: function() {
                return !a;
            },
            lock: function() {
                return s = h = [], n || i || (a = n = ""), this;
            },
            locked: function() {
                return !!s;
            },
            fireWith: function(e, t) {
                return s || (t = [ e, (t = t || []).slice ? t.slice() : t ], h.push(t), i || u()), 
                this;
            },
            fire: function() {
                return c.fireWith(this, arguments), this;
            },
            fired: function() {
                return !!o;
            }
        };
        return c;
    }, _.extend({
        Deferred: function(t) {
            var r = [ [ "notify", "progress", _.Callbacks("memory"), _.Callbacks("memory"), 2 ], [ "resolve", "done", _.Callbacks("once memory"), _.Callbacks("once memory"), 0, "resolved" ], [ "reject", "fail", _.Callbacks("once memory"), _.Callbacks("once memory"), 1, "rejected" ] ], i = "pending", n = {
                state: function() {
                    return i;
                },
                always: function() {
                    return o.done(arguments).fail(arguments), this;
                },
                catch: function(e) {
                    return n.then(null, e);
                },
                pipe: function() {
                    var e = arguments;
                    return _.Deferred(function(t) {
                        _.each(r, function(r, i) {
                            var n = m(e[i[4]]) && e[i[4]];
                            o[i[1]](function() {
                                var e = n && n.apply(this, arguments);
                                e && m(e.promise) ? e.promise().progress(t.notify).done(t.resolve).fail(t.reject) : t[i[0] + "With"](this, n ? [ e ] : arguments);
                            });
                        }), e = null;
                    }).promise();
                },
                then: function(t, i, n) {
                    var o = 0;
                    function s(t, r, i, n) {
                        return function() {
                            var a = this, h = arguments, l = function() {
                                var e, l;
                                if (!(t < o)) {
                                    if ((e = i.apply(a, h)) === r.promise()) throw new TypeError("Thenable self-resolution");
                                    l = e && ("object" == typeof e || "function" == typeof e) && e.then, m(l) ? n ? l.call(e, s(o, r, N, n), s(o, r, B, n)) : (o++, 
                                    l.call(e, s(o, r, N, n), s(o, r, B, n), s(o, r, N, r.notifyWith))) : (i !== N && (a = void 0, 
                                    h = [ e ]), (n || r.resolveWith)(a, h));
                                }
                            }, u = n ? l : function() {
                                try {
                                    l();
                                } catch (e) {
                                    _.Deferred.exceptionHook && _.Deferred.exceptionHook(e, u.stackTrace), o <= t + 1 && (i !== B && (a = void 0, 
                                    h = [ e ]), r.rejectWith(a, h));
                                }
                            };
                            t ? u() : (_.Deferred.getStackHook && (u.stackTrace = _.Deferred.getStackHook()), 
                            e.setTimeout(u));
                        };
                    }
                    return _.Deferred(function(e) {
                        r[0][3].add(s(0, e, m(n) ? n : N, e.notifyWith)), r[1][3].add(s(0, e, m(t) ? t : N)), 
                        r[2][3].add(s(0, e, m(i) ? i : B));
                    }).promise();
                },
                promise: function(e) {
                    return null != e ? _.extend(e, n) : n;
                }
            }, o = {};
            return _.each(r, function(e, t) {
                var s = t[2], a = t[5];
                n[t[1]] = s.add, a && s.add(function() {
                    i = a;
                }, r[3 - e][2].disable, r[3 - e][3].disable, r[0][2].lock, r[0][3].lock), s.add(t[3].fire), 
                o[t[0]] = function() {
                    return o[t[0] + "With"](this === o ? void 0 : this, arguments), this;
                }, o[t[0] + "With"] = s.fireWith;
            }), n.promise(o), t && t.call(o, o), o;
        },
        when: function(e) {
            var t = arguments.length, r = t, i = Array(r), n = o.call(arguments), s = _.Deferred(), a = function(e) {
                return function(r) {
                    i[e] = this, n[e] = 1 < arguments.length ? o.call(arguments) : r, --t || s.resolveWith(i, n);
                };
            };
            if (t <= 1 && (F(e, s.done(a(r)).resolve, s.reject, !t), "pending" === s.state() || m(n[r] && n[r].then))) return s.then();
            for (;r--; ) F(n[r], a(r), s.reject);
            return s.promise();
        }
    });
    var G = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
    _.Deferred.exceptionHook = function(t, r) {
        e.console && e.console.warn && t && G.test(t.name) && e.console.warn("jQuery.Deferred exception: " + t.message, t.stack, r);
    }, _.readyException = function(t) {
        e.setTimeout(function() {
            throw t;
        });
    };
    var z = _.Deferred();
    function j() {
        i.removeEventListener("DOMContentLoaded", j), e.removeEventListener("load", j), 
        _.ready();
    }
    _.fn.ready = function(e) {
        return z.then(e).catch(function(e) {
            _.readyException(e);
        }), this;
    }, _.extend({
        isReady: !1,
        readyWait: 1,
        ready: function(e) {
            (!0 === e ? --_.readyWait : _.isReady) || (_.isReady = !0) !== e && 0 < --_.readyWait || z.resolveWith(i, [ _ ]);
        }
    }), _.ready.then = z.then, "complete" === i.readyState || "loading" !== i.readyState && !i.documentElement.doScroll ? e.setTimeout(_.ready) : (i.addEventListener("DOMContentLoaded", j), 
    e.addEventListener("load", j));
    var H = function(e, t, r, i, n, o, s) {
        var a = 0, h = e.length, l = null == r;
        if ("object" === b(r)) for (a in n = !0, r) H(e, t, a, r[a], !0, o, s); else if (void 0 !== i && (n = !0, 
        m(i) || (s = !0), l && (s ? (t.call(e, i), t = null) : (l = t, t = function(e, t, r) {
            return l.call(_(e), r);
        })), t)) for (;a < h; a++) t(e[a], r, s ? i : i.call(e[a], a, t(e[a], r)));
        return n ? e : l ? t.call(e) : h ? t(e[0], r) : o;
    }, V = /^-ms-/, W = /-([a-z])/g;
    function q(e, t) {
        return t.toUpperCase();
    }
    function X(e) {
        return e.replace(V, "ms-").replace(W, q);
    }
    var Y = function(e) {
        return 1 === e.nodeType || 9 === e.nodeType || !+e.nodeType;
    };
    function Z() {
        this.expando = _.expando + Z.uid++;
    }
    Z.uid = 1, Z.prototype = {
        cache: function(e) {
            var t = e[this.expando];
            return t || (t = {}, Y(e) && (e.nodeType ? e[this.expando] = t : Object.defineProperty(e, this.expando, {
                value: t,
                configurable: !0
            }))), t;
        },
        set: function(e, t, r) {
            var i, n = this.cache(e);
            if ("string" == typeof t) n[X(t)] = r; else for (i in t) n[X(i)] = t[i];
            return n;
        },
        get: function(e, t) {
            return void 0 === t ? this.cache(e) : e[this.expando] && e[this.expando][X(t)];
        },
        access: function(e, t, r) {
            return void 0 === t || t && "string" == typeof t && void 0 === r ? this.get(e, t) : (this.set(e, t, r), 
            void 0 !== r ? r : t);
        },
        remove: function(e, t) {
            var r, i = e[this.expando];
            if (void 0 !== i) {
                if (void 0 !== t) {
                    r = (t = Array.isArray(t) ? t.map(X) : (t = X(t)) in i ? [ t ] : t.match(U) || []).length;
                    for (;r--; ) delete i[t[r]];
                }
                (void 0 === t || _.isEmptyObject(i)) && (e.nodeType ? e[this.expando] = void 0 : delete e[this.expando]);
            }
        },
        hasData: function(e) {
            var t = e[this.expando];
            return void 0 !== t && !_.isEmptyObject(t);
        }
    };
    var Q = new Z(), K = new Z(), $ = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/, J = /[A-Z]/g;
    function ee(e, t, r) {
        var i, n;
        if (void 0 === r && 1 === e.nodeType) if (i = "data-" + t.replace(J, "-$&").toLowerCase(), 
        "string" == typeof (r = e.getAttribute(i))) {
            try {
                r = "true" === (n = r) || "false" !== n && ("null" === n ? null : n === +n + "" ? +n : $.test(n) ? JSON.parse(n) : n);
            } catch (e) {}
            K.set(e, t, r);
        } else r = void 0;
        return r;
    }
    _.extend({
        hasData: function(e) {
            return K.hasData(e) || Q.hasData(e);
        },
        data: function(e, t, r) {
            return K.access(e, t, r);
        },
        removeData: function(e, t) {
            K.remove(e, t);
        },
        _data: function(e, t, r) {
            return Q.access(e, t, r);
        },
        _removeData: function(e, t) {
            Q.remove(e, t);
        }
    }), _.fn.extend({
        data: function(e, t) {
            var r, i, n, o = this[0], s = o && o.attributes;
            if (void 0 === e) {
                if (this.length && (n = K.get(o), 1 === o.nodeType && !Q.get(o, "hasDataAttrs"))) {
                    for (r = s.length; r--; ) s[r] && 0 === (i = s[r].name).indexOf("data-") && (i = X(i.slice(5)), 
                    ee(o, i, n[i]));
                    Q.set(o, "hasDataAttrs", !0);
                }
                return n;
            }
            return "object" == typeof e ? this.each(function() {
                K.set(this, e);
            }) : H(this, function(t) {
                var r;
                if (o && void 0 === t) return void 0 !== (r = K.get(o, e)) ? r : void 0 !== (r = ee(o, e)) ? r : void 0;
                this.each(function() {
                    K.set(this, e, t);
                });
            }, null, t, 1 < arguments.length, null, !0);
        },
        removeData: function(e) {
            return this.each(function() {
                K.remove(this, e);
            });
        }
    }), _.extend({
        queue: function(e, t, r) {
            var i;
            if (e) return t = (t || "fx") + "queue", i = Q.get(e, t), r && (!i || Array.isArray(r) ? i = Q.access(e, t, _.makeArray(r)) : i.push(r)), 
            i || [];
        },
        dequeue: function(e, t) {
            t = t || "fx";
            var r = _.queue(e, t), i = r.length, n = r.shift(), o = _._queueHooks(e, t);
            "inprogress" === n && (n = r.shift(), i--), n && ("fx" === t && r.unshift("inprogress"), 
            delete o.stop, n.call(e, function() {
                _.dequeue(e, t);
            }, o)), !i && o && o.empty.fire();
        },
        _queueHooks: function(e, t) {
            var r = t + "queueHooks";
            return Q.get(e, r) || Q.access(e, r, {
                empty: _.Callbacks("once memory").add(function() {
                    Q.remove(e, [ t + "queue", r ]);
                })
            });
        }
    }), _.fn.extend({
        queue: function(e, t) {
            var r = 2;
            return "string" != typeof e && (t = e, e = "fx", r--), arguments.length < r ? _.queue(this[0], e) : void 0 === t ? this : this.each(function() {
                var r = _.queue(this, e, t);
                _._queueHooks(this, e), "fx" === e && "inprogress" !== r[0] && _.dequeue(this, e);
            });
        },
        dequeue: function(e) {
            return this.each(function() {
                _.dequeue(this, e);
            });
        },
        clearQueue: function(e) {
            return this.queue(e || "fx", []);
        },
        promise: function(e, t) {
            var r, i = 1, n = _.Deferred(), o = this, s = this.length, a = function() {
                --i || n.resolveWith(o, [ o ]);
            };
            for ("string" != typeof e && (t = e, e = void 0), e = e || "fx"; s--; ) (r = Q.get(o[s], e + "queueHooks")) && r.empty && (i++, 
            r.empty.add(a));
            return a(), n.promise(t);
        }
    });
    var te = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source, re = new RegExp("^(?:([+-])=|)(" + te + ")([a-z%]*)$", "i"), ie = [ "Top", "Right", "Bottom", "Left" ], ne = i.documentElement, oe = function(e) {
        return _.contains(e.ownerDocument, e);
    }, se = {
        composed: !0
    };
    ne.getRootNode && (oe = function(e) {
        return _.contains(e.ownerDocument, e) || e.getRootNode(se) === e.ownerDocument;
    });
    var ae = function(e, t) {
        return "none" === (e = t || e).style.display || "" === e.style.display && oe(e) && "none" === _.css(e, "display");
    }, he = function(e, t, r, i) {
        var n, o, s = {};
        for (o in t) s[o] = e.style[o], e.style[o] = t[o];
        for (o in n = r.apply(e, i || []), t) e.style[o] = s[o];
        return n;
    };
    function le(e, t, r, i) {
        var n, o, s = 20, a = i ? function() {
            return i.cur();
        } : function() {
            return _.css(e, t, "");
        }, h = a(), l = r && r[3] || (_.cssNumber[t] ? "" : "px"), u = e.nodeType && (_.cssNumber[t] || "px" !== l && +h) && re.exec(_.css(e, t));
        if (u && u[3] !== l) {
            for (h /= 2, l = l || u[3], u = +h || 1; s--; ) _.style(e, t, u + l), (1 - o) * (1 - (o = a() / h || .5)) <= 0 && (s = 0), 
            u /= o;
            u *= 2, _.style(e, t, u + l), r = r || [];
        }
        return r && (u = +u || +h || 0, n = r[1] ? u + (r[1] + 1) * r[2] : +r[2], i && (i.unit = l, 
        i.start = u, i.end = n)), n;
    }
    var ue = {};
    function ce(e, t) {
        for (var r, i, n, o, s, a, h, l = [], u = 0, c = e.length; u < c; u++) (i = e[u]).style && (r = i.style.display, 
        t ? ("none" === r && (l[u] = Q.get(i, "display") || null, l[u] || (i.style.display = "")), 
        "" === i.style.display && ae(i) && (l[u] = (h = s = o = void 0, s = (n = i).ownerDocument, 
        a = n.nodeName, (h = ue[a]) || (o = s.body.appendChild(s.createElement(a)), h = _.css(o, "display"), 
        o.parentNode.removeChild(o), "none" === h && (h = "block"), ue[a] = h)))) : "none" !== r && (l[u] = "none", 
        Q.set(i, "display", r)));
        for (u = 0; u < c; u++) null != l[u] && (e[u].style.display = l[u]);
        return e;
    }
    _.fn.extend({
        show: function() {
            return ce(this, !0);
        },
        hide: function() {
            return ce(this);
        },
        toggle: function(e) {
            return "boolean" == typeof e ? e ? this.show() : this.hide() : this.each(function() {
                ae(this) ? _(this).show() : _(this).hide();
            });
        }
    });
    var pe = /^(?:checkbox|radio)$/i, de = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i, fe = /^$|^module$|\/(?:java|ecma)script/i, me = {
        option: [ 1, "<select multiple='multiple'>", "</select>" ],
        thead: [ 1, "<table>", "</table>" ],
        col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
        tr: [ 2, "<table><tbody>", "</tbody></table>" ],
        td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],
        _default: [ 0, "", "" ]
    };
    function ge(e, t) {
        var r;
        return r = void 0 !== e.getElementsByTagName ? e.getElementsByTagName(t || "*") : void 0 !== e.querySelectorAll ? e.querySelectorAll(t || "*") : [], 
        void 0 === t || t && L(e, t) ? _.merge([ e ], r) : r;
    }
    function ve(e, t) {
        for (var r = 0, i = e.length; r < i; r++) Q.set(e[r], "globalEval", !t || Q.get(t[r], "globalEval"));
    }
    me.optgroup = me.option, me.tbody = me.tfoot = me.colgroup = me.caption = me.thead, 
    me.th = me.td;
    var ye, be, xe = /<|&#?\w+;/;
    function _e(e, t, r, i, n) {
        for (var o, s, a, h, l, u, c = t.createDocumentFragment(), p = [], d = 0, f = e.length; d < f; d++) if ((o = e[d]) || 0 === o) if ("object" === b(o)) _.merge(p, o.nodeType ? [ o ] : o); else if (xe.test(o)) {
            for (s = s || c.appendChild(t.createElement("div")), a = (de.exec(o) || [ "", "" ])[1].toLowerCase(), 
            h = me[a] || me._default, s.innerHTML = h[1] + _.htmlPrefilter(o) + h[2], u = h[0]; u--; ) s = s.lastChild;
            _.merge(p, s.childNodes), (s = c.firstChild).textContent = "";
        } else p.push(t.createTextNode(o));
        for (c.textContent = "", d = 0; o = p[d++]; ) if (i && -1 < _.inArray(o, i)) n && n.push(o); else if (l = oe(o), 
        s = ge(c.appendChild(o), "script"), l && ve(s), r) for (u = 0; o = s[u++]; ) fe.test(o.type || "") && r.push(o);
        return c;
    }
    ye = i.createDocumentFragment().appendChild(i.createElement("div")), (be = i.createElement("input")).setAttribute("type", "radio"), 
    be.setAttribute("checked", "checked"), be.setAttribute("name", "t"), ye.appendChild(be), 
    f.checkClone = ye.cloneNode(!0).cloneNode(!0).lastChild.checked, ye.innerHTML = "<textarea>x</textarea>", 
    f.noCloneChecked = !!ye.cloneNode(!0).lastChild.defaultValue;
    var we = /^key/, Se = /^(?:mouse|pointer|contextmenu|drag|drop)|click/, Te = /^([^.]*)(?:\.(.+)|)/;
    function Ee() {
        return !0;
    }
    function Me() {
        return !1;
    }
    function Ce(e, t) {
        return e === function() {
            try {
                return i.activeElement;
            } catch (e) {}
        }() == ("focus" === t);
    }
    function Le(e, t, r, i, n, o) {
        var s, a;
        if ("object" == typeof t) {
            for (a in "string" != typeof r && (i = i || r, r = void 0), t) Le(e, a, r, i, t[a], o);
            return e;
        }
        if (null == i && null == n ? (n = r, i = r = void 0) : null == n && ("string" == typeof r ? (n = i, 
        i = void 0) : (n = i, i = r, r = void 0)), !1 === n) n = Me; else if (!n) return e;
        return 1 === o && (s = n, (n = function(e) {
            return _().off(e), s.apply(this, arguments);
        }).guid = s.guid || (s.guid = _.guid++)), e.each(function() {
            _.event.add(this, t, n, i, r);
        });
    }
    function Re(e, t, r) {
        r ? (Q.set(e, t, !1), _.event.add(e, t, {
            namespace: !1,
            handler: function(e) {
                var i, n, s = Q.get(this, t);
                if (1 & e.isTrigger && this[t]) {
                    if (s.length) (_.event.special[t] || {}).delegateType && e.stopPropagation(); else if (s = o.call(arguments), 
                    Q.set(this, t, s), i = r(this, t), this[t](), s !== (n = Q.get(this, t)) || i ? Q.set(this, t, !1) : n = {}, 
                    s !== n) return e.stopImmediatePropagation(), e.preventDefault(), n.value;
                } else s.length && (Q.set(this, t, {
                    value: _.event.trigger(_.extend(s[0], _.Event.prototype), s.slice(1), this)
                }), e.stopImmediatePropagation());
            }
        })) : void 0 === Q.get(e, t) && _.event.add(e, t, Ee);
    }
    _.event = {
        global: {},
        add: function(e, t, r, i, n) {
            var o, s, a, h, l, u, c, p, d, f, m, g = Q.get(e);
            if (g) for (r.handler && (r = (o = r).handler, n = o.selector), n && _.find.matchesSelector(ne, n), 
            r.guid || (r.guid = _.guid++), (h = g.events) || (h = g.events = {}), (s = g.handle) || (s = g.handle = function(t) {
                return void 0 !== _ && _.event.triggered !== t.type ? _.event.dispatch.apply(e, arguments) : void 0;
            }), l = (t = (t || "").match(U) || [ "" ]).length; l--; ) d = m = (a = Te.exec(t[l]) || [])[1], 
            f = (a[2] || "").split(".").sort(), d && (c = _.event.special[d] || {}, d = (n ? c.delegateType : c.bindType) || d, 
            c = _.event.special[d] || {}, u = _.extend({
                type: d,
                origType: m,
                data: i,
                handler: r,
                guid: r.guid,
                selector: n,
                needsContext: n && _.expr.match.needsContext.test(n),
                namespace: f.join(".")
            }, o), (p = h[d]) || ((p = h[d] = []).delegateCount = 0, c.setup && !1 !== c.setup.call(e, i, f, s) || e.addEventListener && e.addEventListener(d, s)), 
            c.add && (c.add.call(e, u), u.handler.guid || (u.handler.guid = r.guid)), n ? p.splice(p.delegateCount++, 0, u) : p.push(u), 
            _.event.global[d] = !0);
        },
        remove: function(e, t, r, i, n) {
            var o, s, a, h, l, u, c, p, d, f, m, g = Q.hasData(e) && Q.get(e);
            if (g && (h = g.events)) {
                for (l = (t = (t || "").match(U) || [ "" ]).length; l--; ) if (d = m = (a = Te.exec(t[l]) || [])[1], 
                f = (a[2] || "").split(".").sort(), d) {
                    for (c = _.event.special[d] || {}, p = h[d = (i ? c.delegateType : c.bindType) || d] || [], 
                    a = a[2] && new RegExp("(^|\\.)" + f.join("\\.(?:.*\\.|)") + "(\\.|$)"), s = o = p.length; o--; ) u = p[o], 
                    !n && m !== u.origType || r && r.guid !== u.guid || a && !a.test(u.namespace) || i && i !== u.selector && ("**" !== i || !u.selector) || (p.splice(o, 1), 
                    u.selector && p.delegateCount--, c.remove && c.remove.call(e, u));
                    s && !p.length && (c.teardown && !1 !== c.teardown.call(e, f, g.handle) || _.removeEvent(e, d, g.handle), 
                    delete h[d]);
                } else for (d in h) _.event.remove(e, d + t[l], r, i, !0);
                _.isEmptyObject(h) && Q.remove(e, "handle events");
            }
        },
        dispatch: function(e) {
            var t, r, i, n, o, s, a = _.event.fix(e), h = new Array(arguments.length), l = (Q.get(this, "events") || {})[a.type] || [], u = _.event.special[a.type] || {};
            for (h[0] = a, t = 1; t < arguments.length; t++) h[t] = arguments[t];
            if (a.delegateTarget = this, !u.preDispatch || !1 !== u.preDispatch.call(this, a)) {
                for (s = _.event.handlers.call(this, a, l), t = 0; (n = s[t++]) && !a.isPropagationStopped(); ) for (a.currentTarget = n.elem, 
                r = 0; (o = n.handlers[r++]) && !a.isImmediatePropagationStopped(); ) a.rnamespace && !1 !== o.namespace && !a.rnamespace.test(o.namespace) || (a.handleObj = o, 
                a.data = o.data, void 0 !== (i = ((_.event.special[o.origType] || {}).handle || o.handler).apply(n.elem, h)) && !1 === (a.result = i) && (a.preventDefault(), 
                a.stopPropagation()));
                return u.postDispatch && u.postDispatch.call(this, a), a.result;
            }
        },
        handlers: function(e, t) {
            var r, i, n, o, s, a = [], h = t.delegateCount, l = e.target;
            if (h && l.nodeType && !("click" === e.type && 1 <= e.button)) for (;l !== this; l = l.parentNode || this) if (1 === l.nodeType && ("click" !== e.type || !0 !== l.disabled)) {
                for (o = [], s = {}, r = 0; r < h; r++) void 0 === s[n = (i = t[r]).selector + " "] && (s[n] = i.needsContext ? -1 < _(n, this).index(l) : _.find(n, this, null, [ l ]).length), 
                s[n] && o.push(i);
                o.length && a.push({
                    elem: l,
                    handlers: o
                });
            }
            return l = this, h < t.length && a.push({
                elem: l,
                handlers: t.slice(h)
            }), a;
        },
        addProp: function(e, t) {
            Object.defineProperty(_.Event.prototype, e, {
                enumerable: !0,
                configurable: !0,
                get: m(t) ? function() {
                    if (this.originalEvent) return t(this.originalEvent);
                } : function() {
                    if (this.originalEvent) return this.originalEvent[e];
                },
                set: function(t) {
                    Object.defineProperty(this, e, {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: t
                    });
                }
            });
        },
        fix: function(e) {
            return e[_.expando] ? e : new _.Event(e);
        },
        special: {
            load: {
                noBubble: !0
            },
            click: {
                setup: function(e) {
                    var t = this || e;
                    return pe.test(t.type) && t.click && L(t, "input") && Re(t, "click", Ee), !1;
                },
                trigger: function(e) {
                    var t = this || e;
                    return pe.test(t.type) && t.click && L(t, "input") && Re(t, "click"), !0;
                },
                _default: function(e) {
                    var t = e.target;
                    return pe.test(t.type) && t.click && L(t, "input") && Q.get(t, "click") || L(t, "a");
                }
            },
            beforeunload: {
                postDispatch: function(e) {
                    void 0 !== e.result && e.originalEvent && (e.originalEvent.returnValue = e.result);
                }
            }
        }
    }, _.removeEvent = function(e, t, r) {
        e.removeEventListener && e.removeEventListener(t, r);
    }, _.Event = function(e, t) {
        if (!(this instanceof _.Event)) return new _.Event(e, t);
        e && e.type ? (this.originalEvent = e, this.type = e.type, this.isDefaultPrevented = e.defaultPrevented || void 0 === e.defaultPrevented && !1 === e.returnValue ? Ee : Me, 
        this.target = e.target && 3 === e.target.nodeType ? e.target.parentNode : e.target, 
        this.currentTarget = e.currentTarget, this.relatedTarget = e.relatedTarget) : this.type = e, 
        t && _.extend(this, t), this.timeStamp = e && e.timeStamp || Date.now(), this[_.expando] = !0;
    }, _.Event.prototype = {
        constructor: _.Event,
        isDefaultPrevented: Me,
        isPropagationStopped: Me,
        isImmediatePropagationStopped: Me,
        isSimulated: !1,
        preventDefault: function() {
            var e = this.originalEvent;
            this.isDefaultPrevented = Ee, e && !this.isSimulated && e.preventDefault();
        },
        stopPropagation: function() {
            var e = this.originalEvent;
            this.isPropagationStopped = Ee, e && !this.isSimulated && e.stopPropagation();
        },
        stopImmediatePropagation: function() {
            var e = this.originalEvent;
            this.isImmediatePropagationStopped = Ee, e && !this.isSimulated && e.stopImmediatePropagation(), 
            this.stopPropagation();
        }
    }, _.each({
        altKey: !0,
        bubbles: !0,
        cancelable: !0,
        changedTouches: !0,
        ctrlKey: !0,
        detail: !0,
        eventPhase: !0,
        metaKey: !0,
        pageX: !0,
        pageY: !0,
        shiftKey: !0,
        view: !0,
        char: !0,
        code: !0,
        charCode: !0,
        key: !0,
        keyCode: !0,
        button: !0,
        buttons: !0,
        clientX: !0,
        clientY: !0,
        offsetX: !0,
        offsetY: !0,
        pointerId: !0,
        pointerType: !0,
        screenX: !0,
        screenY: !0,
        targetTouches: !0,
        toElement: !0,
        touches: !0,
        which: function(e) {
            var t = e.button;
            return null == e.which && we.test(e.type) ? null != e.charCode ? e.charCode : e.keyCode : !e.which && void 0 !== t && Se.test(e.type) ? 1 & t ? 1 : 2 & t ? 3 : 4 & t ? 2 : 0 : e.which;
        }
    }, _.event.addProp), _.each({
        focus: "focusin",
        blur: "focusout"
    }, function(e, t) {
        _.event.special[e] = {
            setup: function() {
                return Re(this, e, Ce), !1;
            },
            trigger: function() {
                return Re(this, e), !0;
            },
            delegateType: t
        };
    }), _.each({
        mouseenter: "mouseover",
        mouseleave: "mouseout",
        pointerenter: "pointerover",
        pointerleave: "pointerout"
    }, function(e, t) {
        _.event.special[e] = {
            delegateType: t,
            bindType: t,
            handle: function(e) {
                var r, i = e.relatedTarget, n = e.handleObj;
                return i && (i === this || _.contains(this, i)) || (e.type = n.origType, r = n.handler.apply(this, arguments), 
                e.type = t), r;
            }
        };
    }), _.fn.extend({
        on: function(e, t, r, i) {
            return Le(this, e, t, r, i);
        },
        one: function(e, t, r, i) {
            return Le(this, e, t, r, i, 1);
        },
        off: function(e, t, r) {
            var i, n;
            if (e && e.preventDefault && e.handleObj) return i = e.handleObj, _(e.delegateTarget).off(i.namespace ? i.origType + "." + i.namespace : i.origType, i.selector, i.handler), 
            this;
            if ("object" == typeof e) {
                for (n in e) this.off(n, t, e[n]);
                return this;
            }
            return !1 !== t && "function" != typeof t || (r = t, t = void 0), !1 === r && (r = Me), 
            this.each(function() {
                _.event.remove(this, e, r, t);
            });
        }
    });
    var Ae = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi, De = /<script|<style|<link/i, Pe = /checked\s*(?:[^=]|=\s*.checked.)/i, ke = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;
    function Ie(e, t) {
        return L(e, "table") && L(11 !== t.nodeType ? t : t.firstChild, "tr") && _(e).children("tbody")[0] || e;
    }
    function Oe(e) {
        return e.type = (null !== e.getAttribute("type")) + "/" + e.type, e;
    }
    function Ue(e) {
        return "true/" === (e.type || "").slice(0, 5) ? e.type = e.type.slice(5) : e.removeAttribute("type"), 
        e;
    }
    function Ne(e, t) {
        var r, i, n, o, s, a, h, l;
        if (1 === t.nodeType) {
            if (Q.hasData(e) && (o = Q.access(e), s = Q.set(t, o), l = o.events)) for (n in delete s.handle, 
            s.events = {}, l) for (r = 0, i = l[n].length; r < i; r++) _.event.add(t, n, l[n][r]);
            K.hasData(e) && (a = K.access(e), h = _.extend({}, a), K.set(t, h));
        }
    }
    function Be(e, t, r, i) {
        t = s.apply([], t);
        var n, o, a, h, l, u, c = 0, p = e.length, d = p - 1, g = t[0], v = m(g);
        if (v || 1 < p && "string" == typeof g && !f.checkClone && Pe.test(g)) return e.each(function(n) {
            var o = e.eq(n);
            v && (t[0] = g.call(this, n, o.html())), Be(o, t, r, i);
        });
        if (p && (o = (n = _e(t, e[0].ownerDocument, !1, e, i)).firstChild, 1 === n.childNodes.length && (n = o), 
        o || i)) {
            for (h = (a = _.map(ge(n, "script"), Oe)).length; c < p; c++) l = n, c !== d && (l = _.clone(l, !0, !0), 
            h && _.merge(a, ge(l, "script"))), r.call(e[c], l, c);
            if (h) for (u = a[a.length - 1].ownerDocument, _.map(a, Ue), c = 0; c < h; c++) l = a[c], 
            fe.test(l.type || "") && !Q.access(l, "globalEval") && _.contains(u, l) && (l.src && "module" !== (l.type || "").toLowerCase() ? _._evalUrl && !l.noModule && _._evalUrl(l.src, {
                nonce: l.nonce || l.getAttribute("nonce")
            }) : y(l.textContent.replace(ke, ""), l, u));
        }
        return e;
    }
    function Fe(e, t, r) {
        for (var i, n = t ? _.filter(t, e) : e, o = 0; null != (i = n[o]); o++) r || 1 !== i.nodeType || _.cleanData(ge(i)), 
        i.parentNode && (r && oe(i) && ve(ge(i, "script")), i.parentNode.removeChild(i));
        return e;
    }
    _.extend({
        htmlPrefilter: function(e) {
            return e.replace(Ae, "<$1></$2>");
        },
        clone: function(e, t, r) {
            var i, n, o, s, a, h, l, u = e.cloneNode(!0), c = oe(e);
            if (!(f.noCloneChecked || 1 !== e.nodeType && 11 !== e.nodeType || _.isXMLDoc(e))) for (s = ge(u), 
            i = 0, n = (o = ge(e)).length; i < n; i++) a = o[i], "input" === (l = (h = s[i]).nodeName.toLowerCase()) && pe.test(a.type) ? h.checked = a.checked : "input" !== l && "textarea" !== l || (h.defaultValue = a.defaultValue);
            if (t) if (r) for (o = o || ge(e), s = s || ge(u), i = 0, n = o.length; i < n; i++) Ne(o[i], s[i]); else Ne(e, u);
            return 0 < (s = ge(u, "script")).length && ve(s, !c && ge(e, "script")), u;
        },
        cleanData: function(e) {
            for (var t, r, i, n = _.event.special, o = 0; void 0 !== (r = e[o]); o++) if (Y(r)) {
                if (t = r[Q.expando]) {
                    if (t.events) for (i in t.events) n[i] ? _.event.remove(r, i) : _.removeEvent(r, i, t.handle);
                    r[Q.expando] = void 0;
                }
                r[K.expando] && (r[K.expando] = void 0);
            }
        }
    }), _.fn.extend({
        detach: function(e) {
            return Fe(this, e, !0);
        },
        remove: function(e) {
            return Fe(this, e);
        },
        text: function(e) {
            return H(this, function(e) {
                return void 0 === e ? _.text(this) : this.empty().each(function() {
                    1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || (this.textContent = e);
                });
            }, null, e, arguments.length);
        },
        append: function() {
            return Be(this, arguments, function(e) {
                1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || Ie(this, e).appendChild(e);
            });
        },
        prepend: function() {
            return Be(this, arguments, function(e) {
                if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                    var t = Ie(this, e);
                    t.insertBefore(e, t.firstChild);
                }
            });
        },
        before: function() {
            return Be(this, arguments, function(e) {
                this.parentNode && this.parentNode.insertBefore(e, this);
            });
        },
        after: function() {
            return Be(this, arguments, function(e) {
                this.parentNode && this.parentNode.insertBefore(e, this.nextSibling);
            });
        },
        empty: function() {
            for (var e, t = 0; null != (e = this[t]); t++) 1 === e.nodeType && (_.cleanData(ge(e, !1)), 
            e.textContent = "");
            return this;
        },
        clone: function(e, t) {
            return e = null != e && e, t = null == t ? e : t, this.map(function() {
                return _.clone(this, e, t);
            });
        },
        html: function(e) {
            return H(this, function(e) {
                var t = this[0] || {}, r = 0, i = this.length;
                if (void 0 === e && 1 === t.nodeType) return t.innerHTML;
                if ("string" == typeof e && !De.test(e) && !me[(de.exec(e) || [ "", "" ])[1].toLowerCase()]) {
                    e = _.htmlPrefilter(e);
                    try {
                        for (;r < i; r++) 1 === (t = this[r] || {}).nodeType && (_.cleanData(ge(t, !1)), 
                        t.innerHTML = e);
                        t = 0;
                    } catch (e) {}
                }
                t && this.empty().append(e);
            }, null, e, arguments.length);
        },
        replaceWith: function() {
            var e = [];
            return Be(this, arguments, function(t) {
                var r = this.parentNode;
                _.inArray(this, e) < 0 && (_.cleanData(ge(this)), r && r.replaceChild(t, this));
            }, e);
        }
    }), _.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
    }, function(e, t) {
        _.fn[e] = function(e) {
            for (var r, i = [], n = _(e), o = n.length - 1, s = 0; s <= o; s++) r = s === o ? this : this.clone(!0), 
            _(n[s])[t](r), a.apply(i, r.get());
            return this.pushStack(i);
        };
    });
    var Ge = new RegExp("^(" + te + ")(?!px)[a-z%]+$", "i"), ze = function(t) {
        var r = t.ownerDocument.defaultView;
        return r && r.opener || (r = e), r.getComputedStyle(t);
    }, je = new RegExp(ie.join("|"), "i");
    function He(e, t, r) {
        var i, n, o, s, a = e.style;
        return (r = r || ze(e)) && ("" !== (s = r.getPropertyValue(t) || r[t]) || oe(e) || (s = _.style(e, t)), 
        !f.pixelBoxStyles() && Ge.test(s) && je.test(t) && (i = a.width, n = a.minWidth, 
        o = a.maxWidth, a.minWidth = a.maxWidth = a.width = s, s = r.width, a.width = i, 
        a.minWidth = n, a.maxWidth = o)), void 0 !== s ? s + "" : s;
    }
    function Ve(e, t) {
        return {
            get: function() {
                if (!e()) return (this.get = t).apply(this, arguments);
                delete this.get;
            }
        };
    }
    !function() {
        function t() {
            if (u) {
                l.style.cssText = "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0", 
                u.style.cssText = "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%", 
                ne.appendChild(l).appendChild(u);
                var t = e.getComputedStyle(u);
                n = "1%" !== t.top, h = 12 === r(t.marginLeft), u.style.right = "60%", a = 36 === r(t.right), 
                o = 36 === r(t.width), u.style.position = "absolute", s = 12 === r(u.offsetWidth / 3), 
                ne.removeChild(l), u = null;
            }
        }
        function r(e) {
            return Math.round(parseFloat(e));
        }
        var n, o, s, a, h, l = i.createElement("div"), u = i.createElement("div");
        u.style && (u.style.backgroundClip = "content-box", u.cloneNode(!0).style.backgroundClip = "", 
        f.clearCloneStyle = "content-box" === u.style.backgroundClip, _.extend(f, {
            boxSizingReliable: function() {
                return t(), o;
            },
            pixelBoxStyles: function() {
                return t(), a;
            },
            pixelPosition: function() {
                return t(), n;
            },
            reliableMarginLeft: function() {
                return t(), h;
            },
            scrollboxSize: function() {
                return t(), s;
            }
        }));
    }();
    var We = [ "Webkit", "Moz", "ms" ], qe = i.createElement("div").style, Xe = {};
    function Ye(e) {
        return _.cssProps[e] || Xe[e] || (e in qe ? e : Xe[e] = function(e) {
            for (var t = e[0].toUpperCase() + e.slice(1), r = We.length; r--; ) if ((e = We[r] + t) in qe) return e;
        }(e) || e);
    }
    var Ze = /^(none|table(?!-c[ea]).+)/, Qe = /^--/, Ke = {
        position: "absolute",
        visibility: "hidden",
        display: "block"
    }, $e = {
        letterSpacing: "0",
        fontWeight: "400"
    };
    function Je(e, t, r) {
        var i = re.exec(t);
        return i ? Math.max(0, i[2] - (r || 0)) + (i[3] || "px") : t;
    }
    function et(e, t, r, i, n, o) {
        var s = "width" === t ? 1 : 0, a = 0, h = 0;
        if (r === (i ? "border" : "content")) return 0;
        for (;s < 4; s += 2) "margin" === r && (h += _.css(e, r + ie[s], !0, n)), i ? ("content" === r && (h -= _.css(e, "padding" + ie[s], !0, n)), 
        "margin" !== r && (h -= _.css(e, "border" + ie[s] + "Width", !0, n))) : (h += _.css(e, "padding" + ie[s], !0, n), 
        "padding" !== r ? h += _.css(e, "border" + ie[s] + "Width", !0, n) : a += _.css(e, "border" + ie[s] + "Width", !0, n));
        return !i && 0 <= o && (h += Math.max(0, Math.ceil(e["offset" + t[0].toUpperCase() + t.slice(1)] - o - h - a - .5)) || 0), 
        h;
    }
    function tt(e, t, r) {
        var i = ze(e), n = (!f.boxSizingReliable() || r) && "border-box" === _.css(e, "boxSizing", !1, i), o = n, s = He(e, t, i), a = "offset" + t[0].toUpperCase() + t.slice(1);
        if (Ge.test(s)) {
            if (!r) return s;
            s = "auto";
        }
        return (!f.boxSizingReliable() && n || "auto" === s || !parseFloat(s) && "inline" === _.css(e, "display", !1, i)) && e.getClientRects().length && (n = "border-box" === _.css(e, "boxSizing", !1, i), 
        (o = a in e) && (s = e[a])), (s = parseFloat(s) || 0) + et(e, t, r || (n ? "border" : "content"), o, i, s) + "px";
    }
    function rt(e, t, r, i, n) {
        return new rt.prototype.init(e, t, r, i, n);
    }
    _.extend({
        cssHooks: {
            opacity: {
                get: function(e, t) {
                    if (t) {
                        var r = He(e, "opacity");
                        return "" === r ? "1" : r;
                    }
                }
            }
        },
        cssNumber: {
            animationIterationCount: !0,
            columnCount: !0,
            fillOpacity: !0,
            flexGrow: !0,
            flexShrink: !0,
            fontWeight: !0,
            gridArea: !0,
            gridColumn: !0,
            gridColumnEnd: !0,
            gridColumnStart: !0,
            gridRow: !0,
            gridRowEnd: !0,
            gridRowStart: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0
        },
        cssProps: {},
        style: function(e, t, r, i) {
            if (e && 3 !== e.nodeType && 8 !== e.nodeType && e.style) {
                var n, o, s, a = X(t), h = Qe.test(t), l = e.style;
                if (h || (t = Ye(a)), s = _.cssHooks[t] || _.cssHooks[a], void 0 === r) return s && "get" in s && void 0 !== (n = s.get(e, !1, i)) ? n : l[t];
                "string" == (o = typeof r) && (n = re.exec(r)) && n[1] && (r = le(e, t, n), o = "number"), 
                null != r && r == r && ("number" !== o || h || (r += n && n[3] || (_.cssNumber[a] ? "" : "px")), 
                f.clearCloneStyle || "" !== r || 0 !== t.indexOf("background") || (l[t] = "inherit"), 
                s && "set" in s && void 0 === (r = s.set(e, r, i)) || (h ? l.setProperty(t, r) : l[t] = r));
            }
        },
        css: function(e, t, r, i) {
            var n, o, s, a = X(t);
            return Qe.test(t) || (t = Ye(a)), (s = _.cssHooks[t] || _.cssHooks[a]) && "get" in s && (n = s.get(e, !0, r)), 
            void 0 === n && (n = He(e, t, i)), "normal" === n && t in $e && (n = $e[t]), "" === r || r ? (o = parseFloat(n), 
            !0 === r || isFinite(o) ? o || 0 : n) : n;
        }
    }), _.each([ "height", "width" ], function(e, t) {
        _.cssHooks[t] = {
            get: function(e, r, i) {
                if (r) return !Ze.test(_.css(e, "display")) || e.getClientRects().length && e.getBoundingClientRect().width ? tt(e, t, i) : he(e, Ke, function() {
                    return tt(e, t, i);
                });
            },
            set: function(e, r, i) {
                var n, o = ze(e), s = !f.scrollboxSize() && "absolute" === o.position, a = (s || i) && "border-box" === _.css(e, "boxSizing", !1, o), h = i ? et(e, t, i, a, o) : 0;
                return a && s && (h -= Math.ceil(e["offset" + t[0].toUpperCase() + t.slice(1)] - parseFloat(o[t]) - et(e, t, "border", !1, o) - .5)), 
                h && (n = re.exec(r)) && "px" !== (n[3] || "px") && (e.style[t] = r, r = _.css(e, t)), 
                Je(0, r, h);
            }
        };
    }), _.cssHooks.marginLeft = Ve(f.reliableMarginLeft, function(e, t) {
        if (t) return (parseFloat(He(e, "marginLeft")) || e.getBoundingClientRect().left - he(e, {
            marginLeft: 0
        }, function() {
            return e.getBoundingClientRect().left;
        })) + "px";
    }), _.each({
        margin: "",
        padding: "",
        border: "Width"
    }, function(e, t) {
        _.cssHooks[e + t] = {
            expand: function(r) {
                for (var i = 0, n = {}, o = "string" == typeof r ? r.split(" ") : [ r ]; i < 4; i++) n[e + ie[i] + t] = o[i] || o[i - 2] || o[0];
                return n;
            }
        }, "margin" !== e && (_.cssHooks[e + t].set = Je);
    }), _.fn.extend({
        css: function(e, t) {
            return H(this, function(e, t, r) {
                var i, n, o = {}, s = 0;
                if (Array.isArray(t)) {
                    for (i = ze(e), n = t.length; s < n; s++) o[t[s]] = _.css(e, t[s], !1, i);
                    return o;
                }
                return void 0 !== r ? _.style(e, t, r) : _.css(e, t);
            }, e, t, 1 < arguments.length);
        }
    }), ((_.Tween = rt).prototype = {
        constructor: rt,
        init: function(e, t, r, i, n, o) {
            this.elem = e, this.prop = r, this.easing = n || _.easing._default, this.options = t, 
            this.start = this.now = this.cur(), this.end = i, this.unit = o || (_.cssNumber[r] ? "" : "px");
        },
        cur: function() {
            var e = rt.propHooks[this.prop];
            return e && e.get ? e.get(this) : rt.propHooks._default.get(this);
        },
        run: function(e) {
            var t, r = rt.propHooks[this.prop];
            return this.options.duration ? this.pos = t = _.easing[this.easing](e, this.options.duration * e, 0, 1, this.options.duration) : this.pos = t = e, 
            this.now = (this.end - this.start) * t + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), 
            r && r.set ? r.set(this) : rt.propHooks._default.set(this), this;
        }
    }).init.prototype = rt.prototype, (rt.propHooks = {
        _default: {
            get: function(e) {
                var t;
                return 1 !== e.elem.nodeType || null != e.elem[e.prop] && null == e.elem.style[e.prop] ? e.elem[e.prop] : (t = _.css(e.elem, e.prop, "")) && "auto" !== t ? t : 0;
            },
            set: function(e) {
                _.fx.step[e.prop] ? _.fx.step[e.prop](e) : 1 !== e.elem.nodeType || !_.cssHooks[e.prop] && null == e.elem.style[Ye(e.prop)] ? e.elem[e.prop] = e.now : _.style(e.elem, e.prop, e.now + e.unit);
            }
        }
    }).scrollTop = rt.propHooks.scrollLeft = {
        set: function(e) {
            e.elem.nodeType && e.elem.parentNode && (e.elem[e.prop] = e.now);
        }
    }, _.easing = {
        linear: function(e) {
            return e;
        },
        swing: function(e) {
            return .5 - Math.cos(e * Math.PI) / 2;
        },
        _default: "swing"
    }, _.fx = rt.prototype.init, _.fx.step = {};
    var it, nt, ot, st, at = /^(?:toggle|show|hide)$/, ht = /queueHooks$/;
    function lt() {
        nt && (!1 === i.hidden && e.requestAnimationFrame ? e.requestAnimationFrame(lt) : e.setTimeout(lt, _.fx.interval), 
        _.fx.tick());
    }
    function ut() {
        return e.setTimeout(function() {
            it = void 0;
        }), it = Date.now();
    }
    function ct(e, t) {
        var r, i = 0, n = {
            height: e
        };
        for (t = t ? 1 : 0; i < 4; i += 2 - t) n["margin" + (r = ie[i])] = n["padding" + r] = e;
        return t && (n.opacity = n.width = e), n;
    }
    function pt(e, t, r) {
        for (var i, n = (dt.tweeners[t] || []).concat(dt.tweeners["*"]), o = 0, s = n.length; o < s; o++) if (i = n[o].call(r, t, e)) return i;
    }
    function dt(e, t, r) {
        var i, n, o = 0, s = dt.prefilters.length, a = _.Deferred().always(function() {
            delete h.elem;
        }), h = function() {
            if (n) return !1;
            for (var t = it || ut(), r = Math.max(0, l.startTime + l.duration - t), i = 1 - (r / l.duration || 0), o = 0, s = l.tweens.length; o < s; o++) l.tweens[o].run(i);
            return a.notifyWith(e, [ l, i, r ]), i < 1 && s ? r : (s || a.notifyWith(e, [ l, 1, 0 ]), 
            a.resolveWith(e, [ l ]), !1);
        }, l = a.promise({
            elem: e,
            props: _.extend({}, t),
            opts: _.extend(!0, {
                specialEasing: {},
                easing: _.easing._default
            }, r),
            originalProperties: t,
            originalOptions: r,
            startTime: it || ut(),
            duration: r.duration,
            tweens: [],
            createTween: function(t, r) {
                var i = _.Tween(e, l.opts, t, r, l.opts.specialEasing[t] || l.opts.easing);
                return l.tweens.push(i), i;
            },
            stop: function(t) {
                var r = 0, i = t ? l.tweens.length : 0;
                if (n) return this;
                for (n = !0; r < i; r++) l.tweens[r].run(1);
                return t ? (a.notifyWith(e, [ l, 1, 0 ]), a.resolveWith(e, [ l, t ])) : a.rejectWith(e, [ l, t ]), 
                this;
            }
        }), u = l.props;
        for (function(e, t) {
            var r, i, n, o, s;
            for (r in e) if (n = t[i = X(r)], o = e[r], Array.isArray(o) && (n = o[1], o = e[r] = o[0]), 
            r !== i && (e[i] = o, delete e[r]), (s = _.cssHooks[i]) && "expand" in s) for (r in o = s.expand(o), 
            delete e[i], o) r in e || (e[r] = o[r], t[r] = n); else t[i] = n;
        }(u, l.opts.specialEasing); o < s; o++) if (i = dt.prefilters[o].call(l, e, u, l.opts)) return m(i.stop) && (_._queueHooks(l.elem, l.opts.queue).stop = i.stop.bind(i)), 
        i;
        return _.map(u, pt, l), m(l.opts.start) && l.opts.start.call(e, l), l.progress(l.opts.progress).done(l.opts.done, l.opts.complete).fail(l.opts.fail).always(l.opts.always), 
        _.fx.timer(_.extend(h, {
            elem: e,
            anim: l,
            queue: l.opts.queue
        })), l;
    }
    _.Animation = _.extend(dt, {
        tweeners: {
            "*": [ function(e, t) {
                var r = this.createTween(e, t);
                return le(r.elem, e, re.exec(t), r), r;
            } ]
        },
        tweener: function(e, t) {
            m(e) ? (t = e, e = [ "*" ]) : e = e.match(U);
            for (var r, i = 0, n = e.length; i < n; i++) r = e[i], dt.tweeners[r] = dt.tweeners[r] || [], 
            dt.tweeners[r].unshift(t);
        },
        prefilters: [ function(e, t, r) {
            var i, n, o, s, a, h, l, u, c = "width" in t || "height" in t, p = this, d = {}, f = e.style, m = e.nodeType && ae(e), g = Q.get(e, "fxshow");
            for (i in r.queue || (null == (s = _._queueHooks(e, "fx")).unqueued && (s.unqueued = 0, 
            a = s.empty.fire, s.empty.fire = function() {
                s.unqueued || a();
            }), s.unqueued++, p.always(function() {
                p.always(function() {
                    s.unqueued--, _.queue(e, "fx").length || s.empty.fire();
                });
            })), t) if (n = t[i], at.test(n)) {
                if (delete t[i], o = o || "toggle" === n, n === (m ? "hide" : "show")) {
                    if ("show" !== n || !g || void 0 === g[i]) continue;
                    m = !0;
                }
                d[i] = g && g[i] || _.style(e, i);
            }
            if ((h = !_.isEmptyObject(t)) || !_.isEmptyObject(d)) for (i in c && 1 === e.nodeType && (r.overflow = [ f.overflow, f.overflowX, f.overflowY ], 
            null == (l = g && g.display) && (l = Q.get(e, "display")), "none" === (u = _.css(e, "display")) && (l ? u = l : (ce([ e ], !0), 
            l = e.style.display || l, u = _.css(e, "display"), ce([ e ]))), ("inline" === u || "inline-block" === u && null != l) && "none" === _.css(e, "float") && (h || (p.done(function() {
                f.display = l;
            }), null == l && (u = f.display, l = "none" === u ? "" : u)), f.display = "inline-block")), 
            r.overflow && (f.overflow = "hidden", p.always(function() {
                f.overflow = r.overflow[0], f.overflowX = r.overflow[1], f.overflowY = r.overflow[2];
            })), h = !1, d) h || (g ? "hidden" in g && (m = g.hidden) : g = Q.access(e, "fxshow", {
                display: l
            }), o && (g.hidden = !m), m && ce([ e ], !0), p.done(function() {
                for (i in m || ce([ e ]), Q.remove(e, "fxshow"), d) _.style(e, i, d[i]);
            })), h = pt(m ? g[i] : 0, i, p), i in g || (g[i] = h.start, m && (h.end = h.start, 
            h.start = 0));
        } ],
        prefilter: function(e, t) {
            t ? dt.prefilters.unshift(e) : dt.prefilters.push(e);
        }
    }), _.speed = function(e, t, r) {
        var i = e && "object" == typeof e ? _.extend({}, e) : {
            complete: r || !r && t || m(e) && e,
            duration: e,
            easing: r && t || t && !m(t) && t
        };
        return _.fx.off ? i.duration = 0 : "number" != typeof i.duration && (i.duration in _.fx.speeds ? i.duration = _.fx.speeds[i.duration] : i.duration = _.fx.speeds._default), 
        null != i.queue && !0 !== i.queue || (i.queue = "fx"), i.old = i.complete, i.complete = function() {
            m(i.old) && i.old.call(this), i.queue && _.dequeue(this, i.queue);
        }, i;
    }, _.fn.extend({
        fadeTo: function(e, t, r, i) {
            return this.filter(ae).css("opacity", 0).show().end().animate({
                opacity: t
            }, e, r, i);
        },
        animate: function(e, t, r, i) {
            var n = _.isEmptyObject(e), o = _.speed(t, r, i), s = function() {
                var t = dt(this, _.extend({}, e), o);
                (n || Q.get(this, "finish")) && t.stop(!0);
            };
            return s.finish = s, n || !1 === o.queue ? this.each(s) : this.queue(o.queue, s);
        },
        stop: function(e, t, r) {
            var i = function(e) {
                var t = e.stop;
                delete e.stop, t(r);
            };
            return "string" != typeof e && (r = t, t = e, e = void 0), t && !1 !== e && this.queue(e || "fx", []), 
            this.each(function() {
                var t = !0, n = null != e && e + "queueHooks", o = _.timers, s = Q.get(this);
                if (n) s[n] && s[n].stop && i(s[n]); else for (n in s) s[n] && s[n].stop && ht.test(n) && i(s[n]);
                for (n = o.length; n--; ) o[n].elem !== this || null != e && o[n].queue !== e || (o[n].anim.stop(r), 
                t = !1, o.splice(n, 1));
                !t && r || _.dequeue(this, e);
            });
        },
        finish: function(e) {
            return !1 !== e && (e = e || "fx"), this.each(function() {
                var t, r = Q.get(this), i = r[e + "queue"], n = r[e + "queueHooks"], o = _.timers, s = i ? i.length : 0;
                for (r.finish = !0, _.queue(this, e, []), n && n.stop && n.stop.call(this, !0), 
                t = o.length; t--; ) o[t].elem === this && o[t].queue === e && (o[t].anim.stop(!0), 
                o.splice(t, 1));
                for (t = 0; t < s; t++) i[t] && i[t].finish && i[t].finish.call(this);
                delete r.finish;
            });
        }
    }), _.each([ "toggle", "show", "hide" ], function(e, t) {
        var r = _.fn[t];
        _.fn[t] = function(e, i, n) {
            return null == e || "boolean" == typeof e ? r.apply(this, arguments) : this.animate(ct(t, !0), e, i, n);
        };
    }), _.each({
        slideDown: ct("show"),
        slideUp: ct("hide"),
        slideToggle: ct("toggle"),
        fadeIn: {
            opacity: "show"
        },
        fadeOut: {
            opacity: "hide"
        },
        fadeToggle: {
            opacity: "toggle"
        }
    }, function(e, t) {
        _.fn[e] = function(e, r, i) {
            return this.animate(t, e, r, i);
        };
    }), _.timers = [], _.fx.tick = function() {
        var e, t = 0, r = _.timers;
        for (it = Date.now(); t < r.length; t++) (e = r[t])() || r[t] !== e || r.splice(t--, 1);
        r.length || _.fx.stop(), it = void 0;
    }, _.fx.timer = function(e) {
        _.timers.push(e), _.fx.start();
    }, _.fx.interval = 13, _.fx.start = function() {
        nt || (nt = !0, lt());
    }, _.fx.stop = function() {
        nt = null;
    }, _.fx.speeds = {
        slow: 600,
        fast: 200,
        _default: 400
    }, _.fn.delay = function(t, r) {
        return t = _.fx && _.fx.speeds[t] || t, r = r || "fx", this.queue(r, function(r, i) {
            var n = e.setTimeout(r, t);
            i.stop = function() {
                e.clearTimeout(n);
            };
        });
    }, ot = i.createElement("input"), st = i.createElement("select").appendChild(i.createElement("option")), 
    ot.type = "checkbox", f.checkOn = "" !== ot.value, f.optSelected = st.selected, 
    (ot = i.createElement("input")).value = "t", ot.type = "radio", f.radioValue = "t" === ot.value;
    var ft, mt = _.expr.attrHandle;
    _.fn.extend({
        attr: function(e, t) {
            return H(this, _.attr, e, t, 1 < arguments.length);
        },
        removeAttr: function(e) {
            return this.each(function() {
                _.removeAttr(this, e);
            });
        }
    }), _.extend({
        attr: function(e, t, r) {
            var i, n, o = e.nodeType;
            if (3 !== o && 8 !== o && 2 !== o) return void 0 === e.getAttribute ? _.prop(e, t, r) : (1 === o && _.isXMLDoc(e) || (n = _.attrHooks[t.toLowerCase()] || (_.expr.match.bool.test(t) ? ft : void 0)), 
            void 0 !== r ? null === r ? void _.removeAttr(e, t) : n && "set" in n && void 0 !== (i = n.set(e, r, t)) ? i : (e.setAttribute(t, r + ""), 
            r) : n && "get" in n && null !== (i = n.get(e, t)) ? i : null == (i = _.find.attr(e, t)) ? void 0 : i);
        },
        attrHooks: {
            type: {
                set: function(e, t) {
                    if (!f.radioValue && "radio" === t && L(e, "input")) {
                        var r = e.value;
                        return e.setAttribute("type", t), r && (e.value = r), t;
                    }
                }
            }
        },
        removeAttr: function(e, t) {
            var r, i = 0, n = t && t.match(U);
            if (n && 1 === e.nodeType) for (;r = n[i++]; ) e.removeAttribute(r);
        }
    }), ft = {
        set: function(e, t, r) {
            return !1 === t ? _.removeAttr(e, r) : e.setAttribute(r, r), r;
        }
    }, _.each(_.expr.match.bool.source.match(/\w+/g), function(e, t) {
        var r = mt[t] || _.find.attr;
        mt[t] = function(e, t, i) {
            var n, o, s = t.toLowerCase();
            return i || (o = mt[s], mt[s] = n, n = null != r(e, t, i) ? s : null, mt[s] = o), 
            n;
        };
    });
    var gt = /^(?:input|select|textarea|button)$/i, vt = /^(?:a|area)$/i;
    function yt(e) {
        return (e.match(U) || []).join(" ");
    }
    function bt(e) {
        return e.getAttribute && e.getAttribute("class") || "";
    }
    function xt(e) {
        return Array.isArray(e) ? e : "string" == typeof e && e.match(U) || [];
    }
    _.fn.extend({
        prop: function(e, t) {
            return H(this, _.prop, e, t, 1 < arguments.length);
        },
        removeProp: function(e) {
            return this.each(function() {
                delete this[_.propFix[e] || e];
            });
        }
    }), _.extend({
        prop: function(e, t, r) {
            var i, n, o = e.nodeType;
            if (3 !== o && 8 !== o && 2 !== o) return 1 === o && _.isXMLDoc(e) || (t = _.propFix[t] || t, 
            n = _.propHooks[t]), void 0 !== r ? n && "set" in n && void 0 !== (i = n.set(e, r, t)) ? i : e[t] = r : n && "get" in n && null !== (i = n.get(e, t)) ? i : e[t];
        },
        propHooks: {
            tabIndex: {
                get: function(e) {
                    var t = _.find.attr(e, "tabindex");
                    return t ? parseInt(t, 10) : gt.test(e.nodeName) || vt.test(e.nodeName) && e.href ? 0 : -1;
                }
            }
        },
        propFix: {
            for: "htmlFor",
            class: "className"
        }
    }), f.optSelected || (_.propHooks.selected = {
        get: function(e) {
            var t = e.parentNode;
            return t && t.parentNode && t.parentNode.selectedIndex, null;
        },
        set: function(e) {
            var t = e.parentNode;
            t && (t.selectedIndex, t.parentNode && t.parentNode.selectedIndex);
        }
    }), _.each([ "tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable" ], function() {
        _.propFix[this.toLowerCase()] = this;
    }), _.fn.extend({
        addClass: function(e) {
            var t, r, i, n, o, s, a, h = 0;
            if (m(e)) return this.each(function(t) {
                _(this).addClass(e.call(this, t, bt(this)));
            });
            if ((t = xt(e)).length) for (;r = this[h++]; ) if (n = bt(r), i = 1 === r.nodeType && " " + yt(n) + " ") {
                for (s = 0; o = t[s++]; ) i.indexOf(" " + o + " ") < 0 && (i += o + " ");
                n !== (a = yt(i)) && r.setAttribute("class", a);
            }
            return this;
        },
        removeClass: function(e) {
            var t, r, i, n, o, s, a, h = 0;
            if (m(e)) return this.each(function(t) {
                _(this).removeClass(e.call(this, t, bt(this)));
            });
            if (!arguments.length) return this.attr("class", "");
            if ((t = xt(e)).length) for (;r = this[h++]; ) if (n = bt(r), i = 1 === r.nodeType && " " + yt(n) + " ") {
                for (s = 0; o = t[s++]; ) for (;-1 < i.indexOf(" " + o + " "); ) i = i.replace(" " + o + " ", " ");
                n !== (a = yt(i)) && r.setAttribute("class", a);
            }
            return this;
        },
        toggleClass: function(e, t) {
            var r = typeof e, i = "string" === r || Array.isArray(e);
            return "boolean" == typeof t && i ? t ? this.addClass(e) : this.removeClass(e) : m(e) ? this.each(function(r) {
                _(this).toggleClass(e.call(this, r, bt(this), t), t);
            }) : this.each(function() {
                var t, n, o, s;
                if (i) for (n = 0, o = _(this), s = xt(e); t = s[n++]; ) o.hasClass(t) ? o.removeClass(t) : o.addClass(t); else void 0 !== e && "boolean" !== r || ((t = bt(this)) && Q.set(this, "__className__", t), 
                this.setAttribute && this.setAttribute("class", t || !1 === e ? "" : Q.get(this, "__className__") || ""));
            });
        },
        hasClass: function(e) {
            var t, r, i = 0;
            for (t = " " + e + " "; r = this[i++]; ) if (1 === r.nodeType && -1 < (" " + yt(bt(r)) + " ").indexOf(t)) return !0;
            return !1;
        }
    });
    var _t = /\r/g;
    _.fn.extend({
        val: function(e) {
            var t, r, i, n = this[0];
            return arguments.length ? (i = m(e), this.each(function(r) {
                var n;
                1 === this.nodeType && (null == (n = i ? e.call(this, r, _(this).val()) : e) ? n = "" : "number" == typeof n ? n += "" : Array.isArray(n) && (n = _.map(n, function(e) {
                    return null == e ? "" : e + "";
                })), (t = _.valHooks[this.type] || _.valHooks[this.nodeName.toLowerCase()]) && "set" in t && void 0 !== t.set(this, n, "value") || (this.value = n));
            })) : n ? (t = _.valHooks[n.type] || _.valHooks[n.nodeName.toLowerCase()]) && "get" in t && void 0 !== (r = t.get(n, "value")) ? r : "string" == typeof (r = n.value) ? r.replace(_t, "") : null == r ? "" : r : void 0;
        }
    }), _.extend({
        valHooks: {
            option: {
                get: function(e) {
                    var t = _.find.attr(e, "value");
                    return null != t ? t : yt(_.text(e));
                }
            },
            select: {
                get: function(e) {
                    var t, r, i, n = e.options, o = e.selectedIndex, s = "select-one" === e.type, a = s ? null : [], h = s ? o + 1 : n.length;
                    for (i = o < 0 ? h : s ? o : 0; i < h; i++) if (((r = n[i]).selected || i === o) && !r.disabled && (!r.parentNode.disabled || !L(r.parentNode, "optgroup"))) {
                        if (t = _(r).val(), s) return t;
                        a.push(t);
                    }
                    return a;
                },
                set: function(e, t) {
                    for (var r, i, n = e.options, o = _.makeArray(t), s = n.length; s--; ) ((i = n[s]).selected = -1 < _.inArray(_.valHooks.option.get(i), o)) && (r = !0);
                    return r || (e.selectedIndex = -1), o;
                }
            }
        }
    }), _.each([ "radio", "checkbox" ], function() {
        _.valHooks[this] = {
            set: function(e, t) {
                if (Array.isArray(t)) return e.checked = -1 < _.inArray(_(e).val(), t);
            }
        }, f.checkOn || (_.valHooks[this].get = function(e) {
            return null === e.getAttribute("value") ? "on" : e.value;
        });
    }), f.focusin = "onfocusin" in e;
    var wt = /^(?:focusinfocus|focusoutblur)$/, St = function(e) {
        e.stopPropagation();
    };
    _.extend(_.event, {
        trigger: function(t, r, n, o) {
            var s, a, h, l, u, p, d, f, v = [ n || i ], y = c.call(t, "type") ? t.type : t, b = c.call(t, "namespace") ? t.namespace.split(".") : [];
            if (a = f = h = n = n || i, 3 !== n.nodeType && 8 !== n.nodeType && !wt.test(y + _.event.triggered) && (-1 < y.indexOf(".") && (y = (b = y.split(".")).shift(), 
            b.sort()), u = y.indexOf(":") < 0 && "on" + y, (t = t[_.expando] ? t : new _.Event(y, "object" == typeof t && t)).isTrigger = o ? 2 : 3, 
            t.namespace = b.join("."), t.rnamespace = t.namespace ? new RegExp("(^|\\.)" + b.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, 
            t.result = void 0, t.target || (t.target = n), r = null == r ? [ t ] : _.makeArray(r, [ t ]), 
            d = _.event.special[y] || {}, o || !d.trigger || !1 !== d.trigger.apply(n, r))) {
                if (!o && !d.noBubble && !g(n)) {
                    for (l = d.delegateType || y, wt.test(l + y) || (a = a.parentNode); a; a = a.parentNode) v.push(a), 
                    h = a;
                    h === (n.ownerDocument || i) && v.push(h.defaultView || h.parentWindow || e);
                }
                for (s = 0; (a = v[s++]) && !t.isPropagationStopped(); ) f = a, t.type = 1 < s ? l : d.bindType || y, 
                (p = (Q.get(a, "events") || {})[t.type] && Q.get(a, "handle")) && p.apply(a, r), 
                (p = u && a[u]) && p.apply && Y(a) && (t.result = p.apply(a, r), !1 === t.result && t.preventDefault());
                return t.type = y, o || t.isDefaultPrevented() || d._default && !1 !== d._default.apply(v.pop(), r) || !Y(n) || u && m(n[y]) && !g(n) && ((h = n[u]) && (n[u] = null), 
                _.event.triggered = y, t.isPropagationStopped() && f.addEventListener(y, St), n[y](), 
                t.isPropagationStopped() && f.removeEventListener(y, St), _.event.triggered = void 0, 
                h && (n[u] = h)), t.result;
            }
        },
        simulate: function(e, t, r) {
            var i = _.extend(new _.Event(), r, {
                type: e,
                isSimulated: !0
            });
            _.event.trigger(i, null, t);
        }
    }), _.fn.extend({
        trigger: function(e, t) {
            return this.each(function() {
                _.event.trigger(e, t, this);
            });
        },
        triggerHandler: function(e, t) {
            var r = this[0];
            if (r) return _.event.trigger(e, t, r, !0);
        }
    }), f.focusin || _.each({
        focus: "focusin",
        blur: "focusout"
    }, function(e, t) {
        var r = function(e) {
            _.event.simulate(t, e.target, _.event.fix(e));
        };
        _.event.special[t] = {
            setup: function() {
                var i = this.ownerDocument || this, n = Q.access(i, t);
                n || i.addEventListener(e, r, !0), Q.access(i, t, (n || 0) + 1);
            },
            teardown: function() {
                var i = this.ownerDocument || this, n = Q.access(i, t) - 1;
                n ? Q.access(i, t, n) : (i.removeEventListener(e, r, !0), Q.remove(i, t));
            }
        };
    });
    var Tt = e.location, Et = Date.now(), Mt = /\?/;
    _.parseXML = function(t) {
        var r;
        if (!t || "string" != typeof t) return null;
        try {
            r = new e.DOMParser().parseFromString(t, "text/xml");
        } catch (t) {
            r = void 0;
        }
        return r && !r.getElementsByTagName("parsererror").length || _.error("Invalid XML: " + t), 
        r;
    };
    var Ct = /\[\]$/, Lt = /\r?\n/g, Rt = /^(?:submit|button|image|reset|file)$/i, At = /^(?:input|select|textarea|keygen)/i;
    function Dt(e, t, r, i) {
        var n;
        if (Array.isArray(t)) _.each(t, function(t, n) {
            r || Ct.test(e) ? i(e, n) : Dt(e + "[" + ("object" == typeof n && null != n ? t : "") + "]", n, r, i);
        }); else if (r || "object" !== b(t)) i(e, t); else for (n in t) Dt(e + "[" + n + "]", t[n], r, i);
    }
    _.param = function(e, t) {
        var r, i = [], n = function(e, t) {
            var r = m(t) ? t() : t;
            i[i.length] = encodeURIComponent(e) + "=" + encodeURIComponent(null == r ? "" : r);
        };
        if (null == e) return "";
        if (Array.isArray(e) || e.jquery && !_.isPlainObject(e)) _.each(e, function() {
            n(this.name, this.value);
        }); else for (r in e) Dt(r, e[r], t, n);
        return i.join("&");
    }, _.fn.extend({
        serialize: function() {
            return _.param(this.serializeArray());
        },
        serializeArray: function() {
            return this.map(function() {
                var e = _.prop(this, "elements");
                return e ? _.makeArray(e) : this;
            }).filter(function() {
                var e = this.type;
                return this.name && !_(this).is(":disabled") && At.test(this.nodeName) && !Rt.test(e) && (this.checked || !pe.test(e));
            }).map(function(e, t) {
                var r = _(this).val();
                return null == r ? null : Array.isArray(r) ? _.map(r, function(e) {
                    return {
                        name: t.name,
                        value: e.replace(Lt, "\r\n")
                    };
                }) : {
                    name: t.name,
                    value: r.replace(Lt, "\r\n")
                };
            }).get();
        }
    });
    var Pt = /%20/g, kt = /#.*$/, It = /([?&])_=[^&]*/, Ot = /^(.*?):[ \t]*([^\r\n]*)$/gm, Ut = /^(?:GET|HEAD)$/, Nt = /^\/\//, Bt = {}, Ft = {}, Gt = "*/".concat("*"), zt = i.createElement("a");
    function jt(e) {
        return function(t, r) {
            "string" != typeof t && (r = t, t = "*");
            var i, n = 0, o = t.toLowerCase().match(U) || [];
            if (m(r)) for (;i = o[n++]; ) "+" === i[0] ? (i = i.slice(1) || "*", (e[i] = e[i] || []).unshift(r)) : (e[i] = e[i] || []).push(r);
        };
    }
    function Ht(e, t, r, i) {
        var n = {}, o = e === Ft;
        function s(a) {
            var h;
            return n[a] = !0, _.each(e[a] || [], function(e, a) {
                var l = a(t, r, i);
                return "string" != typeof l || o || n[l] ? o ? !(h = l) : void 0 : (t.dataTypes.unshift(l), 
                s(l), !1);
            }), h;
        }
        return s(t.dataTypes[0]) || !n["*"] && s("*");
    }
    function Vt(e, t) {
        var r, i, n = _.ajaxSettings.flatOptions || {};
        for (r in t) void 0 !== t[r] && ((n[r] ? e : i || (i = {}))[r] = t[r]);
        return i && _.extend(!0, e, i), e;
    }
    zt.href = Tt.href, _.extend({
        active: 0,
        lastModified: {},
        etag: {},
        ajaxSettings: {
            url: Tt.href,
            type: "GET",
            isLocal: /^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(Tt.protocol),
            global: !0,
            processData: !0,
            async: !0,
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            accepts: {
                "*": Gt,
                text: "text/plain",
                html: "text/html",
                xml: "application/xml, text/xml",
                json: "application/json, text/javascript"
            },
            contents: {
                xml: /\bxml\b/,
                html: /\bhtml/,
                json: /\bjson\b/
            },
            responseFields: {
                xml: "responseXML",
                text: "responseText",
                json: "responseJSON"
            },
            converters: {
                "* text": String,
                "text html": !0,
                "text json": JSON.parse,
                "text xml": _.parseXML
            },
            flatOptions: {
                url: !0,
                context: !0
            }
        },
        ajaxSetup: function(e, t) {
            return t ? Vt(Vt(e, _.ajaxSettings), t) : Vt(_.ajaxSettings, e);
        },
        ajaxPrefilter: jt(Bt),
        ajaxTransport: jt(Ft),
        ajax: function(t, r) {
            "object" == typeof t && (r = t, t = void 0), r = r || {};
            var n, o, s, a, h, l, u, c, p, d, f = _.ajaxSetup({}, r), m = f.context || f, g = f.context && (m.nodeType || m.jquery) ? _(m) : _.event, v = _.Deferred(), y = _.Callbacks("once memory"), b = f.statusCode || {}, x = {}, w = {}, S = "canceled", T = {
                readyState: 0,
                getResponseHeader: function(e) {
                    var t;
                    if (u) {
                        if (!a) for (a = {}; t = Ot.exec(s); ) a[t[1].toLowerCase() + " "] = (a[t[1].toLowerCase() + " "] || []).concat(t[2]);
                        t = a[e.toLowerCase() + " "];
                    }
                    return null == t ? null : t.join(", ");
                },
                getAllResponseHeaders: function() {
                    return u ? s : null;
                },
                setRequestHeader: function(e, t) {
                    return null == u && (e = w[e.toLowerCase()] = w[e.toLowerCase()] || e, x[e] = t), 
                    this;
                },
                overrideMimeType: function(e) {
                    return null == u && (f.mimeType = e), this;
                },
                statusCode: function(e) {
                    var t;
                    if (e) if (u) T.always(e[T.status]); else for (t in e) b[t] = [ b[t], e[t] ];
                    return this;
                },
                abort: function(e) {
                    var t = e || S;
                    return n && n.abort(t), E(0, t), this;
                }
            };
            if (v.promise(T), f.url = ((t || f.url || Tt.href) + "").replace(Nt, Tt.protocol + "//"), 
            f.type = r.method || r.type || f.method || f.type, f.dataTypes = (f.dataType || "*").toLowerCase().match(U) || [ "" ], 
            null == f.crossDomain) {
                l = i.createElement("a");
                try {
                    l.href = f.url, l.href = l.href, f.crossDomain = zt.protocol + "//" + zt.host != l.protocol + "//" + l.host;
                } catch (t) {
                    f.crossDomain = !0;
                }
            }
            if (f.data && f.processData && "string" != typeof f.data && (f.data = _.param(f.data, f.traditional)), 
            Ht(Bt, f, r, T), u) return T;
            for (p in (c = _.event && f.global) && 0 == _.active++ && _.event.trigger("ajaxStart"), 
            f.type = f.type.toUpperCase(), f.hasContent = !Ut.test(f.type), o = f.url.replace(kt, ""), 
            f.hasContent ? f.data && f.processData && 0 === (f.contentType || "").indexOf("application/x-www-form-urlencoded") && (f.data = f.data.replace(Pt, "+")) : (d = f.url.slice(o.length), 
            f.data && (f.processData || "string" == typeof f.data) && (o += (Mt.test(o) ? "&" : "?") + f.data, 
            delete f.data), !1 === f.cache && (o = o.replace(It, "$1"), d = (Mt.test(o) ? "&" : "?") + "_=" + Et++ + d), 
            f.url = o + d), f.ifModified && (_.lastModified[o] && T.setRequestHeader("If-Modified-Since", _.lastModified[o]), 
            _.etag[o] && T.setRequestHeader("If-None-Match", _.etag[o])), (f.data && f.hasContent && !1 !== f.contentType || r.contentType) && T.setRequestHeader("Content-Type", f.contentType), 
            T.setRequestHeader("Accept", f.dataTypes[0] && f.accepts[f.dataTypes[0]] ? f.accepts[f.dataTypes[0]] + ("*" !== f.dataTypes[0] ? ", " + Gt + "; q=0.01" : "") : f.accepts["*"]), 
            f.headers) T.setRequestHeader(p, f.headers[p]);
            if (f.beforeSend && (!1 === f.beforeSend.call(m, T, f) || u)) return T.abort();
            if (S = "abort", y.add(f.complete), T.done(f.success), T.fail(f.error), n = Ht(Ft, f, r, T)) {
                if (T.readyState = 1, c && g.trigger("ajaxSend", [ T, f ]), u) return T;
                f.async && 0 < f.timeout && (h = e.setTimeout(function() {
                    T.abort("timeout");
                }, f.timeout));
                try {
                    u = !1, n.send(x, E);
                } catch (t) {
                    if (u) throw t;
                    E(-1, t);
                }
            } else E(-1, "No Transport");
            function E(t, r, i, a) {
                var l, p, d, x, w, S = r;
                u || (u = !0, h && e.clearTimeout(h), n = void 0, s = a || "", T.readyState = 0 < t ? 4 : 0, 
                l = 200 <= t && t < 300 || 304 === t, i && (x = function(e, t, r) {
                    for (var i, n, o, s, a = e.contents, h = e.dataTypes; "*" === h[0]; ) h.shift(), 
                    void 0 === i && (i = e.mimeType || t.getResponseHeader("Content-Type"));
                    if (i) for (n in a) if (a[n] && a[n].test(i)) {
                        h.unshift(n);
                        break;
                    }
                    if (h[0] in r) o = h[0]; else {
                        for (n in r) {
                            if (!h[0] || e.converters[n + " " + h[0]]) {
                                o = n;
                                break;
                            }
                            s || (s = n);
                        }
                        o = o || s;
                    }
                    if (o) return o !== h[0] && h.unshift(o), r[o];
                }(f, T, i)), x = function(e, t, r, i) {
                    var n, o, s, a, h, l = {}, u = e.dataTypes.slice();
                    if (u[1]) for (s in e.converters) l[s.toLowerCase()] = e.converters[s];
                    for (o = u.shift(); o; ) if (e.responseFields[o] && (r[e.responseFields[o]] = t), 
                    !h && i && e.dataFilter && (t = e.dataFilter(t, e.dataType)), h = o, o = u.shift()) if ("*" === o) o = h; else if ("*" !== h && h !== o) {
                        if (!(s = l[h + " " + o] || l["* " + o])) for (n in l) if ((a = n.split(" "))[1] === o && (s = l[h + " " + a[0]] || l["* " + a[0]])) {
                            !0 === s ? s = l[n] : !0 !== l[n] && (o = a[0], u.unshift(a[1]));
                            break;
                        }
                        if (!0 !== s) if (s && e.throws) t = s(t); else try {
                            t = s(t);
                        } catch (e) {
                            return {
                                state: "parsererror",
                                error: s ? e : "No conversion from " + h + " to " + o
                            };
                        }
                    }
                    return {
                        state: "success",
                        data: t
                    };
                }(f, x, T, l), l ? (f.ifModified && ((w = T.getResponseHeader("Last-Modified")) && (_.lastModified[o] = w), 
                (w = T.getResponseHeader("etag")) && (_.etag[o] = w)), 204 === t || "HEAD" === f.type ? S = "nocontent" : 304 === t ? S = "notmodified" : (S = x.state, 
                p = x.data, l = !(d = x.error))) : (d = S, !t && S || (S = "error", t < 0 && (t = 0))), 
                T.status = t, T.statusText = (r || S) + "", l ? v.resolveWith(m, [ p, S, T ]) : v.rejectWith(m, [ T, S, d ]), 
                T.statusCode(b), b = void 0, c && g.trigger(l ? "ajaxSuccess" : "ajaxError", [ T, f, l ? p : d ]), 
                y.fireWith(m, [ T, S ]), c && (g.trigger("ajaxComplete", [ T, f ]), --_.active || _.event.trigger("ajaxStop")));
            }
            return T;
        },
        getJSON: function(e, t, r) {
            return _.get(e, t, r, "json");
        },
        getScript: function(e, t) {
            return _.get(e, void 0, t, "script");
        }
    }), _.each([ "get", "post" ], function(e, t) {
        _[t] = function(e, r, i, n) {
            return m(r) && (n = n || i, i = r, r = void 0), _.ajax(_.extend({
                url: e,
                type: t,
                dataType: n,
                data: r,
                success: i
            }, _.isPlainObject(e) && e));
        };
    }), _._evalUrl = function(e, t) {
        return _.ajax({
            url: e,
            type: "GET",
            dataType: "script",
            cache: !0,
            async: !1,
            global: !1,
            converters: {
                "text script": function() {}
            },
            dataFilter: function(e) {
                _.globalEval(e, t);
            }
        });
    }, _.fn.extend({
        wrapAll: function(e) {
            var t;
            return this[0] && (m(e) && (e = e.call(this[0])), t = _(e, this[0].ownerDocument).eq(0).clone(!0), 
            this[0].parentNode && t.insertBefore(this[0]), t.map(function() {
                for (var e = this; e.firstElementChild; ) e = e.firstElementChild;
                return e;
            }).append(this)), this;
        },
        wrapInner: function(e) {
            return m(e) ? this.each(function(t) {
                _(this).wrapInner(e.call(this, t));
            }) : this.each(function() {
                var t = _(this), r = t.contents();
                r.length ? r.wrapAll(e) : t.append(e);
            });
        },
        wrap: function(e) {
            var t = m(e);
            return this.each(function(r) {
                _(this).wrapAll(t ? e.call(this, r) : e);
            });
        },
        unwrap: function(e) {
            return this.parent(e).not("body").each(function() {
                _(this).replaceWith(this.childNodes);
            }), this;
        }
    }), _.expr.pseudos.hidden = function(e) {
        return !_.expr.pseudos.visible(e);
    }, _.expr.pseudos.visible = function(e) {
        return !!(e.offsetWidth || e.offsetHeight || e.getClientRects().length);
    }, _.ajaxSettings.xhr = function() {
        try {
            return new e.XMLHttpRequest();
        } catch (e) {}
    };
    var Wt = {
        0: 200,
        1223: 204
    }, qt = _.ajaxSettings.xhr();
    f.cors = !!qt && "withCredentials" in qt, f.ajax = qt = !!qt, _.ajaxTransport(function(t) {
        var r, i;
        if (f.cors || qt && !t.crossDomain) return {
            send: function(n, o) {
                var s, a = t.xhr();
                if (a.open(t.type, t.url, t.async, t.username, t.password), t.xhrFields) for (s in t.xhrFields) a[s] = t.xhrFields[s];
                for (s in t.mimeType && a.overrideMimeType && a.overrideMimeType(t.mimeType), t.crossDomain || n["X-Requested-With"] || (n["X-Requested-With"] = "XMLHttpRequest"), 
                n) a.setRequestHeader(s, n[s]);
                r = function(e) {
                    return function() {
                        r && (r = i = a.onload = a.onerror = a.onabort = a.ontimeout = a.onreadystatechange = null, 
                        "abort" === e ? a.abort() : "error" === e ? "number" != typeof a.status ? o(0, "error") : o(a.status, a.statusText) : o(Wt[a.status] || a.status, a.statusText, "text" !== (a.responseType || "text") || "string" != typeof a.responseText ? {
                            binary: a.response
                        } : {
                            text: a.responseText
                        }, a.getAllResponseHeaders()));
                    };
                }, a.onload = r(), i = a.onerror = a.ontimeout = r("error"), void 0 !== a.onabort ? a.onabort = i : a.onreadystatechange = function() {
                    4 === a.readyState && e.setTimeout(function() {
                        r && i();
                    });
                }, r = r("abort");
                try {
                    a.send(t.hasContent && t.data || null);
                } catch (n) {
                    if (r) throw n;
                }
            },
            abort: function() {
                r && r();
            }
        };
    }), _.ajaxPrefilter(function(e) {
        e.crossDomain && (e.contents.script = !1);
    }), _.ajaxSetup({
        accepts: {
            script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
        },
        contents: {
            script: /\b(?:java|ecma)script\b/
        },
        converters: {
            "text script": function(e) {
                return _.globalEval(e), e;
            }
        }
    }), _.ajaxPrefilter("script", function(e) {
        void 0 === e.cache && (e.cache = !1), e.crossDomain && (e.type = "GET");
    }), _.ajaxTransport("script", function(e) {
        var t, r;
        if (e.crossDomain || e.scriptAttrs) return {
            send: function(n, o) {
                t = _("<script>").attr(e.scriptAttrs || {}).prop({
                    charset: e.scriptCharset,
                    src: e.url
                }).on("load error", r = function(e) {
                    t.remove(), r = null, e && o("error" === e.type ? 404 : 200, e.type);
                }), i.head.appendChild(t[0]);
            },
            abort: function() {
                r && r();
            }
        };
    });
    var Xt, Yt = [], Zt = /(=)\?(?=&|$)|\?\?/;
    _.ajaxSetup({
        jsonp: "callback",
        jsonpCallback: function() {
            var e = Yt.pop() || _.expando + "_" + Et++;
            return this[e] = !0, e;
        }
    }), _.ajaxPrefilter("json jsonp", function(t, r, i) {
        var n, o, s, a = !1 !== t.jsonp && (Zt.test(t.url) ? "url" : "string" == typeof t.data && 0 === (t.contentType || "").indexOf("application/x-www-form-urlencoded") && Zt.test(t.data) && "data");
        if (a || "jsonp" === t.dataTypes[0]) return n = t.jsonpCallback = m(t.jsonpCallback) ? t.jsonpCallback() : t.jsonpCallback, 
        a ? t[a] = t[a].replace(Zt, "$1" + n) : !1 !== t.jsonp && (t.url += (Mt.test(t.url) ? "&" : "?") + t.jsonp + "=" + n), 
        t.converters["script json"] = function() {
            return s || _.error(n + " was not called"), s[0];
        }, t.dataTypes[0] = "json", o = e[n], e[n] = function() {
            s = arguments;
        }, i.always(function() {
            void 0 === o ? _(e).removeProp(n) : e[n] = o, t[n] && (t.jsonpCallback = r.jsonpCallback, 
            Yt.push(n)), s && m(o) && o(s[0]), s = o = void 0;
        }), "script";
    }), f.createHTMLDocument = ((Xt = i.implementation.createHTMLDocument("").body).innerHTML = "<form></form><form></form>", 
    2 === Xt.childNodes.length), _.parseHTML = function(e, t, r) {
        return "string" != typeof e ? [] : ("boolean" == typeof t && (r = t, t = !1), t || (f.createHTMLDocument ? ((n = (t = i.implementation.createHTMLDocument("")).createElement("base")).href = i.location.href, 
        t.head.appendChild(n)) : t = i), s = !r && [], (o = R.exec(e)) ? [ t.createElement(o[1]) ] : (o = _e([ e ], t, s), 
        s && s.length && _(s).remove(), _.merge([], o.childNodes)));
        var n, o, s;
    }, _.fn.load = function(e, t, r) {
        var i, n, o, s = this, a = e.indexOf(" ");
        return -1 < a && (i = yt(e.slice(a)), e = e.slice(0, a)), m(t) ? (r = t, t = void 0) : t && "object" == typeof t && (n = "POST"), 
        0 < s.length && _.ajax({
            url: e,
            type: n || "GET",
            dataType: "html",
            data: t
        }).done(function(e) {
            o = arguments, s.html(i ? _("<div>").append(_.parseHTML(e)).find(i) : e);
        }).always(r && function(e, t) {
            s.each(function() {
                r.apply(this, o || [ e.responseText, t, e ]);
            });
        }), this;
    }, _.each([ "ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend" ], function(e, t) {
        _.fn[t] = function(e) {
            return this.on(t, e);
        };
    }), _.expr.pseudos.animated = function(e) {
        return _.grep(_.timers, function(t) {
            return e === t.elem;
        }).length;
    }, _.offset = {
        setOffset: function(e, t, r) {
            var i, n, o, s, a, h, l = _.css(e, "position"), u = _(e), c = {};
            "static" === l && (e.style.position = "relative"), a = u.offset(), o = _.css(e, "top"), 
            h = _.css(e, "left"), ("absolute" === l || "fixed" === l) && -1 < (o + h).indexOf("auto") ? (s = (i = u.position()).top, 
            n = i.left) : (s = parseFloat(o) || 0, n = parseFloat(h) || 0), m(t) && (t = t.call(e, r, _.extend({}, a))), 
            null != t.top && (c.top = t.top - a.top + s), null != t.left && (c.left = t.left - a.left + n), 
            "using" in t ? t.using.call(e, c) : u.css(c);
        }
    }, _.fn.extend({
        offset: function(e) {
            if (arguments.length) return void 0 === e ? this : this.each(function(t) {
                _.offset.setOffset(this, e, t);
            });
            var t, r, i = this[0];
            return i ? i.getClientRects().length ? (t = i.getBoundingClientRect(), r = i.ownerDocument.defaultView, 
            {
                top: t.top + r.pageYOffset,
                left: t.left + r.pageXOffset
            }) : {
                top: 0,
                left: 0
            } : void 0;
        },
        position: function() {
            if (this[0]) {
                var e, t, r, i = this[0], n = {
                    top: 0,
                    left: 0
                };
                if ("fixed" === _.css(i, "position")) t = i.getBoundingClientRect(); else {
                    for (t = this.offset(), r = i.ownerDocument, e = i.offsetParent || r.documentElement; e && (e === r.body || e === r.documentElement) && "static" === _.css(e, "position"); ) e = e.parentNode;
                    e && e !== i && 1 === e.nodeType && ((n = _(e).offset()).top += _.css(e, "borderTopWidth", !0), 
                    n.left += _.css(e, "borderLeftWidth", !0));
                }
                return {
                    top: t.top - n.top - _.css(i, "marginTop", !0),
                    left: t.left - n.left - _.css(i, "marginLeft", !0)
                };
            }
        },
        offsetParent: function() {
            return this.map(function() {
                for (var e = this.offsetParent; e && "static" === _.css(e, "position"); ) e = e.offsetParent;
                return e || ne;
            });
        }
    }), _.each({
        scrollLeft: "pageXOffset",
        scrollTop: "pageYOffset"
    }, function(e, t) {
        var r = "pageYOffset" === t;
        _.fn[e] = function(i) {
            return H(this, function(e, i, n) {
                var o;
                if (g(e) ? o = e : 9 === e.nodeType && (o = e.defaultView), void 0 === n) return o ? o[t] : e[i];
                o ? o.scrollTo(r ? o.pageXOffset : n, r ? n : o.pageYOffset) : e[i] = n;
            }, e, i, arguments.length);
        };
    }), _.each([ "top", "left" ], function(e, t) {
        _.cssHooks[t] = Ve(f.pixelPosition, function(e, r) {
            if (r) return r = He(e, t), Ge.test(r) ? _(e).position()[t] + "px" : r;
        });
    }), _.each({
        Height: "height",
        Width: "width"
    }, function(e, t) {
        _.each({
            padding: "inner" + e,
            content: t,
            "": "outer" + e
        }, function(r, i) {
            _.fn[i] = function(n, o) {
                var s = arguments.length && (r || "boolean" != typeof n), a = r || (!0 === n || !0 === o ? "margin" : "border");
                return H(this, function(t, r, n) {
                    var o;
                    return g(t) ? 0 === i.indexOf("outer") ? t["inner" + e] : t.document.documentElement["client" + e] : 9 === t.nodeType ? (o = t.documentElement, 
                    Math.max(t.body["scroll" + e], o["scroll" + e], t.body["offset" + e], o["offset" + e], o["client" + e])) : void 0 === n ? _.css(t, r, a) : _.style(t, r, n, a);
                }, t, s ? n : void 0, s);
            };
        });
    }), _.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), function(e, t) {
        _.fn[t] = function(e, r) {
            return 0 < arguments.length ? this.on(t, null, e, r) : this.trigger(t);
        };
    }), _.fn.extend({
        hover: function(e, t) {
            return this.mouseenter(e).mouseleave(t || e);
        }
    }), _.fn.extend({
        bind: function(e, t, r) {
            return this.on(e, null, t, r);
        },
        unbind: function(e, t) {
            return this.off(e, null, t);
        },
        delegate: function(e, t, r, i) {
            return this.on(t, e, r, i);
        },
        undelegate: function(e, t, r) {
            return 1 === arguments.length ? this.off(e, "**") : this.off(t, e || "**", r);
        }
    }), _.proxy = function(e, t) {
        var r, i, n;
        if ("string" == typeof t && (r = e[t], t = e, e = r), m(e)) return i = o.call(arguments, 2), 
        (n = function() {
            return e.apply(t || this, i.concat(o.call(arguments)));
        }).guid = e.guid = e.guid || _.guid++, n;
    }, _.holdReady = function(e) {
        e ? _.readyWait++ : _.ready(!0);
    }, _.isArray = Array.isArray, _.parseJSON = JSON.parse, _.nodeName = L, _.isFunction = m, 
    _.isWindow = g, _.camelCase = X, _.type = b, _.now = Date.now, _.isNumeric = function(e) {
        var t = _.type(e);
        return ("number" === t || "string" === t) && !isNaN(e - parseFloat(e));
    }, "function" == typeof define && define.amd && define("jquery", [], function() {
        return _;
    });
    var Qt = e.jQuery, Kt = e.$;
    return _.noConflict = function(t) {
        return e.$ === _ && (e.$ = Kt), t && e.jQuery === _ && (e.jQuery = Qt), _;
    }, t || (e.jQuery = e.$ = _), _;
}), function(e) {
    "object" == typeof exports && "undefined" != typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define([], e) : ("undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this).p5 = e();
}(function() {
    return function e(t, r, i) {
        function n(s, a) {
            if (!r[s]) {
                if (!t[s]) {
                    var h = "function" == typeof require && require;
                    if (!a && h) return h(s, !0);
                    if (o) return o(s, !0);
                    var l = new Error("Cannot find module '" + s + "'");
                    throw l.code = "MODULE_NOT_FOUND", l;
                }
                var u = r[s] = {
                    exports: {}
                };
                t[s][0].call(u.exports, function(e) {
                    return n(t[s][1][e] || e);
                }, u, u.exports, e, t, r, i);
            }
            return r[s].exports;
        }
        for (var o = "function" == typeof require && require, s = 0; s < i.length; s++) n(i[s]);
        return n;
    }({
        1: [ function(e, t, r) {
            "use strict";
            r.byteLength = function(e) {
                var t = l(e), r = t[0], i = t[1];
                return 3 * (r + i) / 4 - i;
            }, r.toByteArray = function(e) {
                for (var t, r = l(e), i = r[0], s = r[1], a = new o(3 * (i + (p = s)) / 4 - p), h = 0, u = 0 < s ? i - 4 : i, c = 0; c < u; c += 4) t = n[e.charCodeAt(c)] << 18 | n[e.charCodeAt(c + 1)] << 12 | n[e.charCodeAt(c + 2)] << 6 | n[e.charCodeAt(c + 3)], 
                a[h++] = t >> 16 & 255, a[h++] = t >> 8 & 255, a[h++] = 255 & t;
                var p;
                return 2 === s && (t = n[e.charCodeAt(c)] << 2 | n[e.charCodeAt(c + 1)] >> 4, a[h++] = 255 & t), 
                1 === s && (t = n[e.charCodeAt(c)] << 10 | n[e.charCodeAt(c + 1)] << 4 | n[e.charCodeAt(c + 2)] >> 2, 
                a[h++] = t >> 8 & 255, a[h++] = 255 & t), a;
            }, r.fromByteArray = function(e) {
                for (var t, r = e.length, n = r % 3, o = [], s = 0, a = r - n; s < a; s += 16383) o.push(u(e, s, a < s + 16383 ? a : s + 16383));
                return 1 === n ? (t = e[r - 1], o.push(i[t >> 2] + i[t << 4 & 63] + "==")) : 2 === n && (t = (e[r - 2] << 8) + e[r - 1], 
                o.push(i[t >> 10] + i[t >> 4 & 63] + i[t << 2 & 63] + "=")), o.join("");
            };
            for (var i = [], n = [], o = "undefined" != typeof Uint8Array ? Uint8Array : Array, s = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", a = 0, h = s.length; a < h; ++a) i[a] = s[a], 
            n[s.charCodeAt(a)] = a;
            function l(e) {
                var t = e.length;
                if (0 < t % 4) throw new Error("Invalid string. Length must be a multiple of 4");
                var r = e.indexOf("=");
                return -1 === r && (r = t), [ r, r === t ? 0 : 4 - r % 4 ];
            }
            function u(e, t, r) {
                for (var n, o, s = [], a = t; a < r; a += 3) n = (e[a] << 16 & 16711680) + (e[a + 1] << 8 & 65280) + (255 & e[a + 2]), 
                s.push(i[(o = n) >> 18 & 63] + i[o >> 12 & 63] + i[o >> 6 & 63] + i[63 & o]);
                return s.join("");
            }
            n["-".charCodeAt(0)] = 62, n["_".charCodeAt(0)] = 63;
        }, {} ],
        2: [ function(e, t, r) {}, {} ],
        3: [ function(e, t, r) {
            "use strict";
            var i = e("base64-js"), n = e("ieee754");
            r.Buffer = a, r.SlowBuffer = function(e) {
                return +e != e && (e = 0), a.alloc(+e);
            }, r.INSPECT_MAX_BYTES = 50;
            var o = 2147483647;
            function s(e) {
                if (o < e) throw new RangeError('The value "' + e + '" is invalid for option "size"');
                var t = new Uint8Array(e);
                return t.__proto__ = a.prototype, t;
            }
            function a(e, t, r) {
                if ("number" != typeof e) return h(e, t, r);
                if ("string" == typeof t) throw new TypeError('The "string" argument must be of type string. Received type number');
                return u(e);
            }
            function h(e, t, r) {
                if ("string" == typeof e) return function(e, t) {
                    if ("string" == typeof t && "" !== t || (t = "utf8"), !a.isEncoding(t)) throw new TypeError("Unknown encoding: " + t);
                    var r = 0 | d(e, t), i = s(r), n = i.write(e, t);
                    return n !== r && (i = i.slice(0, n)), i;
                }(e, t);
                if (ArrayBuffer.isView(e)) return c(e);
                if (null == e) throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e);
                if (U(e, ArrayBuffer) || e && U(e.buffer, ArrayBuffer)) return function(e, t, r) {
                    if (t < 0 || e.byteLength < t) throw new RangeError('"offset" is outside of buffer bounds');
                    if (e.byteLength < t + (r || 0)) throw new RangeError('"length" is outside of buffer bounds');
                    var i;
                    return (i = void 0 === t && void 0 === r ? new Uint8Array(e) : void 0 === r ? new Uint8Array(e, t) : new Uint8Array(e, t, r)).__proto__ = a.prototype, 
                    i;
                }(e, t, r);
                if ("number" == typeof e) throw new TypeError('The "value" argument must not be of type number. Received type number');
                var i = e.valueOf && e.valueOf();
                if (null != i && i !== e) return a.from(i, t, r);
                var n = function(e) {
                    if (a.isBuffer(e)) {
                        var t = 0 | p(e.length), r = s(t);
                        return 0 === r.length || e.copy(r, 0, 0, t), r;
                    }
                    return void 0 !== e.length ? "number" != typeof e.length || N(e.length) ? s(0) : c(e) : "Buffer" === e.type && Array.isArray(e.data) ? c(e.data) : void 0;
                }(e);
                if (n) return n;
                if ("undefined" != typeof Symbol && null != Symbol.toPrimitive && "function" == typeof e[Symbol.toPrimitive]) return a.from(e[Symbol.toPrimitive]("string"), t, r);
                throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e);
            }
            function l(e) {
                if ("number" != typeof e) throw new TypeError('"size" argument must be of type number');
                if (e < 0) throw new RangeError('The value "' + e + '" is invalid for option "size"');
            }
            function u(e) {
                return l(e), s(e < 0 ? 0 : 0 | p(e));
            }
            function c(e) {
                for (var t = e.length < 0 ? 0 : 0 | p(e.length), r = s(t), i = 0; i < t; i += 1) r[i] = 255 & e[i];
                return r;
            }
            function p(e) {
                if (o <= e) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + o.toString(16) + " bytes");
                return 0 | e;
            }
            function d(e, t) {
                if (a.isBuffer(e)) return e.length;
                if (ArrayBuffer.isView(e) || U(e, ArrayBuffer)) return e.byteLength;
                if ("string" != typeof e) throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof e);
                var r = e.length, i = 2 < arguments.length && !0 === arguments[2];
                if (!i && 0 === r) return 0;
                for (var n = !1; ;) switch (t) {
                  case "ascii":
                  case "latin1":
                  case "binary":
                    return r;

                  case "utf8":
                  case "utf-8":
                    return k(e).length;

                  case "ucs2":
                  case "ucs-2":
                  case "utf16le":
                  case "utf-16le":
                    return 2 * r;

                  case "hex":
                    return r >>> 1;

                  case "base64":
                    return I(e).length;

                  default:
                    if (n) return i ? -1 : k(e).length;
                    t = ("" + t).toLowerCase(), n = !0;
                }
            }
            function f(e, t, r) {
                var i = e[t];
                e[t] = e[r], e[r] = i;
            }
            function m(e, t, r, i, n) {
                if (0 === e.length) return -1;
                if ("string" == typeof r ? (i = r, r = 0) : 2147483647 < r ? r = 2147483647 : r < -2147483648 && (r = -2147483648), 
                N(r = +r) && (r = n ? 0 : e.length - 1), r < 0 && (r = e.length + r), r >= e.length) {
                    if (n) return -1;
                    r = e.length - 1;
                } else if (r < 0) {
                    if (!n) return -1;
                    r = 0;
                }
                if ("string" == typeof t && (t = a.from(t, i)), a.isBuffer(t)) return 0 === t.length ? -1 : g(e, t, r, i, n);
                if ("number" == typeof t) return t &= 255, "function" == typeof Uint8Array.prototype.indexOf ? n ? Uint8Array.prototype.indexOf.call(e, t, r) : Uint8Array.prototype.lastIndexOf.call(e, t, r) : g(e, [ t ], r, i, n);
                throw new TypeError("val must be string, number or Buffer");
            }
            function g(e, t, r, i, n) {
                var o, s = 1, a = e.length, h = t.length;
                if (void 0 !== i && ("ucs2" === (i = String(i).toLowerCase()) || "ucs-2" === i || "utf16le" === i || "utf-16le" === i)) {
                    if (e.length < 2 || t.length < 2) return -1;
                    a /= s = 2, h /= 2, r /= 2;
                }
                function l(e, t) {
                    return 1 === s ? e[t] : e.readUInt16BE(t * s);
                }
                if (n) {
                    var u = -1;
                    for (o = r; o < a; o++) if (l(e, o) === l(t, -1 === u ? 0 : o - u)) {
                        if (-1 === u && (u = o), o - u + 1 === h) return u * s;
                    } else -1 !== u && (o -= o - u), u = -1;
                } else for (a < r + h && (r = a - h), o = r; 0 <= o; o--) {
                    for (var c = !0, p = 0; p < h; p++) if (l(e, o + p) !== l(t, p)) {
                        c = !1;
                        break;
                    }
                    if (c) return o;
                }
                return -1;
            }
            function v(e, t, r, i) {
                r = Number(r) || 0;
                var n = e.length - r;
                i ? n < (i = Number(i)) && (i = n) : i = n;
                var o = t.length;
                o / 2 < i && (i = o / 2);
                for (var s = 0; s < i; ++s) {
                    var a = parseInt(t.substr(2 * s, 2), 16);
                    if (N(a)) return s;
                    e[r + s] = a;
                }
                return s;
            }
            function y(e, t, r, i) {
                return O(function(e) {
                    for (var t = [], r = 0; r < e.length; ++r) t.push(255 & e.charCodeAt(r));
                    return t;
                }(t), e, r, i);
            }
            function b(e, t, r) {
                return 0 === t && r === e.length ? i.fromByteArray(e) : i.fromByteArray(e.slice(t, r));
            }
            function x(e, t, r) {
                r = Math.min(e.length, r);
                for (var i = [], n = t; n < r; ) {
                    var o, s, a, h, l = e[n], u = null, c = 239 < l ? 4 : 223 < l ? 3 : 191 < l ? 2 : 1;
                    if (n + c <= r) switch (c) {
                      case 1:
                        l < 128 && (u = l);
                        break;

                      case 2:
                        128 == (192 & (o = e[n + 1])) && 127 < (h = (31 & l) << 6 | 63 & o) && (u = h);
                        break;

                      case 3:
                        o = e[n + 1], s = e[n + 2], 128 == (192 & o) && 128 == (192 & s) && 2047 < (h = (15 & l) << 12 | (63 & o) << 6 | 63 & s) && (h < 55296 || 57343 < h) && (u = h);
                        break;

                      case 4:
                        o = e[n + 1], s = e[n + 2], a = e[n + 3], 128 == (192 & o) && 128 == (192 & s) && 128 == (192 & a) && 65535 < (h = (15 & l) << 18 | (63 & o) << 12 | (63 & s) << 6 | 63 & a) && h < 1114112 && (u = h);
                    }
                    null === u ? (u = 65533, c = 1) : 65535 < u && (u -= 65536, i.push(u >>> 10 & 1023 | 55296), 
                    u = 56320 | 1023 & u), i.push(u), n += c;
                }
                return function(e) {
                    var t = e.length;
                    if (t <= _) return String.fromCharCode.apply(String, e);
                    for (var r = "", i = 0; i < t; ) r += String.fromCharCode.apply(String, e.slice(i, i += _));
                    return r;
                }(i);
            }
            r.kMaxLength = o, (a.TYPED_ARRAY_SUPPORT = function() {
                try {
                    var e = new Uint8Array(1);
                    return e.__proto__ = {
                        __proto__: Uint8Array.prototype,
                        foo: function() {
                            return 42;
                        }
                    }, 42 === e.foo();
                } catch (e) {
                    return !1;
                }
            }()) || "undefined" == typeof console || "function" != typeof console.error || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), 
            Object.defineProperty(a.prototype, "parent", {
                enumerable: !0,
                get: function() {
                    if (a.isBuffer(this)) return this.buffer;
                }
            }), Object.defineProperty(a.prototype, "offset", {
                enumerable: !0,
                get: function() {
                    if (a.isBuffer(this)) return this.byteOffset;
                }
            }), "undefined" != typeof Symbol && null != Symbol.species && a[Symbol.species] === a && Object.defineProperty(a, Symbol.species, {
                value: null,
                configurable: !0,
                enumerable: !1,
                writable: !1
            }), a.poolSize = 8192, a.from = function(e, t, r) {
                return h(e, t, r);
            }, a.prototype.__proto__ = Uint8Array.prototype, a.__proto__ = Uint8Array, a.alloc = function(e, t, r) {
                return n = t, o = r, l(i = e), i <= 0 ? s(i) : void 0 !== n ? "string" == typeof o ? s(i).fill(n, o) : s(i).fill(n) : s(i);
                var i, n, o;
            }, a.allocUnsafe = function(e) {
                return u(e);
            }, a.allocUnsafeSlow = function(e) {
                return u(e);
            }, a.isBuffer = function(e) {
                return null != e && !0 === e._isBuffer && e !== a.prototype;
            }, a.compare = function(e, t) {
                if (U(e, Uint8Array) && (e = a.from(e, e.offset, e.byteLength)), U(t, Uint8Array) && (t = a.from(t, t.offset, t.byteLength)), 
                !a.isBuffer(e) || !a.isBuffer(t)) throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
                if (e === t) return 0;
                for (var r = e.length, i = t.length, n = 0, o = Math.min(r, i); n < o; ++n) if (e[n] !== t[n]) {
                    r = e[n], i = t[n];
                    break;
                }
                return r < i ? -1 : i < r ? 1 : 0;
            }, a.isEncoding = function(e) {
                switch (String(e).toLowerCase()) {
                  case "hex":
                  case "utf8":
                  case "utf-8":
                  case "ascii":
                  case "latin1":
                  case "binary":
                  case "base64":
                  case "ucs2":
                  case "ucs-2":
                  case "utf16le":
                  case "utf-16le":
                    return !0;

                  default:
                    return !1;
                }
            }, a.concat = function(e, t) {
                if (!Array.isArray(e)) throw new TypeError('"list" argument must be an Array of Buffers');
                if (0 === e.length) return a.alloc(0);
                var r;
                if (void 0 === t) for (r = t = 0; r < e.length; ++r) t += e[r].length;
                var i = a.allocUnsafe(t), n = 0;
                for (r = 0; r < e.length; ++r) {
                    var o = e[r];
                    if (U(o, Uint8Array) && (o = a.from(o)), !a.isBuffer(o)) throw new TypeError('"list" argument must be an Array of Buffers');
                    o.copy(i, n), n += o.length;
                }
                return i;
            }, a.byteLength = d, a.prototype._isBuffer = !0, a.prototype.swap16 = function() {
                var e = this.length;
                if (e % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
                for (var t = 0; t < e; t += 2) f(this, t, t + 1);
                return this;
            }, a.prototype.swap32 = function() {
                var e = this.length;
                if (e % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
                for (var t = 0; t < e; t += 4) f(this, t, t + 3), f(this, t + 1, t + 2);
                return this;
            }, a.prototype.swap64 = function() {
                var e = this.length;
                if (e % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
                for (var t = 0; t < e; t += 8) f(this, t, t + 7), f(this, t + 1, t + 6), f(this, t + 2, t + 5), 
                f(this, t + 3, t + 4);
                return this;
            }, a.prototype.toLocaleString = a.prototype.toString = function() {
                var e = this.length;
                return 0 === e ? "" : 0 === arguments.length ? x(this, 0, e) : function(e, t, r) {
                    var i = !1;
                    if ((void 0 === t || t < 0) && (t = 0), t > this.length) return "";
                    if ((void 0 === r || r > this.length) && (r = this.length), r <= 0) return "";
                    if ((r >>>= 0) <= (t >>>= 0)) return "";
                    for (e || (e = "utf8"); ;) switch (e) {
                      case "hex":
                        return T(this, t, r);

                      case "utf8":
                      case "utf-8":
                        return x(this, t, r);

                      case "ascii":
                        return w(this, t, r);

                      case "latin1":
                      case "binary":
                        return S(this, t, r);

                      case "base64":
                        return b(this, t, r);

                      case "ucs2":
                      case "ucs-2":
                      case "utf16le":
                      case "utf-16le":
                        return E(this, t, r);

                      default:
                        if (i) throw new TypeError("Unknown encoding: " + e);
                        e = (e + "").toLowerCase(), i = !0;
                    }
                }.apply(this, arguments);
            }, a.prototype.equals = function(e) {
                if (!a.isBuffer(e)) throw new TypeError("Argument must be a Buffer");
                return this === e || 0 === a.compare(this, e);
            }, a.prototype.inspect = function() {
                var e = "", t = r.INSPECT_MAX_BYTES;
                return e = this.toString("hex", 0, t).replace(/(.{2})/g, "$1 ").trim(), this.length > t && (e += " ... "), 
                "<Buffer " + e + ">";
            }, a.prototype.compare = function(e, t, r, i, n) {
                if (U(e, Uint8Array) && (e = a.from(e, e.offset, e.byteLength)), !a.isBuffer(e)) throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof e);
                if (void 0 === t && (t = 0), void 0 === r && (r = e ? e.length : 0), void 0 === i && (i = 0), 
                void 0 === n && (n = this.length), t < 0 || r > e.length || i < 0 || n > this.length) throw new RangeError("out of range index");
                if (n <= i && r <= t) return 0;
                if (n <= i) return -1;
                if (r <= t) return 1;
                if (this === e) return 0;
                for (var o = (n >>>= 0) - (i >>>= 0), s = (r >>>= 0) - (t >>>= 0), h = Math.min(o, s), l = this.slice(i, n), u = e.slice(t, r), c = 0; c < h; ++c) if (l[c] !== u[c]) {
                    o = l[c], s = u[c];
                    break;
                }
                return o < s ? -1 : s < o ? 1 : 0;
            }, a.prototype.includes = function(e, t, r) {
                return -1 !== this.indexOf(e, t, r);
            }, a.prototype.indexOf = function(e, t, r) {
                return m(this, e, t, r, !0);
            }, a.prototype.lastIndexOf = function(e, t, r) {
                return m(this, e, t, r, !1);
            }, a.prototype.write = function(e, t, r, i) {
                if (void 0 === t) i = "utf8", r = this.length, t = 0; else if (void 0 === r && "string" == typeof t) i = t, 
                r = this.length, t = 0; else {
                    if (!isFinite(t)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                    t >>>= 0, isFinite(r) ? (r >>>= 0, void 0 === i && (i = "utf8")) : (i = r, r = void 0);
                }
                var n = this.length - t;
                if ((void 0 === r || n < r) && (r = n), 0 < e.length && (r < 0 || t < 0) || t > this.length) throw new RangeError("Attempt to write outside buffer bounds");
                i || (i = "utf8");
                for (var o, s, a, h, l, u, c = !1; ;) switch (i) {
                  case "hex":
                    return v(this, e, t, r);

                  case "utf8":
                  case "utf-8":
                    return l = t, u = r, O(k(e, this.length - l), this, l, u);

                  case "ascii":
                    return y(this, e, t, r);

                  case "latin1":
                  case "binary":
                    return y(this, e, t, r);

                  case "base64":
                    return this, a = t, h = r, O(I(e), this, a, h);

                  case "ucs2":
                  case "ucs-2":
                  case "utf16le":
                  case "utf-16le":
                    return o = t, s = r, O(function(e, t) {
                        for (var r, i, n, o = [], s = 0; s < e.length && !((t -= 2) < 0); ++s) i = (r = e.charCodeAt(s)) >> 8, 
                        n = r % 256, o.push(n), o.push(i);
                        return o;
                    }(e, this.length - o), this, o, s);

                  default:
                    if (c) throw new TypeError("Unknown encoding: " + i);
                    i = ("" + i).toLowerCase(), c = !0;
                }
            }, a.prototype.toJSON = function() {
                return {
                    type: "Buffer",
                    data: Array.prototype.slice.call(this._arr || this, 0)
                };
            };
            var _ = 4096;
            function w(e, t, r) {
                var i = "";
                r = Math.min(e.length, r);
                for (var n = t; n < r; ++n) i += String.fromCharCode(127 & e[n]);
                return i;
            }
            function S(e, t, r) {
                var i = "";
                r = Math.min(e.length, r);
                for (var n = t; n < r; ++n) i += String.fromCharCode(e[n]);
                return i;
            }
            function T(e, t, r) {
                var i = e.length;
                (!t || t < 0) && (t = 0), (!r || r < 0 || i < r) && (r = i);
                for (var n = "", o = t; o < r; ++o) n += P(e[o]);
                return n;
            }
            function E(e, t, r) {
                for (var i = e.slice(t, r), n = "", o = 0; o < i.length; o += 2) n += String.fromCharCode(i[o] + 256 * i[o + 1]);
                return n;
            }
            function M(e, t, r) {
                if (e % 1 != 0 || e < 0) throw new RangeError("offset is not uint");
                if (r < e + t) throw new RangeError("Trying to access beyond buffer length");
            }
            function C(e, t, r, i, n, o) {
                if (!a.isBuffer(e)) throw new TypeError('"buffer" argument must be a Buffer instance');
                if (n < t || t < o) throw new RangeError('"value" argument is out of bounds');
                if (r + i > e.length) throw new RangeError("Index out of range");
            }
            function L(e, t, r, i, n, o) {
                if (r + i > e.length) throw new RangeError("Index out of range");
                if (r < 0) throw new RangeError("Index out of range");
            }
            function R(e, t, r, i, o) {
                return t = +t, r >>>= 0, o || L(e, 0, r, 4), n.write(e, t, r, i, 23, 4), r + 4;
            }
            function A(e, t, r, i, o) {
                return t = +t, r >>>= 0, o || L(e, 0, r, 8), n.write(e, t, r, i, 52, 8), r + 8;
            }
            a.prototype.slice = function(e, t) {
                var r = this.length;
                (e = ~~e) < 0 ? (e += r) < 0 && (e = 0) : r < e && (e = r), (t = void 0 === t ? r : ~~t) < 0 ? (t += r) < 0 && (t = 0) : r < t && (t = r), 
                t < e && (t = e);
                var i = this.subarray(e, t);
                return i.__proto__ = a.prototype, i;
            }, a.prototype.readUIntLE = function(e, t, r) {
                e >>>= 0, t >>>= 0, r || M(e, t, this.length);
                for (var i = this[e], n = 1, o = 0; ++o < t && (n *= 256); ) i += this[e + o] * n;
                return i;
            }, a.prototype.readUIntBE = function(e, t, r) {
                e >>>= 0, t >>>= 0, r || M(e, t, this.length);
                for (var i = this[e + --t], n = 1; 0 < t && (n *= 256); ) i += this[e + --t] * n;
                return i;
            }, a.prototype.readUInt8 = function(e, t) {
                return e >>>= 0, t || M(e, 1, this.length), this[e];
            }, a.prototype.readUInt16LE = function(e, t) {
                return e >>>= 0, t || M(e, 2, this.length), this[e] | this[e + 1] << 8;
            }, a.prototype.readUInt16BE = function(e, t) {
                return e >>>= 0, t || M(e, 2, this.length), this[e] << 8 | this[e + 1];
            }, a.prototype.readUInt32LE = function(e, t) {
                return e >>>= 0, t || M(e, 4, this.length), (this[e] | this[e + 1] << 8 | this[e + 2] << 16) + 16777216 * this[e + 3];
            }, a.prototype.readUInt32BE = function(e, t) {
                return e >>>= 0, t || M(e, 4, this.length), 16777216 * this[e] + (this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3]);
            }, a.prototype.readIntLE = function(e, t, r) {
                e >>>= 0, t >>>= 0, r || M(e, t, this.length);
                for (var i = this[e], n = 1, o = 0; ++o < t && (n *= 256); ) i += this[e + o] * n;
                return (n *= 128) <= i && (i -= Math.pow(2, 8 * t)), i;
            }, a.prototype.readIntBE = function(e, t, r) {
                e >>>= 0, t >>>= 0, r || M(e, t, this.length);
                for (var i = t, n = 1, o = this[e + --i]; 0 < i && (n *= 256); ) o += this[e + --i] * n;
                return (n *= 128) <= o && (o -= Math.pow(2, 8 * t)), o;
            }, a.prototype.readInt8 = function(e, t) {
                return e >>>= 0, t || M(e, 1, this.length), 128 & this[e] ? -1 * (255 - this[e] + 1) : this[e];
            }, a.prototype.readInt16LE = function(e, t) {
                e >>>= 0, t || M(e, 2, this.length);
                var r = this[e] | this[e + 1] << 8;
                return 32768 & r ? 4294901760 | r : r;
            }, a.prototype.readInt16BE = function(e, t) {
                e >>>= 0, t || M(e, 2, this.length);
                var r = this[e + 1] | this[e] << 8;
                return 32768 & r ? 4294901760 | r : r;
            }, a.prototype.readInt32LE = function(e, t) {
                return e >>>= 0, t || M(e, 4, this.length), this[e] | this[e + 1] << 8 | this[e + 2] << 16 | this[e + 3] << 24;
            }, a.prototype.readInt32BE = function(e, t) {
                return e >>>= 0, t || M(e, 4, this.length), this[e] << 24 | this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3];
            }, a.prototype.readFloatLE = function(e, t) {
                return e >>>= 0, t || M(e, 4, this.length), n.read(this, e, !0, 23, 4);
            }, a.prototype.readFloatBE = function(e, t) {
                return e >>>= 0, t || M(e, 4, this.length), n.read(this, e, !1, 23, 4);
            }, a.prototype.readDoubleLE = function(e, t) {
                return e >>>= 0, t || M(e, 8, this.length), n.read(this, e, !0, 52, 8);
            }, a.prototype.readDoubleBE = function(e, t) {
                return e >>>= 0, t || M(e, 8, this.length), n.read(this, e, !1, 52, 8);
            }, a.prototype.writeUIntLE = function(e, t, r, i) {
                e = +e, t >>>= 0, r >>>= 0, i || C(this, e, t, r, Math.pow(2, 8 * r) - 1, 0);
                var n = 1, o = 0;
                for (this[t] = 255 & e; ++o < r && (n *= 256); ) this[t + o] = e / n & 255;
                return t + r;
            }, a.prototype.writeUIntBE = function(e, t, r, i) {
                e = +e, t >>>= 0, r >>>= 0, i || C(this, e, t, r, Math.pow(2, 8 * r) - 1, 0);
                var n = r - 1, o = 1;
                for (this[t + n] = 255 & e; 0 <= --n && (o *= 256); ) this[t + n] = e / o & 255;
                return t + r;
            }, a.prototype.writeUInt8 = function(e, t, r) {
                return e = +e, t >>>= 0, r || C(this, e, t, 1, 255, 0), this[t] = 255 & e, t + 1;
            }, a.prototype.writeUInt16LE = function(e, t, r) {
                return e = +e, t >>>= 0, r || C(this, e, t, 2, 65535, 0), this[t] = 255 & e, this[t + 1] = e >>> 8, 
                t + 2;
            }, a.prototype.writeUInt16BE = function(e, t, r) {
                return e = +e, t >>>= 0, r || C(this, e, t, 2, 65535, 0), this[t] = e >>> 8, this[t + 1] = 255 & e, 
                t + 2;
            }, a.prototype.writeUInt32LE = function(e, t, r) {
                return e = +e, t >>>= 0, r || C(this, e, t, 4, 4294967295, 0), this[t + 3] = e >>> 24, 
                this[t + 2] = e >>> 16, this[t + 1] = e >>> 8, this[t] = 255 & e, t + 4;
            }, a.prototype.writeUInt32BE = function(e, t, r) {
                return e = +e, t >>>= 0, r || C(this, e, t, 4, 4294967295, 0), this[t] = e >>> 24, 
                this[t + 1] = e >>> 16, this[t + 2] = e >>> 8, this[t + 3] = 255 & e, t + 4;
            }, a.prototype.writeIntLE = function(e, t, r, i) {
                if (e = +e, t >>>= 0, !i) {
                    var n = Math.pow(2, 8 * r - 1);
                    C(this, e, t, r, n - 1, -n);
                }
                var o = 0, s = 1, a = 0;
                for (this[t] = 255 & e; ++o < r && (s *= 256); ) e < 0 && 0 === a && 0 !== this[t + o - 1] && (a = 1), 
                this[t + o] = (e / s >> 0) - a & 255;
                return t + r;
            }, a.prototype.writeIntBE = function(e, t, r, i) {
                if (e = +e, t >>>= 0, !i) {
                    var n = Math.pow(2, 8 * r - 1);
                    C(this, e, t, r, n - 1, -n);
                }
                var o = r - 1, s = 1, a = 0;
                for (this[t + o] = 255 & e; 0 <= --o && (s *= 256); ) e < 0 && 0 === a && 0 !== this[t + o + 1] && (a = 1), 
                this[t + o] = (e / s >> 0) - a & 255;
                return t + r;
            }, a.prototype.writeInt8 = function(e, t, r) {
                return e = +e, t >>>= 0, r || C(this, e, t, 1, 127, -128), e < 0 && (e = 255 + e + 1), 
                this[t] = 255 & e, t + 1;
            }, a.prototype.writeInt16LE = function(e, t, r) {
                return e = +e, t >>>= 0, r || C(this, e, t, 2, 32767, -32768), this[t] = 255 & e, 
                this[t + 1] = e >>> 8, t + 2;
            }, a.prototype.writeInt16BE = function(e, t, r) {
                return e = +e, t >>>= 0, r || C(this, e, t, 2, 32767, -32768), this[t] = e >>> 8, 
                this[t + 1] = 255 & e, t + 2;
            }, a.prototype.writeInt32LE = function(e, t, r) {
                return e = +e, t >>>= 0, r || C(this, e, t, 4, 2147483647, -2147483648), this[t] = 255 & e, 
                this[t + 1] = e >>> 8, this[t + 2] = e >>> 16, this[t + 3] = e >>> 24, t + 4;
            }, a.prototype.writeInt32BE = function(e, t, r) {
                return e = +e, t >>>= 0, r || C(this, e, t, 4, 2147483647, -2147483648), e < 0 && (e = 4294967295 + e + 1), 
                this[t] = e >>> 24, this[t + 1] = e >>> 16, this[t + 2] = e >>> 8, this[t + 3] = 255 & e, 
                t + 4;
            }, a.prototype.writeFloatLE = function(e, t, r) {
                return R(this, e, t, !0, r);
            }, a.prototype.writeFloatBE = function(e, t, r) {
                return R(this, e, t, !1, r);
            }, a.prototype.writeDoubleLE = function(e, t, r) {
                return A(this, e, t, !0, r);
            }, a.prototype.writeDoubleBE = function(e, t, r) {
                return A(this, e, t, !1, r);
            }, a.prototype.copy = function(e, t, r, i) {
                if (!a.isBuffer(e)) throw new TypeError("argument should be a Buffer");
                if (r || (r = 0), i || 0 === i || (i = this.length), t >= e.length && (t = e.length), 
                t || (t = 0), 0 < i && i < r && (i = r), i === r) return 0;
                if (0 === e.length || 0 === this.length) return 0;
                if (t < 0) throw new RangeError("targetStart out of bounds");
                if (r < 0 || r >= this.length) throw new RangeError("Index out of range");
                if (i < 0) throw new RangeError("sourceEnd out of bounds");
                i > this.length && (i = this.length), e.length - t < i - r && (i = e.length - t + r);
                var n = i - r;
                if (this === e && "function" == typeof Uint8Array.prototype.copyWithin) this.copyWithin(t, r, i); else if (this === e && r < t && t < i) for (var o = n - 1; 0 <= o; --o) e[o + t] = this[o + r]; else Uint8Array.prototype.set.call(e, this.subarray(r, i), t);
                return n;
            }, a.prototype.fill = function(e, t, r, i) {
                if ("string" == typeof e) {
                    if ("string" == typeof t ? (i = t, t = 0, r = this.length) : "string" == typeof r && (i = r, 
                    r = this.length), void 0 !== i && "string" != typeof i) throw new TypeError("encoding must be a string");
                    if ("string" == typeof i && !a.isEncoding(i)) throw new TypeError("Unknown encoding: " + i);
                    if (1 === e.length) {
                        var n = e.charCodeAt(0);
                        ("utf8" === i && n < 128 || "latin1" === i) && (e = n);
                    }
                } else "number" == typeof e && (e &= 255);
                if (t < 0 || this.length < t || this.length < r) throw new RangeError("Out of range index");
                if (r <= t) return this;
                var o;
                if (t >>>= 0, r = void 0 === r ? this.length : r >>> 0, e || (e = 0), "number" == typeof e) for (o = t; o < r; ++o) this[o] = e; else {
                    var s = a.isBuffer(e) ? e : a.from(e, i), h = s.length;
                    if (0 === h) throw new TypeError('The value "' + e + '" is invalid for argument "value"');
                    for (o = 0; o < r - t; ++o) this[o + t] = s[o % h];
                }
                return this;
            };
            var D = /[^+\/0-9A-Za-z-_]/g;
            function P(e) {
                return e < 16 ? "0" + e.toString(16) : e.toString(16);
            }
            function k(e, t) {
                var r;
                t = t || 1 / 0;
                for (var i = e.length, n = null, o = [], s = 0; s < i; ++s) {
                    if (55295 < (r = e.charCodeAt(s)) && r < 57344) {
                        if (!n) {
                            if (56319 < r) {
                                -1 < (t -= 3) && o.push(239, 191, 189);
                                continue;
                            }
                            if (s + 1 === i) {
                                -1 < (t -= 3) && o.push(239, 191, 189);
                                continue;
                            }
                            n = r;
                            continue;
                        }
                        if (r < 56320) {
                            -1 < (t -= 3) && o.push(239, 191, 189), n = r;
                            continue;
                        }
                        r = 65536 + (n - 55296 << 10 | r - 56320);
                    } else n && -1 < (t -= 3) && o.push(239, 191, 189);
                    if (n = null, r < 128) {
                        if ((t -= 1) < 0) break;
                        o.push(r);
                    } else if (r < 2048) {
                        if ((t -= 2) < 0) break;
                        o.push(r >> 6 | 192, 63 & r | 128);
                    } else if (r < 65536) {
                        if ((t -= 3) < 0) break;
                        o.push(r >> 12 | 224, r >> 6 & 63 | 128, 63 & r | 128);
                    } else {
                        if (!(r < 1114112)) throw new Error("Invalid code point");
                        if ((t -= 4) < 0) break;
                        o.push(r >> 18 | 240, r >> 12 & 63 | 128, r >> 6 & 63 | 128, 63 & r | 128);
                    }
                }
                return o;
            }
            function I(e) {
                return i.toByteArray(function(e) {
                    if ((e = (e = e.split("=")[0]).trim().replace(D, "")).length < 2) return "";
                    for (;e.length % 4 != 0; ) e += "=";
                    return e;
                }(e));
            }
            function O(e, t, r, i) {
                for (var n = 0; n < i && !(n + r >= t.length || n >= e.length); ++n) t[n + r] = e[n];
                return n;
            }
            function U(e, t) {
                return e instanceof t || null != e && null != e.constructor && null != e.constructor.name && e.constructor.name === t.name;
            }
            function N(e) {
                return e != e;
            }
        }, {
            "base64-js": 1,
            ieee754: 7
        } ],
        4: [ function(e, t, r) {
            (function(i, n) {
                var o;
                o = function() {
                    "use strict";
                    function t(e) {
                        return "function" == typeof e;
                    }
                    var r = Array.isArray ? Array.isArray : function(e) {
                        return "[object Array]" === Object.prototype.toString.call(e);
                    }, o = 0, s = void 0, a = void 0, h = function(e, t) {
                        m[o] = e, m[o + 1] = t, 2 === (o += 2) && (a ? a(g) : _());
                    }, l = "undefined" != typeof window ? window : void 0, u = l || {}, c = u.MutationObserver || u.WebKitMutationObserver, p = "undefined" == typeof self && void 0 !== i && "[object process]" === {}.toString.call(i), d = "undefined" != typeof Uint8ClampedArray && "undefined" != typeof importScripts && "undefined" != typeof MessageChannel;
                    function f() {
                        var e = setTimeout;
                        return function() {
                            return e(g, 1);
                        };
                    }
                    var m = new Array(1e3);
                    function g() {
                        for (var e = 0; e < o; e += 2) (0, m[e])(m[e + 1]), m[e] = void 0, m[e + 1] = void 0;
                        o = 0;
                    }
                    var v, y, b, x, _ = void 0;
                    function w(e, t) {
                        var r = this, i = new this.constructor(E);
                        void 0 === i[T] && G(i);
                        var n = r._state;
                        if (n) {
                            var o = arguments[n - 1];
                            h(function() {
                                return B(n, i, o, r._result);
                            });
                        } else U(r, i, e, t);
                        return i;
                    }
                    function S(e) {
                        if (e && "object" == typeof e && e.constructor === this) return e;
                        var t = new this(E);
                        return P(t, e), t;
                    }
                    _ = p ? function() {
                        return i.nextTick(g);
                    } : c ? (y = 0, b = new c(g), x = document.createTextNode(""), b.observe(x, {
                        characterData: !0
                    }), function() {
                        x.data = y = ++y % 2;
                    }) : d ? ((v = new MessageChannel()).port1.onmessage = g, function() {
                        return v.port2.postMessage(0);
                    }) : void 0 === l && "function" == typeof e ? function() {
                        try {
                            var e = Function("return this")().require("vertx");
                            return void 0 !== (s = e.runOnLoop || e.runOnContext) ? function() {
                                s(g);
                            } : f();
                        } catch (e) {
                            return f();
                        }
                    }() : f();
                    var T = Math.random().toString(36).substring(2);
                    function E() {}
                    var M = void 0, C = 1, L = 2, R = {
                        error: null
                    };
                    function A(e) {
                        try {
                            return e.then;
                        } catch (e) {
                            return R.error = e, R;
                        }
                    }
                    function D(e, r, i) {
                        var n, o, s, a;
                        r.constructor === e.constructor && i === w && r.constructor.resolve === S ? (s = e, 
                        (a = r)._state === C ? I(s, a._result) : a._state === L ? O(s, a._result) : U(a, void 0, function(e) {
                            return P(s, e);
                        }, function(e) {
                            return O(s, e);
                        })) : i === R ? (O(e, R.error), R.error = null) : void 0 === i ? I(e, r) : t(i) ? (n = r, 
                        o = i, h(function(e) {
                            var t = !1, r = function(e, t, r, i) {
                                try {
                                    e.call(t, r, i);
                                } catch (e) {
                                    return e;
                                }
                            }(o, n, function(r) {
                                t || (t = !0, n !== r ? P(e, r) : I(e, r));
                            }, function(r) {
                                t || (t = !0, O(e, r));
                            }, e._label);
                            !t && r && (t = !0, O(e, r));
                        }, e)) : I(e, r);
                    }
                    function P(e, t) {
                        var r, i;
                        e === t ? O(e, new TypeError("You cannot resolve a promise with itself")) : (i = typeof (r = t), 
                        null === r || "object" !== i && "function" !== i ? I(e, t) : D(e, t, A(t)));
                    }
                    function k(e) {
                        e._onerror && e._onerror(e._result), N(e);
                    }
                    function I(e, t) {
                        e._state === M && (e._result = t, e._state = C, 0 !== e._subscribers.length && h(N, e));
                    }
                    function O(e, t) {
                        e._state === M && (e._state = L, e._result = t, h(k, e));
                    }
                    function U(e, t, r, i) {
                        var n = e._subscribers, o = n.length;
                        e._onerror = null, n[o] = t, n[o + C] = r, n[o + L] = i, 0 === o && e._state && h(N, e);
                    }
                    function N(e) {
                        var t = e._subscribers, r = e._state;
                        if (0 !== t.length) {
                            for (var i = void 0, n = void 0, o = e._result, s = 0; s < t.length; s += 3) i = t[s], 
                            n = t[s + r], i ? B(r, i, n, o) : n(o);
                            e._subscribers.length = 0;
                        }
                    }
                    function B(e, r, i, n) {
                        var o = t(i), s = void 0, a = void 0, h = void 0, l = void 0;
                        if (o) {
                            if ((s = function(e, t) {
                                try {
                                    return e(t);
                                } catch (e) {
                                    return R.error = e, R;
                                }
                            }(i, n)) === R ? (l = !0, a = s.error, s.error = null) : h = !0, r === s) return void O(r, new TypeError("A promises callback cannot return that same promise."));
                        } else s = n, h = !0;
                        r._state !== M || (o && h ? P(r, s) : l ? O(r, a) : e === C ? I(r, s) : e === L && O(r, s));
                    }
                    var F = 0;
                    function G(e) {
                        e[T] = F++, e._state = void 0, e._result = void 0, e._subscribers = [];
                    }
                    var z = function() {
                        function e(e, t) {
                            this._instanceConstructor = e, this.promise = new e(E), this.promise[T] || G(this.promise), 
                            r(t) ? (this.length = t.length, this._remaining = t.length, this._result = new Array(this.length), 
                            0 === this.length ? I(this.promise, this._result) : (this.length = this.length || 0, 
                            this._enumerate(t), 0 === this._remaining && I(this.promise, this._result))) : O(this.promise, new Error("Array Methods must be provided an Array"));
                        }
                        return e.prototype._enumerate = function(e) {
                            for (var t = 0; this._state === M && t < e.length; t++) this._eachEntry(e[t], t);
                        }, e.prototype._eachEntry = function(e, t) {
                            var r = this._instanceConstructor, i = r.resolve;
                            if (i === S) {
                                var n = A(e);
                                if (n === w && e._state !== M) this._settledAt(e._state, t, e._result); else if ("function" != typeof n) this._remaining--, 
                                this._result[t] = e; else if (r === j) {
                                    var o = new r(E);
                                    D(o, e, n), this._willSettleAt(o, t);
                                } else this._willSettleAt(new r(function(t) {
                                    return t(e);
                                }), t);
                            } else this._willSettleAt(i(e), t);
                        }, e.prototype._settledAt = function(e, t, r) {
                            var i = this.promise;
                            i._state === M && (this._remaining--, e === L ? O(i, r) : this._result[t] = r), 
                            0 === this._remaining && I(i, this._result);
                        }, e.prototype._willSettleAt = function(e, t) {
                            var r = this;
                            U(e, void 0, function(e) {
                                return r._settledAt(C, t, e);
                            }, function(e) {
                                return r._settledAt(L, t, e);
                            });
                        }, e;
                    }(), j = function() {
                        function e(t) {
                            this[T] = F++, this._result = this._state = void 0, this._subscribers = [], E !== t && ("function" != typeof t && function() {
                                throw new TypeError("You must pass a resolver function as the first argument to the promise constructor");
                            }(), this instanceof e ? function(e, t) {
                                try {
                                    t(function(t) {
                                        P(e, t);
                                    }, function(t) {
                                        O(e, t);
                                    });
                                } catch (t) {
                                    O(e, t);
                                }
                            }(this, t) : function() {
                                throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");
                            }());
                        }
                        return e.prototype.catch = function(e) {
                            return this.then(null, e);
                        }, e.prototype.finally = function(e) {
                            var r = this.constructor;
                            return t(e) ? this.then(function(t) {
                                return r.resolve(e()).then(function() {
                                    return t;
                                });
                            }, function(t) {
                                return r.resolve(e()).then(function() {
                                    throw t;
                                });
                            }) : this.then(e, e);
                        }, e;
                    }();
                    return j.prototype.then = w, j.all = function(e) {
                        return new z(this, e).promise;
                    }, j.race = function(e) {
                        var t = this;
                        return r(e) ? new t(function(r, i) {
                            for (var n = e.length, o = 0; o < n; o++) t.resolve(e[o]).then(r, i);
                        }) : new t(function(e, t) {
                            return t(new TypeError("You must pass an array to race."));
                        });
                    }, j.resolve = S, j.reject = function(e) {
                        var t = new this(E);
                        return O(t, e), t;
                    }, j._setScheduler = function(e) {
                        a = e;
                    }, j._setAsap = function(e) {
                        h = e;
                    }, j._asap = h, j.polyfill = function() {
                        var e = void 0;
                        if (void 0 !== n) e = n; else if ("undefined" != typeof self) e = self; else try {
                            e = Function("return this")();
                        } catch (e) {
                            throw new Error("polyfill failed because global object is unavailable in this environment");
                        }
                        var t = e.Promise;
                        if (t) {
                            var r = null;
                            try {
                                r = Object.prototype.toString.call(t.resolve());
                            } catch (e) {}
                            if ("[object Promise]" === r && !t.cast) return;
                        }
                        e.Promise = j;
                    }, j.Promise = j;
                }, "object" == typeof r && void 0 !== t ? t.exports = o() : this.ES6Promise = o();
            }).call(this, e("_process"), "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
        }, {
            _process: 10
        } ],
        5: [ function(e, t, r) {
            !function(e, i) {
                if (void 0 !== r && void 0 !== t) i(r, t); else {
                    var n = {
                        exports: {}
                    };
                    i(n.exports, n), e.fetchJsonp = n.exports;
                }
            }(this, function(e, t) {
                "use strict";
                var r = "callback";
                function i(e) {
                    try {
                        delete window[e];
                    } catch (t) {
                        window[e] = void 0;
                    }
                }
                function n(e) {
                    var t = document.getElementById(e);
                    t && document.getElementsByTagName("head")[0].removeChild(t);
                }
                t.exports = function(e) {
                    var t = arguments.length <= 1 || void 0 === arguments[1] ? {} : arguments[1], o = e, s = t.timeout || 5e3, a = t.jsonpCallback || r, h = void 0;
                    return new Promise(function(r, l) {
                        var u = t.jsonpCallbackFunction || "jsonp_" + Date.now() + "_" + Math.ceil(1e5 * Math.random()), c = a + "_" + u;
                        window[u] = function(e) {
                            r({
                                ok: !0,
                                json: function() {
                                    return Promise.resolve(e);
                                }
                            }), h && clearTimeout(h), n(c), i(u);
                        }, o += -1 === o.indexOf("?") ? "?" : "&";
                        var p = document.createElement("script");
                        p.setAttribute("src", "" + o + a + "=" + u), t.charset && p.setAttribute("charset", t.charset), 
                        p.id = c, document.getElementsByTagName("head")[0].appendChild(p), h = setTimeout(function() {
                            l(new Error("JSONP request to " + e + " timed out")), i(u), n(c), window[u] = function() {
                                i(u);
                            };
                        }, s), p.onerror = function() {
                            l(new Error("JSONP request to " + e + " failed")), i(u), n(c), h && clearTimeout(h);
                        };
                    });
                };
            });
        }, {} ],
        6: [ function(e, t, r) {
            var i = i || function(e) {
                "use strict";
                if (!(void 0 === e || "undefined" != typeof navigator && /MSIE [1-9]\./.test(navigator.userAgent))) {
                    var t = e.document, r = function() {
                        return e.URL || e.webkitURL || e;
                    }, i = t.createElementNS("http://www.w3.org/1999/xhtml", "a"), n = "download" in i, o = /constructor/i.test(e.HTMLElement) || e.safari, s = /CriOS\/[\d]+/.test(navigator.userAgent), a = function(t) {
                        (e.setImmediate || e.setTimeout)(function() {
                            throw t;
                        }, 0);
                    }, h = function(e) {
                        setTimeout(function() {
                            "string" == typeof e ? r().revokeObjectURL(e) : e.remove();
                        }, 4e4);
                    }, l = function(e) {
                        return /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(e.type) ? new Blob([ String.fromCharCode(65279), e ], {
                            type: e.type
                        }) : e;
                    }, u = function(t, u, c) {
                        c || (t = l(t));
                        var p, d = this, f = "application/octet-stream" === t.type, m = function() {
                            !function(e, t, r) {
                                for (var i = (t = [].concat(t)).length; i--; ) {
                                    var n = e["on" + t[i]];
                                    if ("function" == typeof n) try {
                                        n.call(e, e);
                                    } catch (e) {
                                        a(e);
                                    }
                                }
                            }(d, "writestart progress write writeend".split(" "));
                        };
                        if (d.readyState = d.INIT, n) return p = r().createObjectURL(t), void setTimeout(function() {
                            var e, t;
                            i.href = p, i.download = u, e = i, t = new MouseEvent("click"), e.dispatchEvent(t), 
                            m(), h(p), d.readyState = d.DONE;
                        });
                        !function() {
                            if ((s || f && o) && e.FileReader) {
                                var i = new FileReader();
                                return i.onloadend = function() {
                                    var t = s ? i.result : i.result.replace(/^data:[^;]*;/, "data:attachment/file;");
                                    e.open(t, "_blank") || (e.location.href = t), t = void 0, d.readyState = d.DONE, 
                                    m();
                                }, i.readAsDataURL(t), d.readyState = d.INIT;
                            }
                            p || (p = r().createObjectURL(t)), f ? e.location.href = p : e.open(p, "_blank") || (e.location.href = p), 
                            d.readyState = d.DONE, m(), h(p);
                        }();
                    }, c = u.prototype;
                    return "undefined" != typeof navigator && navigator.msSaveOrOpenBlob ? function(e, t, r) {
                        return t = t || e.name || "download", r || (e = l(e)), navigator.msSaveOrOpenBlob(e, t);
                    } : (c.abort = function() {}, c.readyState = c.INIT = 0, c.WRITING = 1, c.DONE = 2, 
                    c.error = c.onwritestart = c.onprogress = c.onwrite = c.onabort = c.onerror = c.onwriteend = null, 
                    function(e, t, r) {
                        return new u(e, t || e.name || "download", r);
                    });
                }
            }("undefined" != typeof self && self || "undefined" != typeof window && window || this.content);
            void 0 !== t && t.exports && (t.exports.saveAs = i);
        }, {} ],
        7: [ function(e, t, r) {
            r.read = function(e, t, r, i, n) {
                var o, s, a = 8 * n - i - 1, h = (1 << a) - 1, l = h >> 1, u = -7, c = r ? n - 1 : 0, p = r ? -1 : 1, d = e[t + c];
                for (c += p, o = d & (1 << -u) - 1, d >>= -u, u += a; 0 < u; o = 256 * o + e[t + c], 
                c += p, u -= 8) ;
                for (s = o & (1 << -u) - 1, o >>= -u, u += i; 0 < u; s = 256 * s + e[t + c], c += p, 
                u -= 8) ;
                if (0 === o) o = 1 - l; else {
                    if (o === h) return s ? NaN : 1 / 0 * (d ? -1 : 1);
                    s += Math.pow(2, i), o -= l;
                }
                return (d ? -1 : 1) * s * Math.pow(2, o - i);
            }, r.write = function(e, t, r, i, n, o) {
                var s, a, h, l = 8 * o - n - 1, u = (1 << l) - 1, c = u >> 1, p = 23 === n ? Math.pow(2, -24) - Math.pow(2, -77) : 0, d = i ? 0 : o - 1, f = i ? 1 : -1, m = t < 0 || 0 === t && 1 / t < 0 ? 1 : 0;
                for (t = Math.abs(t), isNaN(t) || t === 1 / 0 ? (a = isNaN(t) ? 1 : 0, s = u) : (s = Math.floor(Math.log(t) / Math.LN2), 
                t * (h = Math.pow(2, -s)) < 1 && (s--, h *= 2), 2 <= (t += 1 <= s + c ? p / h : p * Math.pow(2, 1 - c)) * h && (s++, 
                h /= 2), u <= s + c ? (a = 0, s = u) : 1 <= s + c ? (a = (t * h - 1) * Math.pow(2, n), 
                s += c) : (a = t * Math.pow(2, c - 1) * Math.pow(2, n), s = 0)); 8 <= n; e[r + d] = 255 & a, 
                d += f, a /= 256, n -= 8) ;
                for (s = s << n | a, l += n; 0 < l; e[r + d] = 255 & s, d += f, s /= 256, l -= 8) ;
                e[r + d - f] |= 128 * m;
            };
        }, {} ],
        8: [ function(e, t, r) {
            "use strict";
            var i;
            function n(e, t) {
                return e.b === t.b && e.a === t.a;
            }
            function o(e, t) {
                return e.b < t.b || e.b === t.b && e.a <= t.a;
            }
            function s(e, t, r) {
                var i = t.b - e.b, n = r.b - t.b;
                return 0 < i + n ? i < n ? t.a - e.a + i / (i + n) * (e.a - r.a) : t.a - r.a + n / (i + n) * (r.a - e.a) : 0;
            }
            function a(e, t, r) {
                var i = t.b - e.b, n = r.b - t.b;
                return 0 < i + n ? (t.a - r.a) * i + (t.a - e.a) * n : 0;
            }
            function h(e, t) {
                return e.a < t.a || e.a === t.a && e.b <= t.b;
            }
            function l(e, t, r) {
                var i = t.a - e.a, n = r.a - t.a;
                return 0 < i + n ? i < n ? t.b - e.b + i / (i + n) * (e.b - r.b) : t.b - r.b + n / (i + n) * (r.b - e.b) : 0;
            }
            function u(e, t, r) {
                var i = t.a - e.a, n = r.a - t.a;
                return 0 < i + n ? (t.b - r.b) * i + (t.b - e.b) * n : 0;
            }
            function c(e, t, r, i) {
                return (e = e < 0 ? 0 : e) <= (r = r < 0 ? 0 : r) ? 0 === r ? (t + i) / 2 : t + e / (e + r) * (i - t) : i + r / (e + r) * (t - i);
            }
            function p(e) {
                var t = v(e.b);
                return b(t, e.c), b(t.b, e.c), x(t, e.a), t;
            }
            function d(e, t) {
                var r = !1, i = !1;
                e !== t && (t.a !== e.a && (i = !0, w(t.a, e.a)), t.d !== e.d && (r = !0, S(t.d, e.d)), 
                y(t, e), i || (b(t, e.a), e.a.c = e), r || (x(t, e.d), e.d.a = e));
            }
            function f(e) {
                var t = e.b, r = !1;
                e.d !== e.b.d && (r = !0, S(e.d, e.b.d)), e.c === e ? w(e.a, null) : (e.b.d.a = $(e), 
                e.a.c = e.c, y(e, $(e)), r || x(e, e.d)), t.c === t ? (w(t.a, null), S(t.d, null)) : (e.d.a = $(t), 
                t.a.c = t.c, y(t, $(t))), _(e);
            }
            function m(e) {
                var t = v(e), r = t.b;
                return y(t, e.e), t.a = e.b.a, b(r, t.a), t.d = r.d = e.d, t = t.b, y(e.b, $(e.b)), 
                y(e.b, t), e.b.a = t.a, t.b.a.c = t.b, t.b.d = e.b.d, t.f = e.f, t.b.f = e.b.f, 
                t;
            }
            function g(e, t) {
                var r = !1, i = v(e), n = i.b;
                return t.d !== e.d && (r = !0, S(t.d, e.d)), y(i, e.e), y(n, t), i.a = e.b.a, n.a = t.a, 
                i.d = n.d = e.d, e.d.a = n, r || x(i, e.d), i;
            }
            function v(e) {
                var t = new K(), r = new K(), i = e.b.h;
                return (((r.h = i).b.h = t).h = e).b.h = r, t.b = r, ((t.c = t).e = r).b = t, (r.c = r).e = t;
            }
            function y(e, t) {
                var r = e.c, i = t.c;
                r.b.e = t, (i.b.e = e).c = i, t.c = r;
            }
            function b(e, t) {
                var r = t.f, i = new ee(t, r);
                for (r.e = i, r = (t.f = i).c = e; r.a = i, (r = r.c) !== e; ) ;
            }
            function x(e, t) {
                var r = t.d, i = new Q(t, r);
                for (r.b = i, (t.d = i).a = e, i.c = t.c, r = e; r.d = i, (r = r.e) !== e; ) ;
            }
            function _(e) {
                var t = e.h;
                e = e.b.h, (t.b.h = e).b.h = t;
            }
            function w(e, t) {
                for (var r = e.c, i = r; i.a = t, (i = i.c) !== r; ) ;
                r = e.f, ((i = e.e).f = r).e = i;
            }
            function S(e, t) {
                for (var r = e.a, i = r; i.d = t, (i = i.e) !== r; ) ;
                r = e.d, ((i = e.b).d = r).b = i;
            }
            function T(e) {
                var t = 0;
                return Math.abs(e[1]) > Math.abs(e[0]) && (t = 1), Math.abs(e[2]) > Math.abs(e[t]) && (t = 2), 
                t;
            }
            var E = 4e150;
            function M(e, t) {
                e.f += t.f, e.b.f += t.b.f;
            }
            function C(e, t, r) {
                return e = e.a, t = t.a, r = r.a, t.b.a === e ? r.b.a === e ? o(t.a, r.a) ? a(r.b.a, t.a, r.a) <= 0 : 0 <= a(t.b.a, r.a, t.a) : a(r.b.a, e, r.a) <= 0 : r.b.a === e ? 0 <= a(t.b.a, e, t.a) : (t = s(t.b.a, e, t.a), 
                (e = s(r.b.a, e, r.a)) <= t);
            }
            function L(e) {
                e.a.i = null;
                var t = e.e;
                t.a.c = t.c, t.c.a = t.a, e.e = null;
            }
            function R(e, t) {
                f(e.a), e.c = !1, (e.a = t).i = e;
            }
            function A(e) {
                for (var t = e.a.a; (e = pe(e)).a.a === t; ) ;
                return e.c && (R(e, t = g(ce(e).a.b, e.a.e)), e = pe(e)), e;
            }
            function D(e, t, r) {
                var i = new ue();
                return i.a = r, i.e = W(e.f, t.e, i), r.i = i;
            }
            function P(e, t) {
                switch (e.s) {
                  case 100130:
                    return 0 != (1 & t);

                  case 100131:
                    return 0 !== t;

                  case 100132:
                    return 0 < t;

                  case 100133:
                    return t < 0;

                  case 100134:
                    return 2 <= t || t <= -2;
                }
                return !1;
            }
            function k(e) {
                var t = e.a, r = t.d;
                r.c = e.d, r.a = t, L(e);
            }
            function I(e, t, r) {
                for (t = (e = t).a; e !== r; ) {
                    e.c = !1;
                    var i = ce(e), n = i.a;
                    if (n.a !== t.a) {
                        if (!i.c) {
                            k(e);
                            break;
                        }
                        R(i, n = g(t.c.b, n.b));
                    }
                    t.c !== n && (d($(n), n), d(t, n)), k(e), t = i.a, e = i;
                }
                return t;
            }
            function O(e, t, r, i, n, o) {
                for (var s = !0; D(e, t, r.b), (r = r.c) !== i; ) ;
                for (null === n && (n = ce(t).a.b.c); (r = (i = ce(t)).a.b).a === n.a; ) r.c !== n && (d($(r), r), 
                d($(n), r)), i.f = t.f - r.f, i.d = P(e, i.f), t.b = !0, !s && F(e, t) && (M(r, n), 
                L(t), f(n)), s = !1, t = i, n = r;
                t.b = !0, o && z(e, t);
            }
            function U(e, t, r, i, n) {
                var o = [ t.g[0], t.g[1], t.g[2] ];
                t.d = null, t.d = e.o && e.o(o, r, i, e.c) || null, null === t.d && (n ? e.n || (Z(e, 100156), 
                e.n = !0) : t.d = r[0]);
            }
            function N(e, t, r) {
                var i = [ null, null, null, null ];
                i[0] = t.a.d, i[1] = r.a.d, U(e, t.a, i, [ .5, .5, 0, 0 ], !1), d(t, r);
            }
            function B(e, t, r, i, n) {
                var o = Math.abs(t.b - e.b) + Math.abs(t.a - e.a), s = Math.abs(r.b - e.b) + Math.abs(r.a - e.a), a = n + 1;
                i[n] = .5 * s / (o + s), i[a] = .5 * o / (o + s), e.g[0] += i[n] * t.g[0] + i[a] * r.g[0], 
                e.g[1] += i[n] * t.g[1] + i[a] * r.g[1], e.g[2] += i[n] * t.g[2] + i[a] * r.g[2];
            }
            function F(e, t) {
                var r = ce(t), i = t.a, s = r.a;
                if (o(i.a, s.a)) {
                    if (0 < a(s.b.a, i.a, s.a)) return !1;
                    if (n(i.a, s.a)) {
                        if (i.a !== s.a) {
                            r = e.e;
                            var h = i.a.h;
                            if (0 <= h) {
                                var l = (r = r.b).d, u = r.e, c = r.c, p = c[h];
                                l[p] = l[r.a], (c[l[p]] = p) <= --r.a && (p <= 1 ? he(r, p) : o(u[l[p >> 1]], u[l[p]]) ? he(r, p) : le(r, p)), 
                                u[h] = null, c[h] = r.b, r.b = h;
                            } else for (r.c[-(h + 1)] = null; 0 < r.a && null === r.c[r.d[r.a - 1]]; ) --r.a;
                            N(e, $(s), i);
                        }
                    } else m(s.b), d(i, $(s)), t.b = r.b = !0;
                } else {
                    if (a(i.b.a, s.a, i.a) < 0) return !1;
                    pe(t).b = t.b = !0, m(i.b), d($(s), i);
                }
                return !0;
            }
            function G(e, t) {
                var r = ce(t), i = t.a, p = r.a, f = i.a, g = p.a, v = i.b.a, y = p.b.a, b = new ee();
                if (a(v, e.a, f), a(y, e.a, g), f === g || Math.min(f.a, v.a) > Math.max(g.a, y.a)) return !1;
                if (o(f, g)) {
                    if (0 < a(y, f, g)) return !1;
                } else if (a(v, g, f) < 0) return !1;
                var x, _, w = v, S = f, T = y, E = g;
                if (o(w, S) || (x = w, w = S, S = x), o(T, E) || (x = T, T = E, E = x), o(w, T) || (x = w, 
                w = T, T = x, x = S, S = E, E = x), o(T, S) ? o(S, E) ? ((x = s(w, T, S)) + (_ = s(T, S, E)) < 0 && (x = -x, 
                _ = -_), b.b = c(x, T.b, _, S.b)) : ((x = a(w, T, S)) + (_ = -a(w, E, S)) < 0 && (x = -x, 
                _ = -_), b.b = c(x, T.b, _, E.b)) : b.b = (T.b + S.b) / 2, h(w, S) || (x = w, w = S, 
                S = x), h(T, E) || (x = T, T = E, E = x), h(w, T) || (x = w, w = T, T = x, x = S, 
                S = E, E = x), h(T, S) ? h(S, E) ? ((x = l(w, T, S)) + (_ = l(T, S, E)) < 0 && (x = -x, 
                _ = -_), b.a = c(x, T.a, _, S.a)) : ((x = u(w, T, S)) + (_ = -u(w, E, S)) < 0 && (x = -x, 
                _ = -_), b.a = c(x, T.a, _, E.a)) : b.a = (T.a + S.a) / 2, o(b, e.a) && (b.b = e.a.b, 
                b.a = e.a.a), o(w = o(f, g) ? f : g, b) && (b.b = w.b, b.a = w.a), n(b, f) || n(b, g)) return F(e, t), 
                !1;
                if (!n(v, e.a) && 0 <= a(v, e.a, b) || !n(y, e.a) && a(y, e.a, b) <= 0) {
                    if (y === e.a) return m(i.b), d(p.b, i), i = ce(t = A(t)).a, I(e, ce(t), r), O(e, t, $(i), i, i, !0), 
                    !0;
                    if (v !== e.a) return 0 <= a(v, e.a, b) && (pe(t).b = t.b = !0, m(i.b), i.a.b = e.a.b, 
                    i.a.a = e.a.a), a(y, e.a, b) <= 0 && (t.b = r.b = !0, m(p.b), p.a.b = e.a.b, p.a.a = e.a.a), 
                    !1;
                    for (m(p.b), d(i.e, $(p)), g = (f = r = t).a.b.a; (f = pe(f)).a.b.a === g; ) ;
                    return f = ce(t = f).a.b.c, r.a = $(p), O(e, t, (p = I(e, r, null)).c, i.b.c, f, !0), 
                    !0;
                }
                return m(i.b), m(p.b), d($(p), i), i.a.b = b.b, i.a.a = b.a, i.a.h = re(e.e, i.a), 
                i = i.a, p = [ 0, 0, 0, 0 ], b = [ f.d, v.d, g.d, y.d ], i.g[0] = i.g[1] = i.g[2] = 0, 
                B(i, f, v, p, 0), B(i, g, y, p, 2), U(e, i, b, p, !0), pe(t).b = t.b = r.b = !0, 
                !1;
            }
            function z(e, t) {
                for (var r = ce(t); ;) {
                    for (;r.b; ) r = ce(t = r);
                    if (!(t.b || null !== (t = pe(r = t)) && t.b)) break;
                    t.b = !1;
                    var i, n = t.a, s = r.a;
                    if (i = n.b.a !== s.b.a) e: {
                        var h = ce(i = t), l = i.a, u = h.a, c = void 0;
                        if (o(l.b.a, u.b.a)) {
                            if (a(l.b.a, u.b.a, l.a) < 0) {
                                i = !1;
                                break e;
                            }
                            pe(i).b = i.b = !0, c = m(l), d(u.b, c), c.d.c = i.d;
                        } else {
                            if (0 < a(u.b.a, l.b.a, u.a)) {
                                i = !1;
                                break e;
                            }
                            i.b = h.b = !0, c = m(u), d(l.e, u.b), c.b.d.c = i.d;
                        }
                        i = !0;
                    }
                    if (i && (r.c ? (L(r), f(s), s = (r = ce(t)).a) : t.c && (L(t), f(n), n = (t = pe(r)).a)), 
                    n.a !== s.a) if (n.b.a === s.b.a || t.c || r.c || n.b.a !== e.a && s.b.a !== e.a) F(e, t); else if (G(e, t)) break;
                    n.a === s.a && n.b.a === s.b.a && (M(s, n), L(t), f(n), t = pe(r));
                }
            }
            function j(e, t) {
                for (var r = (e.a = t).c; null === r.i; ) if ((r = r.c) === t.c) {
                    r = e;
                    var i = t;
                    (l = new ue()).a = i.c.b;
                    for (var s = (c = r.f).a; null !== (s = s.a).b && !c.c(c.b, l, s.b); ) ;
                    var h = ce(c = s.b), l = c.a;
                    if (s = h.a, 0 === a(l.b.a, i, l.a)) n((l = c.a).a, i) || n(l.b.a, i) || (m(l.b), 
                    c.c && (f(l.c), c.c = !1), d(i.c, l), j(r, i)); else {
                        var u = o(s.b.a, l.b.a) ? c : h;
                        h = void 0, c.d || u.c ? (h = u === c ? g(i.c.b, l.e) : g(s.b.c.b, i.c).b, u.c ? R(u, h) : ((c = D(l = r, c, h)).f = pe(c).f + c.a.f, 
                        c.d = P(l, c.f)), j(r, i)) : O(r, c, i.c, i.c, null, !0);
                    }
                    return;
                }
                if (c = (l = ce(r = A(r.i))).a, (l = I(e, l, null)).c === c) {
                    l = (c = l).c, s = ce(r), h = r.a, u = s.a;
                    var c, p = !1;
                    h.b.a !== u.b.a && G(e, r), n(h.a, e.a) && (d($(l), h), l = ce(r = A(r)).a, I(e, ce(r), s), 
                    p = !0), n(u.a, e.a) && (d(c, $(u)), c = I(e, s, null), p = !0), p ? O(e, r, c.c, l, l, !0) : (i = o(u.a, h.a) ? $(u) : h, 
                    O(e, r, i = g(c.c.b, i), i.c, i.c, !1), i.b.i.c = !0, z(e, r));
                } else O(e, r, l.c, c, c, !0);
            }
            function H(e, t) {
                var r = new ue(), i = p(e.b);
                i.a.b = E, i.a.a = t, i.b.a.b = -E, i.b.a.a = t, e.a = i.b.a, r.a = i, r.f = 0, 
                r.d = !1, r.c = !1, r.h = !0, r.b = !1, i = W(i = e.f, i.a, r), r.e = i;
            }
            function V(e) {
                this.a = new q(), this.b = e, this.c = C;
            }
            function W(e, t, r) {
                for (;null !== (t = t.c).b && !e.c(e.b, t.b, r); ) ;
                return e = new q(r, t.a, t), t.a.c = e, t.a = e;
            }
            function q(e, t, r) {
                this.b = e || null, this.a = t || this, this.c = r || this;
            }
            function X() {
                this.d = 0, this.p = this.b = this.q = null, this.j = [ 0, 0, 0 ], this.s = 100130, 
                this.n = !1, this.o = this.a = this.e = this.f = null, this.m = !1, this.c = this.r = this.i = this.k = this.l = this.h = null;
            }
            function Y(e, t) {
                if (e.d !== t) for (;e.d !== t; ) if (e.d < t) switch (e.d) {
                  case 0:
                    Z(e, 100151), e.u(null);
                    break;

                  case 1:
                    Z(e, 100152), e.t();
                } else switch (e.d) {
                  case 2:
                    Z(e, 100154), e.v();
                    break;

                  case 1:
                    Z(e, 100153), e.w();
                }
            }
            function Z(e, t) {
                e.p && e.p(t, e.c);
            }
            function Q(e, t) {
                this.b = e || this, this.d = t || this, this.a = null, this.c = !1;
            }
            function K() {
                (this.h = this).i = this.d = this.a = this.e = this.c = this.b = null, this.f = 0;
            }
            function $(e) {
                return e.b.e;
            }
            function J() {
                this.c = new ee(), this.a = new Q(), this.b = new K(), this.d = new K(), this.b.b = this.d, 
                this.d.b = this.b;
            }
            function ee(e, t) {
                this.e = e || this, this.f = t || this, this.d = this.c = null, this.g = [ 0, 0, 0 ], 
                this.h = this.a = this.b = 0;
            }
            function te() {
                this.c = [], this.d = null, this.a = 0, this.e = !1, this.b = new ne();
            }
            function re(e, t) {
                if (e.e) {
                    var r, i = e.b, n = ++i.a;
                    return 2 * n > i.f && (i.f *= 2, i.c = oe(i.c, i.f + 1)), 0 === i.b ? r = n : (r = i.b, 
                    i.b = i.c[i.b]), i.e[r] = t, i.c[r] = n, i.d[n] = r, i.h && le(i, n), r;
                }
                return i = e.a++, e.c[i] = t, -(i + 1);
            }
            function ie(e) {
                if (0 === e.a) return ae(e.b);
                var t = e.c[e.d[e.a - 1]];
                if (0 !== e.b.a && o(se(e.b), t)) return ae(e.b);
                for (;--e.a, 0 < e.a && null === e.c[e.d[e.a - 1]]; ) ;
                return t;
            }
            function ne() {
                this.d = oe([ 0 ], 33), this.e = [ null, null ], this.c = [ 0, 0 ], this.a = 0, 
                this.f = 32, this.b = 0, this.h = !1, this.d[1] = 1;
            }
            function oe(e, t) {
                for (var r = Array(t), i = 0; i < e.length; i++) r[i] = e[i];
                for (;i < t; i++) r[i] = 0;
                return r;
            }
            function se(e) {
                return e.e[e.d[1]];
            }
            function ae(e) {
                var t = e.d, r = e.e, i = e.c, n = t[1], o = r[n];
                return 0 < e.a && (t[1] = t[e.a], i[t[1]] = 1, r[n] = null, i[n] = e.b, e.b = n, 
                0 < --e.a && he(e, 1)), o;
            }
            function he(e, t) {
                for (var r = e.d, i = e.e, n = e.c, s = t, a = r[s]; ;) {
                    var h = s << 1;
                    h < e.a && o(i[r[h + 1]], i[r[h]]) && (h += 1);
                    var l = r[h];
                    if (h > e.a || o(i[a], i[l])) {
                        n[r[s] = a] = s;
                        break;
                    }
                    n[r[s] = l] = s, s = h;
                }
            }
            function le(e, t) {
                for (var r = e.d, i = e.e, n = e.c, s = t, a = r[s]; ;) {
                    var h = s >> 1, l = r[h];
                    if (0 === h || o(i[l], i[a])) {
                        n[r[s] = a] = s;
                        break;
                    }
                    n[r[s] = l] = s, s = h;
                }
            }
            function ue() {
                this.e = this.a = null, this.f = 0, this.c = this.b = this.h = this.d = !1;
            }
            function ce(e) {
                return e.e.c.b;
            }
            function pe(e) {
                return e.e.a.b;
            }
            (i = X.prototype).x = function() {
                Y(this, 0);
            }, i.B = function(e, t) {
                switch (e) {
                  case 100142:
                    return;

                  case 100140:
                    switch (t) {
                      case 100130:
                      case 100131:
                      case 100132:
                      case 100133:
                      case 100134:
                        return void (this.s = t);
                    }
                    break;

                  case 100141:
                    return void (this.m = !!t);

                  default:
                    return void Z(this, 100900);
                }
                Z(this, 100901);
            }, i.y = function(e) {
                switch (e) {
                  case 100142:
                    return 0;

                  case 100140:
                    return this.s;

                  case 100141:
                    return this.m;

                  default:
                    Z(this, 100900);
                }
                return !1;
            }, i.A = function(e, t, r) {
                this.j[0] = e, this.j[1] = t, this.j[2] = r;
            }, i.z = function(e, t) {
                var r = t || null;
                switch (e) {
                  case 100100:
                  case 100106:
                    this.h = r;
                    break;

                  case 100104:
                  case 100110:
                    this.l = r;
                    break;

                  case 100101:
                  case 100107:
                    this.k = r;
                    break;

                  case 100102:
                  case 100108:
                    this.i = r;
                    break;

                  case 100103:
                  case 100109:
                    this.p = r;
                    break;

                  case 100105:
                  case 100111:
                    this.o = r;
                    break;

                  case 100112:
                    this.r = r;
                    break;

                  default:
                    Z(this, 100900);
                }
            }, i.C = function(e, t) {
                var r = !1, i = [ 0, 0, 0 ];
                Y(this, 2);
                for (var n = 0; n < 3; ++n) {
                    var o = e[n];
                    o < -1e150 && (o = -1e150, r = !0), 1e150 < o && (o = 1e150, r = !0), i[n] = o;
                }
                r && Z(this, 100155), null === (r = this.q) ? d(r = p(this.b), r.b) : (m(r), r = r.e), 
                r.a.d = t, r.a.g[0] = i[0], r.a.g[1] = i[1], r.a.g[2] = i[2], r.f = 1, r.b.f = -1, 
                this.q = r;
            }, i.u = function(e) {
                Y(this, 0), this.d = 1, this.b = new J(), this.c = e;
            }, i.t = function() {
                Y(this, 1), this.d = 2, this.q = null;
            }, i.v = function() {
                Y(this, 2), this.d = 1;
            }, i.w = function() {
                Y(this, 1), this.d = 0;
                var e, t, r = !1, i = [ c = this.j[0], s = this.j[1], l = this.j[2] ];
                if (0 === c && 0 === s && 0 === l) {
                    for (var s = [ -2e150, -2e150, -2e150 ], h = [ 2e150, 2e150, 2e150 ], l = [], u = [], c = (r = this.b.c).e; c !== r; c = c.e) for (var p = 0; p < 3; ++p) {
                        var d = c.g[p];
                        d < h[p] && (h[p] = d, u[p] = c), d > s[p] && (s[p] = d, l[p] = c);
                    }
                    if (c = 0, s[1] - h[1] > s[0] - h[0] && (c = 1), s[2] - h[2] > s[c] - h[c] && (c = 2), 
                    h[c] >= s[c]) i[0] = 0, i[1] = 0, i[2] = 1; else {
                        for (s = 0, h = u[c], l = l[c], u = [ 0, 0, 0 ], h = [ h.g[0] - l.g[0], h.g[1] - l.g[1], h.g[2] - l.g[2] ], 
                        p = [ 0, 0, 0 ], c = r.e; c !== r; c = c.e) p[0] = c.g[0] - l.g[0], p[1] = c.g[1] - l.g[1], 
                        p[2] = c.g[2] - l.g[2], u[0] = h[1] * p[2] - h[2] * p[1], u[1] = h[2] * p[0] - h[0] * p[2], 
                        u[2] = h[0] * p[1] - h[1] * p[0], s < (d = u[0] * u[0] + u[1] * u[1] + u[2] * u[2]) && (s = d, 
                        i[0] = u[0], i[1] = u[1], i[2] = u[2]);
                        s <= 0 && (i[0] = i[1] = i[2] = 0, i[T(h)] = 1);
                    }
                    r = !0;
                }
                for (u = T(i), c = this.b.c, s = (u + 1) % 3, l = (u + 2) % 3, u = 0 < i[u] ? 1 : -1, 
                i = c.e; i !== c; i = i.e) i.b = i.g[s], i.a = u * i.g[l];
                if (r) {
                    for (i = 0, c = (r = this.b.a).b; c !== r; c = c.b) if (!((s = c.a).f <= 0)) for (;i += (s.a.b - s.b.a.b) * (s.a.a + s.b.a.a), 
                    (s = s.e) !== c.a; ) ;
                    if (i < 0) for (r = (i = this.b.c).e; r !== i; r = r.e) r.a = -r.a;
                }
                for (this.n = !1, c = (i = this.b.b).h; c !== i; c = r) r = c.h, s = c.e, n(c.a, c.b.a) && c.e.e !== c && (N(this, s, c), 
                f(c), s = (c = s).e), s.e === c && (s !== c && (s !== r && s !== r.b || (r = r.h), 
                f(s)), c !== r && c !== r.b || (r = r.h), f(c));
                for (this.e = i = new te(), c = (r = this.b.c).e; c !== r; c = c.e) c.h = re(i, c);
                for (function(e) {
                    e.d = [];
                    for (var t = 0; t < e.a; t++) e.d[t] = t;
                    var r;
                    e.d.sort((r = e.c, function(e, t) {
                        return o(r[e], r[t]) ? 1 : -1;
                    })), e.e = !0, function(e) {
                        for (var t = e.a; 1 <= t; --t) he(e, t);
                        e.h = !0;
                    }(e.b);
                }(i), this.f = new V(this), H(this, -E), H(this, E); null !== (i = ie(this.e)); ) {
                    for (;;) {
                        e: if (c = this.e, 0 === c.a) r = se(c.b); else if (r = c.c[c.d[c.a - 1]], 0 !== c.b.a && (c = se(c.b), 
                        o(c, r))) {
                            r = c;
                            break e;
                        }
                        if (null === r || !n(r, i)) break;
                        r = ie(this.e), N(this, i.c, r.c);
                    }
                    j(this, i);
                }
                for (this.a = this.f.a.a.b.a.a, i = 0; null !== (r = this.f.a.a.b); ) r.h || ++i, 
                L(r);
                for (this.f = null, (i = this.e).b = null, i.d = null, this.e = i.c = null, c = (i = this.b).a.b; c !== i.a; c = r) r = c.b, 
                (c = c.a).e.e === c && (M(c.c, c), f(c));
                if (!this.n) {
                    if (i = this.b, this.m) for (c = i.b.h; c !== i.b; c = r) r = c.h, c.b.d.c !== c.d.c ? c.f = c.d.c ? 1 : -1 : f(c); else for (c = i.a.b; c !== i.a; c = r) if (r = c.b, 
                    c.c) {
                        for (c = c.a; o(c.b.a, c.a); c = c.c.b) ;
                        for (;o(c.a, c.b.a); c = c.e) ;
                        for (s = c.c.b, l = void 0; c.e !== s; ) if (o(c.b.a, s.a)) {
                            for (;s.e !== c && (o((t = s.e).b.a, t.a) || a(s.a, s.b.a, s.e.b.a) <= 0); ) s = (l = g(s.e, s)).b;
                            s = s.c.b;
                        } else {
                            for (;s.e !== c && (o((e = c.c.b).a, e.b.a) || 0 <= a(c.b.a, c.a, c.c.b.a)); ) c = (l = g(c, c.c.b)).b;
                            c = c.e;
                        }
                        for (;s.e.e !== c; ) s = (l = g(s.e, s)).b;
                    }
                    if (this.h || this.i || this.k || this.l) if (this.m) {
                        for (r = (i = this.b).a.b; r !== i.a; r = r.b) if (r.c) {
                            for (this.h && this.h(2, this.c), c = r.a; this.k && this.k(c.a.d, this.c), (c = c.e) !== r.a; ) ;
                            this.i && this.i(this.c);
                        }
                    } else {
                        for (i = this.b, r = !!this.l, c = !1, s = -1, l = i.a.d; l !== i.a; l = l.d) if (l.c) for (c || (this.h && this.h(4, this.c), 
                        c = !0), u = l.a; r && s !== (h = u.b.d.c ? 0 : 1) && (s = h, this.l && this.l(!!s, this.c)), 
                        this.k && this.k(u.a.d, this.c), (u = u.e) !== l.a; ) ;
                        c && this.i && this.i(this.c);
                    }
                    if (this.r) {
                        for (c = (i = this.b).a.b; c !== i.a; c = r) if (r = c.b, !c.c) {
                            for (l = (s = c.a).e, u = void 0; l = (u = l).e, (u.d = null) === u.b.d && (u.c === u ? w(u.a, null) : (u.a.c = u.c, 
                            y(u, $(u))), (h = u.b).c === h ? w(h.a, null) : (h.a.c = h.c, y(h, $(h))), _(u)), 
                            u !== s; ) ;
                            s = c.d, ((c = c.b).d = s).b = c;
                        }
                        return this.r(this.b), void (this.c = this.b = null);
                    }
                }
                this.b = this.c = null;
            }, this.libtess = {
                GluTesselator: X,
                windingRule: {
                    GLU_TESS_WINDING_ODD: 100130,
                    GLU_TESS_WINDING_NONZERO: 100131,
                    GLU_TESS_WINDING_POSITIVE: 100132,
                    GLU_TESS_WINDING_NEGATIVE: 100133,
                    GLU_TESS_WINDING_ABS_GEQ_TWO: 100134
                },
                primitiveType: {
                    GL_LINE_LOOP: 2,
                    GL_TRIANGLES: 4,
                    GL_TRIANGLE_STRIP: 5,
                    GL_TRIANGLE_FAN: 6
                },
                errorType: {
                    GLU_TESS_MISSING_BEGIN_POLYGON: 100151,
                    GLU_TESS_MISSING_END_POLYGON: 100153,
                    GLU_TESS_MISSING_BEGIN_CONTOUR: 100152,
                    GLU_TESS_MISSING_END_CONTOUR: 100154,
                    GLU_TESS_COORD_TOO_LARGE: 100155,
                    GLU_TESS_NEED_COMBINE_CALLBACK: 100156
                },
                gluEnum: {
                    GLU_TESS_MESH: 100112,
                    GLU_TESS_TOLERANCE: 100142,
                    GLU_TESS_WINDING_RULE: 100140,
                    GLU_TESS_BOUNDARY_ONLY: 100141,
                    GLU_INVALID_ENUM: 100900,
                    GLU_INVALID_VALUE: 100901,
                    GLU_TESS_BEGIN: 100100,
                    GLU_TESS_VERTEX: 100101,
                    GLU_TESS_END: 100102,
                    GLU_TESS_ERROR: 100103,
                    GLU_TESS_EDGE_FLAG: 100104,
                    GLU_TESS_COMBINE: 100105,
                    GLU_TESS_BEGIN_DATA: 100106,
                    GLU_TESS_VERTEX_DATA: 100107,
                    GLU_TESS_END_DATA: 100108,
                    GLU_TESS_ERROR_DATA: 100109,
                    GLU_TESS_EDGE_FLAG_DATA: 100110,
                    GLU_TESS_COMBINE_DATA: 100111
                }
            }, X.prototype.gluDeleteTess = X.prototype.x, X.prototype.gluTessProperty = X.prototype.B, 
            X.prototype.gluGetTessProperty = X.prototype.y, X.prototype.gluTessNormal = X.prototype.A, 
            X.prototype.gluTessCallback = X.prototype.z, X.prototype.gluTessVertex = X.prototype.C, 
            X.prototype.gluTessBeginPolygon = X.prototype.u, X.prototype.gluTessBeginContour = X.prototype.t, 
            X.prototype.gluTessEndContour = X.prototype.v, X.prototype.gluTessEndPolygon = X.prototype.w, 
            void 0 !== t && (t.exports = this.libtess);
        }, {} ],
        9: [ function(e, t, r) {
            (function(i) {
                (function(t) {
                    "use strict";
                    var r, n;
                    String.prototype.codePointAt || (r = function() {
                        try {
                            var e = {}, t = Object.defineProperty, r = t(e, e, e) && t;
                        } catch (e) {}
                        return r;
                    }(), n = function(e) {
                        if (null == this) throw TypeError();
                        var t = String(this), r = t.length, i = e ? Number(e) : 0;
                        if (i != i && (i = 0), !(i < 0 || r <= i)) {
                            var n, o = t.charCodeAt(i);
                            return 55296 <= o && o <= 56319 && i + 1 < r && 56320 <= (n = t.charCodeAt(i + 1)) && n <= 57343 ? 1024 * (o - 55296) + n - 56320 + 65536 : o;
                        }
                    }, r ? r(String.prototype, "codePointAt", {
                        value: n,
                        configurable: !0,
                        writable: !0
                    }) : String.prototype.codePointAt = n);
                    var o = 0, s = -3;
                    function a() {
                        this.table = new Uint16Array(16), this.trans = new Uint16Array(288);
                    }
                    function h(e, t) {
                        this.source = e, this.sourceIndex = 0, this.tag = 0, this.bitcount = 0, this.dest = t, 
                        this.destLen = 0, this.ltree = new a(), this.dtree = new a();
                    }
                    var l = new a(), u = new a(), c = new Uint8Array(30), p = new Uint16Array(30), d = new Uint8Array(30), f = new Uint16Array(30), m = new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]), g = new a(), v = new Uint8Array(320);
                    function y(e, t, r, i) {
                        var n, o;
                        for (n = 0; n < r; ++n) e[n] = 0;
                        for (n = 0; n < 30 - r; ++n) e[n + r] = n / r | 0;
                        for (o = i, n = 0; n < 30; ++n) t[n] = o, o += 1 << e[n];
                    }
                    var b = new Uint16Array(16);
                    function x(e, t, r, i) {
                        var n, o;
                        for (n = 0; n < 16; ++n) e.table[n] = 0;
                        for (n = 0; n < i; ++n) e.table[t[r + n]]++;
                        for (n = o = e.table[0] = 0; n < 16; ++n) b[n] = o, o += e.table[n];
                        for (n = 0; n < i; ++n) t[r + n] && (e.trans[b[t[r + n]]++] = n);
                    }
                    function _(e) {
                        e.bitcount-- || (e.tag = e.source[e.sourceIndex++], e.bitcount = 7);
                        var t = 1 & e.tag;
                        return e.tag >>>= 1, t;
                    }
                    function w(e, t, r) {
                        if (!t) return r;
                        for (;e.bitcount < 24; ) e.tag |= e.source[e.sourceIndex++] << e.bitcount, e.bitcount += 8;
                        var i = e.tag & 65535 >>> 16 - t;
                        return e.tag >>>= t, e.bitcount -= t, i + r;
                    }
                    function S(e, t) {
                        for (;e.bitcount < 24; ) e.tag |= e.source[e.sourceIndex++] << e.bitcount, e.bitcount += 8;
                        for (var r = 0, i = 0, n = 0, o = e.tag; i = 2 * i + (1 & o), o >>>= 1, ++n, r += t.table[n], 
                        0 <= (i -= t.table[n]); ) ;
                        return e.tag = o, e.bitcount -= n, t.trans[r + i];
                    }
                    function T(e, t, r) {
                        var i, n, o, s, a, h;
                        for (i = w(e, 5, 257), n = w(e, 5, 1), o = w(e, 4, 4), s = 0; s < 19; ++s) v[s] = 0;
                        for (s = 0; s < o; ++s) {
                            var l = w(e, 3, 0);
                            v[m[s]] = l;
                        }
                        for (x(g, v, 0, 19), a = 0; a < i + n; ) {
                            var u = S(e, g);
                            switch (u) {
                              case 16:
                                var c = v[a - 1];
                                for (h = w(e, 2, 3); h; --h) v[a++] = c;
                                break;

                              case 17:
                                for (h = w(e, 3, 3); h; --h) v[a++] = 0;
                                break;

                              case 18:
                                for (h = w(e, 7, 11); h; --h) v[a++] = 0;
                                break;

                              default:
                                v[a++] = u;
                            }
                        }
                        x(t, v, 0, i), x(r, v, i, n);
                    }
                    function E(e, t, r) {
                        for (;;) {
                            var i, n, s, a, h = S(e, t);
                            if (256 === h) return o;
                            if (h < 256) e.dest[e.destLen++] = h; else for (i = w(e, c[h -= 257], p[h]), n = S(e, r), 
                            a = s = e.destLen - w(e, d[n], f[n]); a < s + i; ++a) e.dest[e.destLen++] = e.dest[a];
                        }
                    }
                    function M(e) {
                        for (var t, r; 8 < e.bitcount; ) e.sourceIndex--, e.bitcount -= 8;
                        if ((t = 256 * (t = e.source[e.sourceIndex + 1]) + e.source[e.sourceIndex]) !== (65535 & ~(256 * e.source[e.sourceIndex + 3] + e.source[e.sourceIndex + 2]))) return s;
                        for (e.sourceIndex += 4, r = t; r; --r) e.dest[e.destLen++] = e.source[e.sourceIndex++];
                        return e.bitcount = 0, o;
                    }
                    !function(e, t) {
                        var r;
                        for (r = 0; r < 7; ++r) e.table[r] = 0;
                        for (e.table[7] = 24, e.table[8] = 152, e.table[9] = 112, r = 0; r < 24; ++r) e.trans[r] = 256 + r;
                        for (r = 0; r < 144; ++r) e.trans[24 + r] = r;
                        for (r = 0; r < 8; ++r) e.trans[168 + r] = 280 + r;
                        for (r = 0; r < 112; ++r) e.trans[176 + r] = 144 + r;
                        for (r = 0; r < 5; ++r) t.table[r] = 0;
                        for (t.table[5] = 32, r = 0; r < 32; ++r) t.trans[r] = r;
                    }(l, u), y(c, p, 4, 3), y(d, f, 2, 1), c[28] = 0, p[28] = 258;
                    var C = function(e, t) {
                        var r, i, n = new h(e, t);
                        do {
                            switch (r = _(n), w(n, 2, 0)) {
                              case 0:
                                i = M(n);
                                break;

                              case 1:
                                i = E(n, l, u);
                                break;

                              case 2:
                                T(n, n.ltree, n.dtree), i = E(n, n.ltree, n.dtree);
                                break;

                              default:
                                i = s;
                            }
                            if (i !== o) throw new Error("Data error");
                        } while (!r);
                        return n.destLen < n.dest.length ? "function" == typeof n.dest.slice ? n.dest.slice(0, n.destLen) : n.dest.subarray(0, n.destLen) : n.dest;
                    };
                    function L(e, t, r, i, n) {
                        return Math.pow(1 - n, 3) * e + 3 * Math.pow(1 - n, 2) * n * t + 3 * (1 - n) * Math.pow(n, 2) * r + Math.pow(n, 3) * i;
                    }
                    function R() {
                        this.x1 = Number.NaN, this.y1 = Number.NaN, this.x2 = Number.NaN, this.y2 = Number.NaN;
                    }
                    function A() {
                        this.commands = [], this.fill = "black", this.stroke = null, this.strokeWidth = 1;
                    }
                    function D(e) {
                        throw new Error(e);
                    }
                    function P(e, t) {
                        e || D(t);
                    }
                    R.prototype.isEmpty = function() {
                        return isNaN(this.x1) || isNaN(this.y1) || isNaN(this.x2) || isNaN(this.y2);
                    }, R.prototype.addPoint = function(e, t) {
                        "number" == typeof e && ((isNaN(this.x1) || isNaN(this.x2)) && (this.x1 = e, this.x2 = e), 
                        e < this.x1 && (this.x1 = e), e > this.x2 && (this.x2 = e)), "number" == typeof t && ((isNaN(this.y1) || isNaN(this.y2)) && (this.y1 = t, 
                        this.y2 = t), t < this.y1 && (this.y1 = t), t > this.y2 && (this.y2 = t));
                    }, R.prototype.addX = function(e) {
                        this.addPoint(e, null);
                    }, R.prototype.addY = function(e) {
                        this.addPoint(null, e);
                    }, R.prototype.addBezier = function(e, t, r, i, n, o, s, a) {
                        var h = this, l = [ e, t ], u = [ r, i ], c = [ n, o ], p = [ s, a ];
                        this.addPoint(e, t), this.addPoint(s, a);
                        for (var d = 0; d <= 1; d++) {
                            var f = 6 * l[d] - 12 * u[d] + 6 * c[d], m = -3 * l[d] + 9 * u[d] - 9 * c[d] + 3 * p[d], g = 3 * u[d] - 3 * l[d];
                            if (0 !== m) {
                                var v = Math.pow(f, 2) - 4 * g * m;
                                if (!(v < 0)) {
                                    var y = (-f + Math.sqrt(v)) / (2 * m);
                                    0 < y && y < 1 && (0 === d && h.addX(L(l[d], u[d], c[d], p[d], y)), 1 === d && h.addY(L(l[d], u[d], c[d], p[d], y)));
                                    var b = (-f - Math.sqrt(v)) / (2 * m);
                                    0 < b && b < 1 && (0 === d && h.addX(L(l[d], u[d], c[d], p[d], b)), 1 === d && h.addY(L(l[d], u[d], c[d], p[d], b)));
                                }
                            } else {
                                if (0 === f) continue;
                                var x = -g / f;
                                0 < x && x < 1 && (0 === d && h.addX(L(l[d], u[d], c[d], p[d], x)), 1 === d && h.addY(L(l[d], u[d], c[d], p[d], x)));
                            }
                        }
                    }, R.prototype.addQuad = function(e, t, r, i, n, o) {
                        var s = e + 2 / 3 * (r - e), a = t + 2 / 3 * (i - t), h = s + 1 / 3 * (n - e), l = a + 1 / 3 * (o - t);
                        this.addBezier(e, t, s, a, h, l, n, o);
                    }, A.prototype.moveTo = function(e, t) {
                        this.commands.push({
                            type: "M",
                            x: e,
                            y: t
                        });
                    }, A.prototype.lineTo = function(e, t) {
                        this.commands.push({
                            type: "L",
                            x: e,
                            y: t
                        });
                    }, A.prototype.curveTo = A.prototype.bezierCurveTo = function(e, t, r, i, n, o) {
                        this.commands.push({
                            type: "C",
                            x1: e,
                            y1: t,
                            x2: r,
                            y2: i,
                            x: n,
                            y: o
                        });
                    }, A.prototype.quadTo = A.prototype.quadraticCurveTo = function(e, t, r, i) {
                        this.commands.push({
                            type: "Q",
                            x1: e,
                            y1: t,
                            x: r,
                            y: i
                        });
                    }, A.prototype.close = A.prototype.closePath = function() {
                        this.commands.push({
                            type: "Z"
                        });
                    }, A.prototype.extend = function(e) {
                        if (e.commands) e = e.commands; else if (e instanceof R) {
                            var t = e;
                            return this.moveTo(t.x1, t.y1), this.lineTo(t.x2, t.y1), this.lineTo(t.x2, t.y2), 
                            this.lineTo(t.x1, t.y2), void this.close();
                        }
                        Array.prototype.push.apply(this.commands, e);
                    }, A.prototype.getBoundingBox = function() {
                        for (var e = new R(), t = 0, r = 0, i = 0, n = 0, o = 0; o < this.commands.length; o++) {
                            var s = this.commands[o];
                            switch (s.type) {
                              case "M":
                                e.addPoint(s.x, s.y), t = i = s.x, r = n = s.y;
                                break;

                              case "L":
                                e.addPoint(s.x, s.y), i = s.x, n = s.y;
                                break;

                              case "Q":
                                e.addQuad(i, n, s.x1, s.y1, s.x, s.y), i = s.x, n = s.y;
                                break;

                              case "C":
                                e.addBezier(i, n, s.x1, s.y1, s.x2, s.y2, s.x, s.y), i = s.x, n = s.y;
                                break;

                              case "Z":
                                i = t, n = r;
                                break;

                              default:
                                throw new Error("Unexpected path command " + s.type);
                            }
                        }
                        return e.isEmpty() && e.addPoint(0, 0), e;
                    }, A.prototype.draw = function(e) {
                        e.beginPath();
                        for (var t = 0; t < this.commands.length; t += 1) {
                            var r = this.commands[t];
                            "M" === r.type ? e.moveTo(r.x, r.y) : "L" === r.type ? e.lineTo(r.x, r.y) : "C" === r.type ? e.bezierCurveTo(r.x1, r.y1, r.x2, r.y2, r.x, r.y) : "Q" === r.type ? e.quadraticCurveTo(r.x1, r.y1, r.x, r.y) : "Z" === r.type && e.closePath();
                        }
                        this.fill && (e.fillStyle = this.fill, e.fill()), this.stroke && (e.strokeStyle = this.stroke, 
                        e.lineWidth = this.strokeWidth, e.stroke());
                    }, A.prototype.toPathData = function(e) {
                        function t() {
                            for (var t, r = arguments, i = "", n = 0; n < arguments.length; n += 1) {
                                var o = r[n];
                                0 <= o && 0 < n && (i += " "), i += (t = o, Math.round(t) === t ? "" + Math.round(t) : t.toFixed(e));
                            }
                            return i;
                        }
                        e = void 0 !== e ? e : 2;
                        for (var r = "", i = 0; i < this.commands.length; i += 1) {
                            var n = this.commands[i];
                            "M" === n.type ? r += "M" + t(n.x, n.y) : "L" === n.type ? r += "L" + t(n.x, n.y) : "C" === n.type ? r += "C" + t(n.x1, n.y1, n.x2, n.y2, n.x, n.y) : "Q" === n.type ? r += "Q" + t(n.x1, n.y1, n.x, n.y) : "Z" === n.type && (r += "Z");
                        }
                        return r;
                    }, A.prototype.toSVG = function(e) {
                        var t = '<path d="';
                        return t += this.toPathData(e), t += '"', this.fill && "black" !== this.fill && (null === this.fill ? t += ' fill="none"' : t += ' fill="' + this.fill + '"'), 
                        this.stroke && (t += ' stroke="' + this.stroke + '" stroke-width="' + this.strokeWidth + '"'), 
                        t + "/>";
                    }, A.prototype.toDOMElement = function(e) {
                        var t = this.toPathData(e), r = document.createElementNS("http://www.w3.org/2000/svg", "path");
                        return r.setAttribute("d", t), r;
                    };
                    var k = {
                        fail: D,
                        argument: P,
                        assert: P
                    }, I = 2147483648, O = {}, U = {}, N = {};
                    function B(e) {
                        return function() {
                            return e;
                        };
                    }
                    U.BYTE = function(e) {
                        return k.argument(0 <= e && e <= 255, "Byte value should be between 0 and 255."), 
                        [ e ];
                    }, N.BYTE = B(1), U.CHAR = function(e) {
                        return [ e.charCodeAt(0) ];
                    }, N.CHAR = B(1), U.CHARARRAY = function(e) {
                        for (var t = [], r = 0; r < e.length; r += 1) t[r] = e.charCodeAt(r);
                        return t;
                    }, N.CHARARRAY = function(e) {
                        return e.length;
                    }, U.USHORT = function(e) {
                        return [ e >> 8 & 255, 255 & e ];
                    }, N.USHORT = B(2), U.SHORT = function(e) {
                        return 32768 <= e && (e = -(65536 - e)), [ e >> 8 & 255, 255 & e ];
                    }, N.SHORT = B(2), U.UINT24 = function(e) {
                        return [ e >> 16 & 255, e >> 8 & 255, 255 & e ];
                    }, N.UINT24 = B(3), U.ULONG = function(e) {
                        return [ e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, 255 & e ];
                    }, N.ULONG = B(4), U.LONG = function(e) {
                        return I <= e && (e = -(2 * I - e)), [ e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, 255 & e ];
                    }, N.LONG = B(4), U.FIXED = U.ULONG, N.FIXED = N.ULONG, U.FWORD = U.SHORT, N.FWORD = N.SHORT, 
                    U.UFWORD = U.USHORT, N.UFWORD = N.USHORT, U.LONGDATETIME = function(e) {
                        return [ 0, 0, 0, 0, e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, 255 & e ];
                    }, N.LONGDATETIME = B(8), U.TAG = function(e) {
                        return k.argument(4 === e.length, "Tag should be exactly 4 ASCII characters."), 
                        [ e.charCodeAt(0), e.charCodeAt(1), e.charCodeAt(2), e.charCodeAt(3) ];
                    }, N.TAG = B(4), U.Card8 = U.BYTE, N.Card8 = N.BYTE, U.Card16 = U.USHORT, N.Card16 = N.USHORT, 
                    U.OffSize = U.BYTE, N.OffSize = N.BYTE, U.SID = U.USHORT, N.SID = N.USHORT, U.NUMBER = function(e) {
                        return -107 <= e && e <= 107 ? [ e + 139 ] : 108 <= e && e <= 1131 ? [ 247 + ((e -= 108) >> 8), 255 & e ] : -1131 <= e && e <= -108 ? [ 251 + ((e = -e - 108) >> 8), 255 & e ] : -32768 <= e && e <= 32767 ? U.NUMBER16(e) : U.NUMBER32(e);
                    }, N.NUMBER = function(e) {
                        return U.NUMBER(e).length;
                    }, U.NUMBER16 = function(e) {
                        return [ 28, e >> 8 & 255, 255 & e ];
                    }, N.NUMBER16 = B(3), U.NUMBER32 = function(e) {
                        return [ 29, e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, 255 & e ];
                    }, N.NUMBER32 = B(5), U.REAL = function(e) {
                        var t = e.toString(), r = /\.(\d*?)(?:9{5,20}|0{5,20})\d{0,2}(?:e(.+)|$)/.exec(t);
                        if (r) {
                            var i = parseFloat("1e" + ((r[2] ? +r[2] : 0) + r[1].length));
                            t = (Math.round(e * i) / i).toString();
                        }
                        for (var n = "", o = 0, s = t.length; o < s; o += 1) {
                            var a = t[o];
                            n += "e" === a ? "-" === t[++o] ? "c" : "b" : "." === a ? "a" : "-" === a ? "e" : a;
                        }
                        for (var h = [ 30 ], l = 0, u = (n += 1 & n.length ? "f" : "ff").length; l < u; l += 2) h.push(parseInt(n.substr(l, 2), 16));
                        return h;
                    }, N.REAL = function(e) {
                        return U.REAL(e).length;
                    }, U.NAME = U.CHARARRAY, N.NAME = N.CHARARRAY, U.STRING = U.CHARARRAY, N.STRING = N.CHARARRAY, 
                    O.UTF8 = function(e, t, r) {
                        for (var i = [], n = r, o = 0; o < n; o++, t += 1) i[o] = e.getUint8(t);
                        return String.fromCharCode.apply(null, i);
                    }, O.UTF16 = function(e, t, r) {
                        for (var i = [], n = r / 2, o = 0; o < n; o++, t += 2) i[o] = e.getUint16(t);
                        return String.fromCharCode.apply(null, i);
                    }, U.UTF16 = function(e) {
                        for (var t = [], r = 0; r < e.length; r += 1) {
                            var i = e.charCodeAt(r);
                            t[t.length] = i >> 8 & 255, t[t.length] = 255 & i;
                        }
                        return t;
                    }, N.UTF16 = function(e) {
                        return 2 * e.length;
                    };
                    var F = {
                        "x-mac-croatian": "ÃÃÃÃÃÃÃÃ¡Ã Ã¢Ã¤Ã£Ã¥Ã§Ã©Ã¨ÃªÃ«Ã­Ã¬Ã®Ã¯Ã±Ã³Ã²Ã´Ã¶ÃµÃºÃ¹Ã»Ã¼â Â°Â¢Â£Â§â¢Â¶ÃÂ®Å â¢Â´Â¨â Å½ÃâÂ±â¤â¥âÂµâââÅ¡â«ÂªÂºÎ©Å¾Ã¸Â¿Â¡Â¬âÆâÄÂ«Äâ¦Â ÃÃÃÅÅÄâââââÃ·âï£¿Â©ââ¬â¹âºÃÂ»âÂ·âââ°ÃÄÃÄÃÃÃÃÃÃÃÄÃÃÃÃÄ±ËËÂ¯ÏÃËÂ¸ÃÃ¦Ë",
                        "x-mac-cyrillic": "ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯â Â°ÒÂ£Â§â¢Â¶ÐÂ®Â©â¢ÐÑâ ÐÑâÂ±â¤â¥ÑÂµÒÐÐÑÐÑÐÑÐÑÑÐÂ¬âÆââÂ«Â»â¦Â ÐÑÐÑÑââââââÃ·âÐÑÐÑâÐÑÑÐ°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ",
                        "x-mac-gaelic": "ÃÃÃÃÃÃÃÃ¡Ã Ã¢Ã¤Ã£Ã¥Ã§Ã©Ã¨ÃªÃ«Ã­Ã¬Ã®Ã¯Ã±Ã³Ã²Ã´Ã¶ÃµÃºÃ¹Ã»Ã¼â Â°Â¢Â£Â§â¢Â¶ÃÂ®Â©â¢Â´Â¨â ÃÃá¸Â±â¤â¥á¸ÄÄá¸á¸á¸á¸Ä Ä¡á¹Ã¦Ã¸á¹á¹á¹É¼ÆÅ¿á¹ Â«Â»â¦Â ÃÃÃÅÅââââââá¹¡áºÃ¿Å¸á¹ªâ¬â¹âºÅ¶Å·á¹«Â·á»²á»³âÃÃÃÃÃÃÃÃÃÃÃâ£ÃÃÃÃÄ±ÃÃ½Å´Åµáºáºáºáºáºáº",
                        "x-mac-greek": "ÃÂ¹Â²ÃÂ³ÃÃÎÃ Ã¢Ã¤ÎÂ¨Ã§Ã©Ã¨ÃªÃ«Â£â¢Ã®Ã¯â¢Â½â°Ã´Ã¶Â¦â¬Ã¹Ã»Ã¼â ÎÎÎÎÎÎ ÃÂ®Â©Î£ÎªÂ§â Â°Â·ÎÂ±â¤â¥Â¥ÎÎÎÎÎÎÎÎ¦Î«Î¨Î©Î¬ÎÂ¬ÎÎ¡âÎ¤Â«Â»â¦Â Î¥Î§ÎÎÅââââââÃ·ÎÎÎÎÎ­Î®Î¯ÏÎÏÎ±Î²ÏÎ´ÎµÏÎ³Î·Î¹Î¾ÎºÎ»Î¼Î½Î¿ÏÏÏÏÏÎ¸ÏÏÏÏÎ¶ÏÏÎÎ°Â­",
                        "x-mac-icelandic": "ÃÃÃÃÃÃÃÃ¡Ã Ã¢Ã¤Ã£Ã¥Ã§Ã©Ã¨ÃªÃ«Ã­Ã¬Ã®Ã¯Ã±Ã³Ã²Ã´Ã¶ÃµÃºÃ¹Ã»Ã¼ÃÂ°Â¢Â£Â§â¢Â¶ÃÂ®Â©â¢Â´Â¨â ÃÃâÂ±â¤â¥Â¥ÂµâââÏâ«ÂªÂºÎ©Ã¦Ã¸Â¿Â¡Â¬âÆââÂ«Â»â¦Â ÃÃÃÅÅââââââÃ·âÃ¿Å¸ââ¬ÃÃ°ÃÃ¾Ã½Â·âââ°ÃÃÃÃÃÃÃÃÃÃÃï£¿ÃÃÃÃÄ±ËËÂ¯ËËËÂ¸ËËË",
                        "x-mac-inuit": "ááááááá±á²á³á´á¸á¹áááááááá¦á­á®á¯á°á²á³áááááááÂ°á¡á¥á¦â¢Â¶á§Â®Â©â¢á¨áªá«á»áááááááá¯á°á±á²á´áµááááááááªá¨á©áªá«á­â¦Â á®á¾áááââââââáááááááááááá¿áááááááááááááá±á²á³á´áµá¶áá á¡á¢á£á¤á¥á¦á¼ÅÅ",
                        "x-mac-ce": "ÃÄÄÃÄÃÃÃ¡ÄÄÃ¤ÄÄÄÃ©Å¹ÅºÄÃ­ÄÄÄÄÃ³ÄÃ´Ã¶ÃµÃºÄÄÃ¼â Â°ÄÂ£Â§â¢Â¶ÃÂ®Â©â¢ÄÂ¨â Ä£Ä®Ä¯Äªâ¤â¥Ä«Ä¶ââÅÄ»Ä¼Ä½Ä¾Ä¹ÄºÅÅÅÂ¬âÅÅâÂ«Â»â¦Â ÅÅÃÅÅââââââÃ·âÅÅÅÅâ¹âºÅÅÅÅ ââÅ¡ÅÅÃÅ¤Å¥ÃÅ½Å¾ÅªÃÃÅ«Å®ÃÅ¯Å°Å±Å²Å³ÃÃ½Ä·Å»ÅÅ¼Ä¢Ë",
                        macintosh: "ÃÃÃÃÃÃÃÃ¡Ã Ã¢Ã¤Ã£Ã¥Ã§Ã©Ã¨ÃªÃ«Ã­Ã¬Ã®Ã¯Ã±Ã³Ã²Ã´Ã¶ÃµÃºÃ¹Ã»Ã¼â Â°Â¢Â£Â§â¢Â¶ÃÂ®Â©â¢Â´Â¨â ÃÃâÂ±â¤â¥Â¥ÂµâââÏâ«ÂªÂºÎ©Ã¦Ã¸Â¿Â¡Â¬âÆââÂ«Â»â¦Â ÃÃÃÅÅââââââÃ·âÃ¿Å¸ââ¬â¹âºï¬ï¬â¡Â·âââ°ÃÃÃÃÃÃÃÃÃÃÃï£¿ÃÃÃÃÄ±ËËÂ¯ËËËÂ¸ËËË",
                        "x-mac-romanian": "ÃÃÃÃÃÃÃÃ¡Ã Ã¢Ã¤Ã£Ã¥Ã§Ã©Ã¨ÃªÃ«Ã­Ã¬Ã®Ã¯Ã±Ã³Ã²Ã´Ã¶ÃµÃºÃ¹Ã»Ã¼â Â°Â¢Â£Â§â¢Â¶ÃÂ®Â©â¢Â´Â¨â ÄÈâÂ±â¤â¥Â¥ÂµâââÏâ«ÂªÂºÎ©ÄÈÂ¿Â¡Â¬âÆââÂ«Â»â¦Â ÃÃÃÅÅââââââÃ·âÃ¿Å¸ââ¬â¹âºÈÈâ¡Â·âââ°ÃÃÃÃÃÃÃÃÃÃÃï£¿ÃÃÃÃÄ±ËËÂ¯ËËËÂ¸ËËË",
                        "x-mac-turkish": "ÃÃÃÃÃÃÃÃ¡Ã Ã¢Ã¤Ã£Ã¥Ã§Ã©Ã¨ÃªÃ«Ã­Ã¬Ã®Ã¯Ã±Ã³Ã²Ã´Ã¶ÃµÃºÃ¹Ã»Ã¼â Â°Â¢Â£Â§â¢Â¶ÃÂ®Â©â¢Â´Â¨â ÃÃâÂ±â¤â¥Â¥ÂµâââÏâ«ÂªÂºÎ©Ã¦Ã¸Â¿Â¡Â¬âÆââÂ«Â»â¦Â ÃÃÃÅÅââââââÃ·âÃ¿Å¸ÄÄÄ°Ä±ÅÅâ¡Â·âââ°ÃÃÃÃÃÃÃÃÃÃÃï£¿ÃÃÃÃï¢ ËËÂ¯ËËËÂ¸ËËË"
                    };
                    O.MACSTRING = function(e, t, r, i) {
                        var n = F[i];
                        if (void 0 !== n) {
                            for (var o = "", s = 0; s < r; s++) {
                                var a = e.getUint8(t + s);
                                o += a <= 127 ? String.fromCharCode(a) : n[127 & a];
                            }
                            return o;
                        }
                    };
                    var G, z = "function" == typeof WeakMap && new WeakMap();
                    function j(e) {
                        return -128 <= e && e <= 127;
                    }
                    function H(e, t, r) {
                        for (var i = 0, n = e.length; t < n && i < 64 && 0 === e[t]; ) ++t, ++i;
                        return r.push(128 | i - 1), t;
                    }
                    function V(e, t, r) {
                        for (var i = 0, n = e.length, o = t; o < n && i < 64; ) {
                            var s = e[o];
                            if (!j(s)) break;
                            if (0 === s && o + 1 < n && 0 === e[o + 1]) break;
                            ++o, ++i;
                        }
                        r.push(i - 1);
                        for (var a = t; a < o; ++a) r.push(e[a] + 256 & 255);
                        return o;
                    }
                    function W(e, t, r) {
                        for (var i = 0, n = e.length, o = t; o < n && i < 64; ) {
                            var s = e[o];
                            if (0 === s) break;
                            if (j(s) && o + 1 < n && j(e[o + 1])) break;
                            ++o, ++i;
                        }
                        r.push(64 | i - 1);
                        for (var a = t; a < o; ++a) {
                            var h = e[a];
                            r.push(h + 65536 >> 8 & 255, h + 256 & 255);
                        }
                        return o;
                    }
                    U.MACSTRING = function(e, t) {
                        var r = function(e) {
                            if (!G) for (var t in G = {}, F) G[t] = new String(t);
                            var r = G[e];
                            if (void 0 !== r) {
                                if (z) {
                                    var i = z.get(r);
                                    if (void 0 !== i) return i;
                                }
                                var n = F[e];
                                if (void 0 !== n) {
                                    for (var o = {}, s = 0; s < n.length; s++) o[n.charCodeAt(s)] = s + 128;
                                    return z && z.set(r, o), o;
                                }
                            }
                        }(t);
                        if (void 0 !== r) {
                            for (var i = [], n = 0; n < e.length; n++) {
                                var o = e.charCodeAt(n);
                                if (128 <= o && void 0 === (o = r[o])) return;
                                i[n] = o;
                            }
                            return i;
                        }
                    }, N.MACSTRING = function(e, t) {
                        var r = U.MACSTRING(e, t);
                        return void 0 !== r ? r.length : 0;
                    }, U.VARDELTAS = function(e) {
                        for (var t = 0, r = []; t < e.length; ) {
                            var i = e[t];
                            t = 0 === i ? H(e, t, r) : -128 <= i && i <= 127 ? V(e, t, r) : W(e, t, r);
                        }
                        return r;
                    }, U.INDEX = function(e) {
                        for (var t = 1, r = [ t ], i = [], n = 0; n < e.length; n += 1) {
                            var o = U.OBJECT(e[n]);
                            Array.prototype.push.apply(i, o), t += o.length, r.push(t);
                        }
                        if (0 === i.length) return [ 0, 0 ];
                        for (var s = [], a = 1 + Math.floor(Math.log(t) / Math.log(2)) / 8 | 0, h = [ void 0, U.BYTE, U.USHORT, U.UINT24, U.ULONG ][a], l = 0; l < r.length; l += 1) {
                            var u = h(r[l]);
                            Array.prototype.push.apply(s, u);
                        }
                        return Array.prototype.concat(U.Card16(e.length), U.OffSize(a), s, i);
                    }, N.INDEX = function(e) {
                        return U.INDEX(e).length;
                    }, U.DICT = function(e) {
                        for (var t = [], r = Object.keys(e), i = r.length, n = 0; n < i; n += 1) {
                            var o = parseInt(r[n], 0), s = e[o];
                            t = (t = t.concat(U.OPERAND(s.value, s.type))).concat(U.OPERATOR(o));
                        }
                        return t;
                    }, N.DICT = function(e) {
                        return U.DICT(e).length;
                    }, U.OPERATOR = function(e) {
                        return e < 1200 ? [ e ] : [ 12, e - 1200 ];
                    }, U.OPERAND = function(e, t) {
                        var r = [];
                        if (Array.isArray(t)) for (var i = 0; i < t.length; i += 1) k.argument(e.length === t.length, "Not enough arguments given for type" + t), 
                        r = r.concat(U.OPERAND(e[i], t[i])); else if ("SID" === t) r = r.concat(U.NUMBER(e)); else if ("offset" === t) r = r.concat(U.NUMBER32(e)); else if ("number" === t) r = r.concat(U.NUMBER(e)); else {
                            if ("real" !== t) throw new Error("Unknown operand type " + t);
                            r = r.concat(U.REAL(e));
                        }
                        return r;
                    }, U.OP = U.BYTE, N.OP = N.BYTE;
                    var q = "function" == typeof WeakMap && new WeakMap();
                    function X(e, t, r) {
                        for (var i = 0; i < t.length; i += 1) {
                            var n = t[i];
                            this[n.name] = n.value;
                        }
                        if (this.tableName = e, this.fields = t, r) for (var o = Object.keys(r), s = 0; s < o.length; s += 1) {
                            var a = o[s], h = r[a];
                            void 0 !== this[a] && (this[a] = h);
                        }
                    }
                    function Y(e, t, r) {
                        void 0 === r && (r = t.length);
                        var i = new Array(t.length + 1);
                        i[0] = {
                            name: e + "Count",
                            type: "USHORT",
                            value: r
                        };
                        for (var n = 0; n < t.length; n++) i[n + 1] = {
                            name: e + n,
                            type: "USHORT",
                            value: t[n]
                        };
                        return i;
                    }
                    function Z(e, t, r) {
                        var i = t.length, n = new Array(i + 1);
                        n[0] = {
                            name: e + "Count",
                            type: "USHORT",
                            value: i
                        };
                        for (var o = 0; o < i; o++) n[o + 1] = {
                            name: e + o,
                            type: "TABLE",
                            value: r(t[o], o)
                        };
                        return n;
                    }
                    function Q(e, t, r) {
                        var i = t.length, n = [];
                        n[0] = {
                            name: e + "Count",
                            type: "USHORT",
                            value: i
                        };
                        for (var o = 0; o < i; o++) n = n.concat(r(t[o], o));
                        return n;
                    }
                    function K(e) {
                        1 === e.format ? X.call(this, "coverageTable", [ {
                            name: "coverageFormat",
                            type: "USHORT",
                            value: 1
                        } ].concat(Y("glyph", e.glyphs))) : k.assert(!1, "Can't create coverage table format 2 yet.");
                    }
                    function $(e) {
                        X.call(this, "scriptListTable", Q("scriptRecord", e, function(e, t) {
                            var r = e.script, i = r.defaultLangSys;
                            return k.assert(!!i, "Unable to write GSUB: script " + e.tag + " has no default language system."), 
                            [ {
                                name: "scriptTag" + t,
                                type: "TAG",
                                value: e.tag
                            }, {
                                name: "script" + t,
                                type: "TABLE",
                                value: new X("scriptTable", [ {
                                    name: "defaultLangSys",
                                    type: "TABLE",
                                    value: new X("defaultLangSys", [ {
                                        name: "lookupOrder",
                                        type: "USHORT",
                                        value: 0
                                    }, {
                                        name: "reqFeatureIndex",
                                        type: "USHORT",
                                        value: i.reqFeatureIndex
                                    } ].concat(Y("featureIndex", i.featureIndexes)))
                                } ].concat(Q("langSys", r.langSysRecords, function(e, t) {
                                    var r = e.langSys;
                                    return [ {
                                        name: "langSysTag" + t,
                                        type: "TAG",
                                        value: e.tag
                                    }, {
                                        name: "langSys" + t,
                                        type: "TABLE",
                                        value: new X("langSys", [ {
                                            name: "lookupOrder",
                                            type: "USHORT",
                                            value: 0
                                        }, {
                                            name: "reqFeatureIndex",
                                            type: "USHORT",
                                            value: r.reqFeatureIndex
                                        } ].concat(Y("featureIndex", r.featureIndexes)))
                                    } ];
                                })))
                            } ];
                        }));
                    }
                    function J(e) {
                        X.call(this, "featureListTable", Q("featureRecord", e, function(e, t) {
                            var r = e.feature;
                            return [ {
                                name: "featureTag" + t,
                                type: "TAG",
                                value: e.tag
                            }, {
                                name: "feature" + t,
                                type: "TABLE",
                                value: new X("featureTable", [ {
                                    name: "featureParams",
                                    type: "USHORT",
                                    value: r.featureParams
                                } ].concat(Y("lookupListIndex", r.lookupListIndexes)))
                            } ];
                        }));
                    }
                    function ee(e, t) {
                        X.call(this, "lookupListTable", Z("lookup", e, function(e) {
                            var r = t[e.lookupType];
                            return k.assert(!!r, "Unable to write GSUB lookup type " + e.lookupType + " tables."), 
                            new X("lookupTable", [ {
                                name: "lookupType",
                                type: "USHORT",
                                value: e.lookupType
                            }, {
                                name: "lookupFlag",
                                type: "USHORT",
                                value: e.lookupFlag
                            } ].concat(Z("subtable", e.subtables, r)));
                        }));
                    }
                    U.CHARSTRING = function(e) {
                        if (q) {
                            var t = q.get(e);
                            if (void 0 !== t) return t;
                        }
                        for (var r = [], i = e.length, n = 0; n < i; n += 1) {
                            var o = e[n];
                            r = r.concat(U[o.type](o.value));
                        }
                        return q && q.set(e, r), r;
                    }, N.CHARSTRING = function(e) {
                        return U.CHARSTRING(e).length;
                    }, U.OBJECT = function(e) {
                        var t = U[e.type];
                        return k.argument(void 0 !== t, "No encoding function for type " + e.type), t(e.value);
                    }, N.OBJECT = function(e) {
                        var t = N[e.type];
                        return k.argument(void 0 !== t, "No sizeOf function for type " + e.type), t(e.value);
                    }, U.TABLE = function(e) {
                        for (var t = [], r = e.fields.length, i = [], n = [], o = 0; o < r; o += 1) {
                            var s = e.fields[o], a = U[s.type];
                            k.argument(void 0 !== a, "No encoding function for field type " + s.type + " (" + s.name + ")");
                            var h = e[s.name];
                            void 0 === h && (h = s.value);
                            var l = a(h);
                            "TABLE" === s.type ? (n.push(t.length), t = t.concat([ 0, 0 ]), i.push(l)) : t = t.concat(l);
                        }
                        for (var u = 0; u < i.length; u += 1) {
                            var c = n[u], p = t.length;
                            k.argument(p < 65536, "Table " + e.tableName + " too big."), t[c] = p >> 8, t[c + 1] = 255 & p, 
                            t = t.concat(i[u]);
                        }
                        return t;
                    }, N.TABLE = function(e) {
                        for (var t = 0, r = e.fields.length, i = 0; i < r; i += 1) {
                            var n = e.fields[i], o = N[n.type];
                            k.argument(void 0 !== o, "No sizeOf function for field type " + n.type + " (" + n.name + ")");
                            var s = e[n.name];
                            void 0 === s && (s = n.value), t += o(s), "TABLE" === n.type && (t += 2);
                        }
                        return t;
                    }, U.RECORD = U.TABLE, N.RECORD = N.TABLE, U.LITERAL = function(e) {
                        return e;
                    }, N.LITERAL = function(e) {
                        return e.length;
                    }, X.prototype.encode = function() {
                        return U.TABLE(this);
                    }, X.prototype.sizeOf = function() {
                        return N.TABLE(this);
                    };
                    var te = {
                        Table: X,
                        Record: X,
                        Coverage: (K.prototype = Object.create(X.prototype)).constructor = K,
                        ScriptList: ($.prototype = Object.create(X.prototype)).constructor = $,
                        FeatureList: (J.prototype = Object.create(X.prototype)).constructor = J,
                        LookupList: (ee.prototype = Object.create(X.prototype)).constructor = ee,
                        ushortList: Y,
                        tableList: Z,
                        recordList: Q
                    };
                    function re(e, t) {
                        return e.getUint8(t);
                    }
                    function ie(e, t) {
                        return e.getUint16(t, !1);
                    }
                    function ne(e, t) {
                        return e.getUint32(t, !1);
                    }
                    function oe(e, t) {
                        return e.getInt16(t, !1) + e.getUint16(t + 2, !1) / 65535;
                    }
                    var se = {
                        byte: 1,
                        uShort: 2,
                        short: 2,
                        uLong: 4,
                        fixed: 4,
                        longDateTime: 8,
                        tag: 4
                    };
                    function ae(e, t) {
                        this.data = e, this.offset = t, this.relativeOffset = 0;
                    }
                    ae.prototype.parseByte = function() {
                        var e = this.data.getUint8(this.offset + this.relativeOffset);
                        return this.relativeOffset += 1, e;
                    }, ae.prototype.parseChar = function() {
                        var e = this.data.getInt8(this.offset + this.relativeOffset);
                        return this.relativeOffset += 1, e;
                    }, ae.prototype.parseCard8 = ae.prototype.parseByte, ae.prototype.parseCard16 = ae.prototype.parseUShort = function() {
                        var e = this.data.getUint16(this.offset + this.relativeOffset);
                        return this.relativeOffset += 2, e;
                    }, ae.prototype.parseSID = ae.prototype.parseUShort, ae.prototype.parseOffset16 = ae.prototype.parseUShort, 
                    ae.prototype.parseShort = function() {
                        var e = this.data.getInt16(this.offset + this.relativeOffset);
                        return this.relativeOffset += 2, e;
                    }, ae.prototype.parseF2Dot14 = function() {
                        var e = this.data.getInt16(this.offset + this.relativeOffset) / 16384;
                        return this.relativeOffset += 2, e;
                    }, ae.prototype.parseOffset32 = ae.prototype.parseULong = function() {
                        var e = ne(this.data, this.offset + this.relativeOffset);
                        return this.relativeOffset += 4, e;
                    }, ae.prototype.parseFixed = function() {
                        var e = oe(this.data, this.offset + this.relativeOffset);
                        return this.relativeOffset += 4, e;
                    }, ae.prototype.parseString = function(e) {
                        var t = this.data, r = this.offset + this.relativeOffset, i = "";
                        this.relativeOffset += e;
                        for (var n = 0; n < e; n++) i += String.fromCharCode(t.getUint8(r + n));
                        return i;
                    }, ae.prototype.parseTag = function() {
                        return this.parseString(4);
                    }, ae.prototype.parseLongDateTime = function() {
                        var e = ne(this.data, this.offset + this.relativeOffset + 4);
                        return e -= 2082844800, this.relativeOffset += 8, e;
                    }, ae.prototype.parseVersion = function(e) {
                        var t = ie(this.data, this.offset + this.relativeOffset), r = ie(this.data, this.offset + this.relativeOffset + 2);
                        return this.relativeOffset += 4, void 0 === e && (e = 4096), t + r / e / 10;
                    }, ae.prototype.skip = function(e, t) {
                        void 0 === t && (t = 1), this.relativeOffset += se[e] * t;
                    }, ae.prototype.parseULongList = function(e) {
                        void 0 === e && (e = this.parseULong());
                        for (var t = new Array(e), r = this.data, i = this.offset + this.relativeOffset, n = 0; n < e; n++) t[n] = r.getUint32(i), 
                        i += 4;
                        return this.relativeOffset += 4 * e, t;
                    }, ae.prototype.parseOffset16List = ae.prototype.parseUShortList = function(e) {
                        void 0 === e && (e = this.parseUShort());
                        for (var t = new Array(e), r = this.data, i = this.offset + this.relativeOffset, n = 0; n < e; n++) t[n] = r.getUint16(i), 
                        i += 2;
                        return this.relativeOffset += 2 * e, t;
                    }, ae.prototype.parseShortList = function(e) {
                        for (var t = new Array(e), r = this.data, i = this.offset + this.relativeOffset, n = 0; n < e; n++) t[n] = r.getInt16(i), 
                        i += 2;
                        return this.relativeOffset += 2 * e, t;
                    }, ae.prototype.parseByteList = function(e) {
                        for (var t = new Array(e), r = this.data, i = this.offset + this.relativeOffset, n = 0; n < e; n++) t[n] = r.getUint8(i++);
                        return this.relativeOffset += e, t;
                    }, ae.prototype.parseList = function(e, t) {
                        t || (t = e, e = this.parseUShort());
                        for (var r = new Array(e), i = 0; i < e; i++) r[i] = t.call(this);
                        return r;
                    }, ae.prototype.parseList32 = function(e, t) {
                        t || (t = e, e = this.parseULong());
                        for (var r = new Array(e), i = 0; i < e; i++) r[i] = t.call(this);
                        return r;
                    }, ae.prototype.parseRecordList = function(e, t) {
                        t || (t = e, e = this.parseUShort());
                        for (var r = new Array(e), i = Object.keys(t), n = 0; n < e; n++) {
                            for (var o = {}, s = 0; s < i.length; s++) {
                                var a = i[s], h = t[a];
                                o[a] = h.call(this);
                            }
                            r[n] = o;
                        }
                        return r;
                    }, ae.prototype.parseRecordList32 = function(e, t) {
                        t || (t = e, e = this.parseULong());
                        for (var r = new Array(e), i = Object.keys(t), n = 0; n < e; n++) {
                            for (var o = {}, s = 0; s < i.length; s++) {
                                var a = i[s], h = t[a];
                                o[a] = h.call(this);
                            }
                            r[n] = o;
                        }
                        return r;
                    }, ae.prototype.parseStruct = function(e) {
                        if ("function" == typeof e) return e.call(this);
                        for (var t = Object.keys(e), r = {}, i = 0; i < t.length; i++) {
                            var n = t[i], o = e[n];
                            r[n] = o.call(this);
                        }
                        return r;
                    }, ae.prototype.parseValueRecord = function(e) {
                        if (void 0 === e && (e = this.parseUShort()), 0 !== e) {
                            var t = {};
                            return 1 & e && (t.xPlacement = this.parseShort()), 2 & e && (t.yPlacement = this.parseShort()), 
                            4 & e && (t.xAdvance = this.parseShort()), 8 & e && (t.yAdvance = this.parseShort()), 
                            16 & e && (t.xPlaDevice = void 0, this.parseShort()), 32 & e && (t.yPlaDevice = void 0, 
                            this.parseShort()), 64 & e && (t.xAdvDevice = void 0, this.parseShort()), 128 & e && (t.yAdvDevice = void 0, 
                            this.parseShort()), t;
                        }
                    }, ae.prototype.parseValueRecordList = function() {
                        for (var e = this.parseUShort(), t = this.parseUShort(), r = new Array(t), i = 0; i < t; i++) r[i] = this.parseValueRecord(e);
                        return r;
                    }, ae.prototype.parsePointer = function(e) {
                        var t = this.parseOffset16();
                        if (0 < t) return new ae(this.data, this.offset + t).parseStruct(e);
                    }, ae.prototype.parsePointer32 = function(e) {
                        var t = this.parseOffset32();
                        if (0 < t) return new ae(this.data, this.offset + t).parseStruct(e);
                    }, ae.prototype.parseListOfLists = function(e) {
                        for (var t = this, r = this.parseOffset16List(), i = r.length, n = this.relativeOffset, o = new Array(i), s = 0; s < i; s++) {
                            var a = r[s];
                            if (0 !== a) if (t.relativeOffset = a, e) {
                                for (var h = t.parseOffset16List(), l = new Array(h.length), u = 0; u < h.length; u++) t.relativeOffset = a + h[u], 
                                l[u] = e.call(t);
                                o[s] = l;
                            } else o[s] = t.parseUShortList(); else o[s] = void 0;
                        }
                        return this.relativeOffset = n, o;
                    }, ae.prototype.parseCoverage = function() {
                        var e = this.offset + this.relativeOffset, t = this.parseUShort(), r = this.parseUShort();
                        if (1 === t) return {
                            format: 1,
                            glyphs: this.parseUShortList(r)
                        };
                        if (2 !== t) throw new Error("0x" + e.toString(16) + ": Coverage format must be 1 or 2.");
                        for (var i = new Array(r), n = 0; n < r; n++) i[n] = {
                            start: this.parseUShort(),
                            end: this.parseUShort(),
                            index: this.parseUShort()
                        };
                        return {
                            format: 2,
                            ranges: i
                        };
                    }, ae.prototype.parseClassDef = function() {
                        var e = this.offset + this.relativeOffset, t = this.parseUShort();
                        if (1 === t) return {
                            format: 1,
                            startGlyph: this.parseUShort(),
                            classes: this.parseUShortList()
                        };
                        if (2 === t) return {
                            format: 2,
                            ranges: this.parseRecordList({
                                start: ae.uShort,
                                end: ae.uShort,
                                classId: ae.uShort
                            })
                        };
                        throw new Error("0x" + e.toString(16) + ": ClassDef format must be 1 or 2.");
                    }, ae.list = function(e, t) {
                        return function() {
                            return this.parseList(e, t);
                        };
                    }, ae.list32 = function(e, t) {
                        return function() {
                            return this.parseList32(e, t);
                        };
                    }, ae.recordList = function(e, t) {
                        return function() {
                            return this.parseRecordList(e, t);
                        };
                    }, ae.recordList32 = function(e, t) {
                        return function() {
                            return this.parseRecordList32(e, t);
                        };
                    }, ae.pointer = function(e) {
                        return function() {
                            return this.parsePointer(e);
                        };
                    }, ae.pointer32 = function(e) {
                        return function() {
                            return this.parsePointer32(e);
                        };
                    }, ae.tag = ae.prototype.parseTag, ae.byte = ae.prototype.parseByte, ae.uShort = ae.offset16 = ae.prototype.parseUShort, 
                    ae.uShortList = ae.prototype.parseUShortList, ae.uLong = ae.offset32 = ae.prototype.parseULong, 
                    ae.uLongList = ae.prototype.parseULongList, ae.struct = ae.prototype.parseStruct, 
                    ae.coverage = ae.prototype.parseCoverage, ae.classDef = ae.prototype.parseClassDef;
                    var he = {
                        reserved: ae.uShort,
                        reqFeatureIndex: ae.uShort,
                        featureIndexes: ae.uShortList
                    };
                    ae.prototype.parseScriptList = function() {
                        return this.parsePointer(ae.recordList({
                            tag: ae.tag,
                            script: ae.pointer({
                                defaultLangSys: ae.pointer(he),
                                langSysRecords: ae.recordList({
                                    tag: ae.tag,
                                    langSys: ae.pointer(he)
                                })
                            })
                        })) || [];
                    }, ae.prototype.parseFeatureList = function() {
                        return this.parsePointer(ae.recordList({
                            tag: ae.tag,
                            feature: ae.pointer({
                                featureParams: ae.offset16,
                                lookupListIndexes: ae.uShortList
                            })
                        })) || [];
                    }, ae.prototype.parseLookupList = function(e) {
                        return this.parsePointer(ae.list(ae.pointer(function() {
                            var t = this.parseUShort();
                            k.argument(1 <= t && t <= 9, "GPOS/GSUB lookup type " + t + " unknown.");
                            var r = this.parseUShort(), i = 16 & r;
                            return {
                                lookupType: t,
                                lookupFlag: r,
                                subtables: this.parseList(ae.pointer(e[t])),
                                markFilteringSet: i ? this.parseUShort() : void 0
                            };
                        }))) || [];
                    }, ae.prototype.parseFeatureVariationsList = function() {
                        return this.parsePointer32(function() {
                            var e = this.parseUShort(), t = this.parseUShort();
                            return k.argument(1 === e && t < 1, "GPOS/GSUB feature variations table unknown."), 
                            this.parseRecordList32({
                                conditionSetOffset: ae.offset32,
                                featureTableSubstitutionOffset: ae.offset32
                            });
                        }) || [];
                    };
                    var le = {
                        getByte: re,
                        getCard8: re,
                        getUShort: ie,
                        getCard16: ie,
                        getShort: function(e, t) {
                            return e.getInt16(t, !1);
                        },
                        getULong: ne,
                        getFixed: oe,
                        getTag: function(e, t) {
                            for (var r = "", i = t; i < t + 4; i += 1) r += String.fromCharCode(e.getInt8(i));
                            return r;
                        },
                        getOffset: function(e, t, r) {
                            for (var i = 0, n = 0; n < r; n += 1) i <<= 8, i += e.getUint8(t + n);
                            return i;
                        },
                        getBytes: function(e, t, r) {
                            for (var i = [], n = t; n < r; n += 1) i.push(e.getUint8(n));
                            return i;
                        },
                        bytesToString: function(e) {
                            for (var t = "", r = 0; r < e.length; r += 1) t += String.fromCharCode(e[r]);
                            return t;
                        },
                        Parser: ae
                    }, ue = {
                        parse: function(e, t) {
                            var r = {};
                            r.version = le.getUShort(e, t), k.argument(0 === r.version, "cmap table version should be 0."), 
                            r.numTables = le.getUShort(e, t + 2);
                            for (var i = -1, n = r.numTables - 1; 0 <= n; n -= 1) {
                                var o = le.getUShort(e, t + 4 + 8 * n), s = le.getUShort(e, t + 4 + 8 * n + 2);
                                if (3 === o && (0 === s || 1 === s || 10 === s) || 0 === o && (0 === s || 1 === s || 2 === s || 3 === s || 4 === s)) {
                                    i = le.getULong(e, t + 4 + 8 * n + 4);
                                    break;
                                }
                            }
                            if (-1 === i) throw new Error("No valid cmap sub-tables found.");
                            var a = new le.Parser(e, t + i);
                            if (r.format = a.parseUShort(), 12 === r.format) !function(e, t) {
                                var r;
                                t.parseUShort(), e.length = t.parseULong(), e.language = t.parseULong(), e.groupCount = r = t.parseULong(), 
                                e.glyphIndexMap = {};
                                for (var i = 0; i < r; i += 1) for (var n = t.parseULong(), o = t.parseULong(), s = t.parseULong(), a = n; a <= o; a += 1) e.glyphIndexMap[a] = s, 
                                s++;
                            }(r, a); else {
                                if (4 !== r.format) throw new Error("Only format 4 and 12 cmap tables are supported (found format " + r.format + ").");
                                !function(e, t, r, i, n) {
                                    var o;
                                    e.length = t.parseUShort(), e.language = t.parseUShort(), e.segCount = o = t.parseUShort() >> 1, 
                                    t.skip("uShort", 3), e.glyphIndexMap = {};
                                    for (var s = new le.Parser(r, i + n + 14), a = new le.Parser(r, i + n + 16 + 2 * o), h = new le.Parser(r, i + n + 16 + 4 * o), l = new le.Parser(r, i + n + 16 + 6 * o), u = i + n + 16 + 8 * o, c = 0; c < o - 1; c += 1) for (var p = void 0, d = s.parseUShort(), f = a.parseUShort(), m = h.parseShort(), g = l.parseUShort(), v = f; v <= d; v += 1) 0 !== g ? (u = l.offset + l.relativeOffset - 2, 
                                    u += g, u += 2 * (v - f), 0 !== (p = le.getUShort(r, u)) && (p = p + m & 65535)) : p = v + m & 65535, 
                                    e.glyphIndexMap[v] = p;
                                }(r, a, e, t, i);
                            }
                            return r;
                        },
                        make: function(e) {
                            var t, r = !0;
                            for (t = e.length - 1; 0 < t; t -= 1) if (65535 < e.get(t).unicode) {
                                console.log("Adding CMAP format 12 (needed!)"), r = !1;
                                break;
                            }
                            var i = [ {
                                name: "version",
                                type: "USHORT",
                                value: 0
                            }, {
                                name: "numTables",
                                type: "USHORT",
                                value: r ? 1 : 2
                            }, {
                                name: "platformID",
                                type: "USHORT",
                                value: 3
                            }, {
                                name: "encodingID",
                                type: "USHORT",
                                value: 1
                            }, {
                                name: "offset",
                                type: "ULONG",
                                value: r ? 12 : 20
                            } ];
                            r || (i = i.concat([ {
                                name: "cmap12PlatformID",
                                type: "USHORT",
                                value: 3
                            }, {
                                name: "cmap12EncodingID",
                                type: "USHORT",
                                value: 10
                            }, {
                                name: "cmap12Offset",
                                type: "ULONG",
                                value: 0
                            } ])), i = i.concat([ {
                                name: "format",
                                type: "USHORT",
                                value: 4
                            }, {
                                name: "cmap4Length",
                                type: "USHORT",
                                value: 0
                            }, {
                                name: "language",
                                type: "USHORT",
                                value: 0
                            }, {
                                name: "segCountX2",
                                type: "USHORT",
                                value: 0
                            }, {
                                name: "searchRange",
                                type: "USHORT",
                                value: 0
                            }, {
                                name: "entrySelector",
                                type: "USHORT",
                                value: 0
                            }, {
                                name: "rangeShift",
                                type: "USHORT",
                                value: 0
                            } ]);
                            var n, o, s, a = new te.Table("cmap", i);
                            for (a.segments = [], t = 0; t < e.length; t += 1) {
                                for (var h = e.get(t), l = 0; l < h.unicodes.length; l += 1) n = a, o = h.unicodes[l], 
                                s = t, n.segments.push({
                                    end: o,
                                    start: o,
                                    delta: -(o - s),
                                    offset: 0,
                                    glyphIndex: s
                                });
                                a.segments = a.segments.sort(function(e, t) {
                                    return e.start - t.start;
                                });
                            }
                            a.segments.push({
                                end: 65535,
                                start: 65535,
                                delta: 1,
                                offset: 0
                            });
                            var u = a.segments.length, c = 0, p = [], d = [], f = [], m = [], g = [], v = [];
                            for (t = 0; t < u; t += 1) {
                                var y = a.segments[t];
                                y.end <= 65535 && y.start <= 65535 ? (p = p.concat({
                                    name: "end_" + t,
                                    type: "USHORT",
                                    value: y.end
                                }), d = d.concat({
                                    name: "start_" + t,
                                    type: "USHORT",
                                    value: y.start
                                }), f = f.concat({
                                    name: "idDelta_" + t,
                                    type: "SHORT",
                                    value: y.delta
                                }), m = m.concat({
                                    name: "idRangeOffset_" + t,
                                    type: "USHORT",
                                    value: y.offset
                                }), void 0 !== y.glyphId && (g = g.concat({
                                    name: "glyph_" + t,
                                    type: "USHORT",
                                    value: y.glyphId
                                }))) : c += 1, r || void 0 === y.glyphIndex || (v = (v = (v = v.concat({
                                    name: "cmap12Start_" + t,
                                    type: "ULONG",
                                    value: y.start
                                })).concat({
                                    name: "cmap12End_" + t,
                                    type: "ULONG",
                                    value: y.end
                                })).concat({
                                    name: "cmap12Glyph_" + t,
                                    type: "ULONG",
                                    value: y.glyphIndex
                                }));
                            }
                            if (a.segCountX2 = 2 * (u - c), a.searchRange = 2 * Math.pow(2, Math.floor(Math.log(u - c) / Math.log(2))), 
                            a.entrySelector = Math.log(a.searchRange / 2) / Math.log(2), a.rangeShift = a.segCountX2 - a.searchRange, 
                            a.fields = a.fields.concat(p), a.fields.push({
                                name: "reservedPad",
                                type: "USHORT",
                                value: 0
                            }), a.fields = a.fields.concat(d), a.fields = a.fields.concat(f), a.fields = a.fields.concat(m), 
                            a.fields = a.fields.concat(g), a.cmap4Length = 14 + 2 * p.length + 2 + 2 * d.length + 2 * f.length + 2 * m.length + 2 * g.length, 
                            !r) {
                                var b = 16 + 4 * v.length;
                                a.cmap12Offset = 20 + a.cmap4Length, a.fields = a.fields.concat([ {
                                    name: "cmap12Format",
                                    type: "USHORT",
                                    value: 12
                                }, {
                                    name: "cmap12Reserved",
                                    type: "USHORT",
                                    value: 0
                                }, {
                                    name: "cmap12Length",
                                    type: "ULONG",
                                    value: b
                                }, {
                                    name: "cmap12Language",
                                    type: "ULONG",
                                    value: 0
                                }, {
                                    name: "cmap12nGroups",
                                    type: "ULONG",
                                    value: v.length / 3
                                } ]), a.fields = a.fields.concat(v);
                            }
                            return a;
                        }
                    }, ce = [ ".notdef", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "exclamdown", "cent", "sterling", "fraction", "yen", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "fi", "fl", "endash", "dagger", "daggerdbl", "periodcentered", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "questiondown", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "emdash", "AE", "ordfeminine", "Lslash", "Oslash", "OE", "ordmasculine", "ae", "dotlessi", "lslash", "oslash", "oe", "germandbls", "onesuperior", "logicalnot", "mu", "trademark", "Eth", "onehalf", "plusminus", "Thorn", "onequarter", "divide", "brokenbar", "degree", "thorn", "threequarters", "twosuperior", "registered", "minus", "eth", "multiply", "threesuperior", "copyright", "Aacute", "Acircumflex", "Adieresis", "Agrave", "Aring", "Atilde", "Ccedilla", "Eacute", "Ecircumflex", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Ntilde", "Oacute", "Ocircumflex", "Odieresis", "Ograve", "Otilde", "Scaron", "Uacute", "Ucircumflex", "Udieresis", "Ugrave", "Yacute", "Ydieresis", "Zcaron", "aacute", "acircumflex", "adieresis", "agrave", "aring", "atilde", "ccedilla", "eacute", "ecircumflex", "edieresis", "egrave", "iacute", "icircumflex", "idieresis", "igrave", "ntilde", "oacute", "ocircumflex", "odieresis", "ograve", "otilde", "scaron", "uacute", "ucircumflex", "udieresis", "ugrave", "yacute", "ydieresis", "zcaron", "exclamsmall", "Hungarumlautsmall", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "266 ff", "onedotenleader", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "isuperior", "lsuperior", "msuperior", "nsuperior", "osuperior", "rsuperior", "ssuperior", "tsuperior", "ff", "ffi", "ffl", "parenleftinferior", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "exclamdownsmall", "centoldstyle", "Lslashsmall", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "Dotaccentsmall", "Macronsmall", "figuredash", "hypheninferior", "Ogoneksmall", "Ringsmall", "Cedillasmall", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "zerosuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall", "001.000", "001.001", "001.002", "001.003", "Black", "Bold", "Book", "Light", "Medium", "Regular", "Roman", "Semibold" ], pe = [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "exclamdown", "cent", "sterling", "fraction", "yen", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "fi", "fl", "", "endash", "dagger", "daggerdbl", "periodcentered", "", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "", "questiondown", "", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "", "ring", "cedilla", "", "hungarumlaut", "ogonek", "caron", "emdash", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "AE", "", "ordfeminine", "", "", "", "", "Lslash", "Oslash", "OE", "ordmasculine", "", "", "", "", "", "ae", "", "", "", "dotlessi", "", "", "lslash", "oslash", "oe", "germandbls" ], de = [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclamsmall", "Hungarumlautsmall", "", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "comma", "hyphen", "period", "fraction", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "colon", "semicolon", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "", "", "isuperior", "", "", "lsuperior", "msuperior", "nsuperior", "osuperior", "", "", "rsuperior", "ssuperior", "tsuperior", "", "ff", "fi", "fl", "ffi", "ffl", "parenleftinferior", "", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "exclamdownsmall", "centoldstyle", "Lslashsmall", "", "", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "", "Dotaccentsmall", "", "", "Macronsmall", "", "", "figuredash", "hypheninferior", "", "", "Ogoneksmall", "Ringsmall", "Cedillasmall", "", "", "", "onequarter", "onehalf", "threequarters", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "", "", "zerosuperior", "onesuperior", "twosuperior", "threesuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall" ], fe = [ ".notdef", ".null", "nonmarkingreturn", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quotesingle", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "grave", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "Adieresis", "Aring", "Ccedilla", "Eacute", "Ntilde", "Odieresis", "Udieresis", "aacute", "agrave", "acircumflex", "adieresis", "atilde", "aring", "ccedilla", "eacute", "egrave", "ecircumflex", "edieresis", "iacute", "igrave", "icircumflex", "idieresis", "ntilde", "oacute", "ograve", "ocircumflex", "odieresis", "otilde", "uacute", "ugrave", "ucircumflex", "udieresis", "dagger", "degree", "cent", "sterling", "section", "bullet", "paragraph", "germandbls", "registered", "copyright", "trademark", "acute", "dieresis", "notequal", "AE", "Oslash", "infinity", "plusminus", "lessequal", "greaterequal", "yen", "mu", "partialdiff", "summation", "product", "pi", "integral", "ordfeminine", "ordmasculine", "Omega", "ae", "oslash", "questiondown", "exclamdown", "logicalnot", "radical", "florin", "approxequal", "Delta", "guillemotleft", "guillemotright", "ellipsis", "nonbreakingspace", "Agrave", "Atilde", "Otilde", "OE", "oe", "endash", "emdash", "quotedblleft", "quotedblright", "quoteleft", "quoteright", "divide", "lozenge", "ydieresis", "Ydieresis", "fraction", "currency", "guilsinglleft", "guilsinglright", "fi", "fl", "daggerdbl", "periodcentered", "quotesinglbase", "quotedblbase", "perthousand", "Acircumflex", "Ecircumflex", "Aacute", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Oacute", "Ocircumflex", "apple", "Ograve", "Uacute", "Ucircumflex", "Ugrave", "dotlessi", "circumflex", "tilde", "macron", "breve", "dotaccent", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "Lslash", "lslash", "Scaron", "scaron", "Zcaron", "zcaron", "brokenbar", "Eth", "eth", "Yacute", "yacute", "Thorn", "thorn", "minus", "multiply", "onesuperior", "twosuperior", "threesuperior", "onehalf", "onequarter", "threequarters", "franc", "Gbreve", "gbreve", "Idotaccent", "Scedilla", "scedilla", "Cacute", "cacute", "Ccaron", "ccaron", "dcroat" ];
                    function me(e) {
                        this.font = e;
                    }
                    function ge(e) {
                        this.cmap = e;
                    }
                    function ve(e, t) {
                        this.encoding = e, this.charset = t;
                    }
                    function ye(e) {
                        switch (e.version) {
                          case 1:
                            this.names = fe.slice();
                            break;

                          case 2:
                            this.names = new Array(e.numberOfGlyphs);
                            for (var t = 0; t < e.numberOfGlyphs; t++) e.glyphNameIndex[t] < fe.length ? this.names[t] = fe[e.glyphNameIndex[t]] : this.names[t] = e.names[e.glyphNameIndex[t] - fe.length];
                            break;

                          case 2.5:
                            this.names = new Array(e.numberOfGlyphs);
                            for (var r = 0; r < e.numberOfGlyphs; r++) this.names[r] = fe[r + e.glyphNameIndex[r]];
                            break;

                          case 3:
                          default:
                            this.names = [];
                        }
                    }
                    me.prototype.charToGlyphIndex = function(e) {
                        var t = e.codePointAt(0), r = this.font.glyphs;
                        if (r) for (var i = 0; i < r.length; i += 1) for (var n = r.get(i), o = 0; o < n.unicodes.length; o += 1) if (n.unicodes[o] === t) return i;
                        return null;
                    }, ge.prototype.charToGlyphIndex = function(e) {
                        return this.cmap.glyphIndexMap[e.codePointAt(0)] || 0;
                    }, ve.prototype.charToGlyphIndex = function(e) {
                        var t = e.codePointAt(0), r = this.encoding[t];
                        return this.charset.indexOf(r);
                    }, ye.prototype.nameToGlyphIndex = function(e) {
                        return this.names.indexOf(e);
                    }, ye.prototype.glyphIndexToName = function(e) {
                        return this.names[e];
                    };
                    var be = function(e, t, r, i, n) {
                        e.beginPath(), e.moveTo(t, r), e.lineTo(i, n), e.stroke();
                    };
                    function xe(e) {
                        this.bindConstructorValues(e);
                    }
                    function _e(e, t, r) {
                        Object.defineProperty(e, t, {
                            get: function() {
                                return e.path, e[r];
                            },
                            set: function(t) {
                                e[r] = t;
                            },
                            enumerable: !0,
                            configurable: !0
                        });
                    }
                    function we(e, t) {
                        if (this.font = e, this.glyphs = {}, Array.isArray(t)) for (var r = 0; r < t.length; r++) this.glyphs[r] = t[r];
                        this.length = t && t.length || 0;
                    }
                    xe.prototype.bindConstructorValues = function(e) {
                        var t, r;
                        this.index = e.index || 0, this.name = e.name || null, this.unicode = e.unicode || void 0, 
                        this.unicodes = e.unicodes || void 0 !== e.unicode ? [ e.unicode ] : [], e.xMin && (this.xMin = e.xMin), 
                        e.yMin && (this.yMin = e.yMin), e.xMax && (this.xMax = e.xMax), e.yMax && (this.yMax = e.yMax), 
                        e.advanceWidth && (this.advanceWidth = e.advanceWidth), Object.defineProperty(this, "path", (t = e.path, 
                        r = t || new A(), {
                            configurable: !0,
                            get: function() {
                                return "function" == typeof r && (r = r()), r;
                            },
                            set: function(e) {
                                r = e;
                            }
                        }));
                    }, xe.prototype.addUnicode = function(e) {
                        0 === this.unicodes.length && (this.unicode = e), this.unicodes.push(e);
                    }, xe.prototype.getBoundingBox = function() {
                        return this.path.getBoundingBox();
                    }, xe.prototype.getPath = function(e, t, r, i, n) {
                        var o, s;
                        e = void 0 !== e ? e : 0, t = void 0 !== t ? t : 0, r = void 0 !== r ? r : 72, i || (i = {});
                        var a = i.xScale, h = i.yScale;
                        if (i.hinting && n && n.hinting && (s = this.path && n.hinting.exec(this, r)), s) o = n.hinting.getCommands(s), 
                        e = Math.round(e), t = Math.round(t), a = h = 1; else {
                            o = this.path.commands;
                            var l = 1 / this.path.unitsPerEm * r;
                            void 0 === a && (a = l), void 0 === h && (h = l);
                        }
                        for (var u = new A(), c = 0; c < o.length; c += 1) {
                            var p = o[c];
                            "M" === p.type ? u.moveTo(e + p.x * a, t + -p.y * h) : "L" === p.type ? u.lineTo(e + p.x * a, t + -p.y * h) : "Q" === p.type ? u.quadraticCurveTo(e + p.x1 * a, t + -p.y1 * h, e + p.x * a, t + -p.y * h) : "C" === p.type ? u.curveTo(e + p.x1 * a, t + -p.y1 * h, e + p.x2 * a, t + -p.y2 * h, e + p.x * a, t + -p.y * h) : "Z" === p.type && u.closePath();
                        }
                        return u;
                    }, xe.prototype.getContours = function() {
                        if (void 0 === this.points) return [];
                        for (var e = [], t = [], r = 0; r < this.points.length; r += 1) {
                            var i = this.points[r];
                            t.push(i), i.lastPointOfContour && (e.push(t), t = []);
                        }
                        return k.argument(0 === t.length, "There are still points left in the current contour."), 
                        e;
                    }, xe.prototype.getMetrics = function() {
                        for (var e = this.path.commands, t = [], r = [], i = 0; i < e.length; i += 1) {
                            var n = e[i];
                            "Z" !== n.type && (t.push(n.x), r.push(n.y)), "Q" !== n.type && "C" !== n.type || (t.push(n.x1), 
                            r.push(n.y1)), "C" === n.type && (t.push(n.x2), r.push(n.y2));
                        }
                        var o = {
                            xMin: Math.min.apply(null, t),
                            yMin: Math.min.apply(null, r),
                            xMax: Math.max.apply(null, t),
                            yMax: Math.max.apply(null, r),
                            leftSideBearing: this.leftSideBearing
                        };
                        return isFinite(o.xMin) || (o.xMin = 0), isFinite(o.xMax) || (o.xMax = this.advanceWidth), 
                        isFinite(o.yMin) || (o.yMin = 0), isFinite(o.yMax) || (o.yMax = 0), o.rightSideBearing = this.advanceWidth - o.leftSideBearing - (o.xMax - o.xMin), 
                        o;
                    }, xe.prototype.draw = function(e, t, r, i, n) {
                        this.getPath(t, r, i, n).draw(e);
                    }, xe.prototype.drawPoints = function(e, t, r, i) {
                        function n(t, r, i, n) {
                            var o = 2 * Math.PI;
                            e.beginPath();
                            for (var s = 0; s < t.length; s += 1) e.moveTo(r + t[s].x * n, i + t[s].y * n), 
                            e.arc(r + t[s].x * n, i + t[s].y * n, 2, 0, o, !1);
                            e.closePath(), e.fill();
                        }
                        t = void 0 !== t ? t : 0, r = void 0 !== r ? r : 0, i = void 0 !== i ? i : 24;
                        for (var o = 1 / this.path.unitsPerEm * i, s = [], a = [], h = this.path, l = 0; l < h.commands.length; l += 1) {
                            var u = h.commands[l];
                            void 0 !== u.x && s.push({
                                x: u.x,
                                y: -u.y
                            }), void 0 !== u.x1 && a.push({
                                x: u.x1,
                                y: -u.y1
                            }), void 0 !== u.x2 && a.push({
                                x: u.x2,
                                y: -u.y2
                            });
                        }
                        e.fillStyle = "blue", n(s, t, r, o), e.fillStyle = "red", n(a, t, r, o);
                    }, xe.prototype.drawMetrics = function(e, t, r, i) {
                        var n;
                        t = void 0 !== t ? t : 0, r = void 0 !== r ? r : 0, i = void 0 !== i ? i : 24, n = 1 / this.path.unitsPerEm * i, 
                        e.lineWidth = 1, e.strokeStyle = "black", be(e, t, -1e4, t, 1e4), be(e, -1e4, r, 1e4, r);
                        var o = this.xMin || 0, s = this.yMin || 0, a = this.xMax || 0, h = this.yMax || 0, l = this.advanceWidth || 0;
                        e.strokeStyle = "blue", be(e, t + o * n, -1e4, t + o * n, 1e4), be(e, t + a * n, -1e4, t + a * n, 1e4), 
                        be(e, -1e4, r + -s * n, 1e4, r + -s * n), be(e, -1e4, r + -h * n, 1e4, r + -h * n), 
                        e.strokeStyle = "green", be(e, t + l * n, -1e4, t + l * n, 1e4);
                    }, we.prototype.get = function(e) {
                        return "function" == typeof this.glyphs[e] && (this.glyphs[e] = this.glyphs[e]()), 
                        this.glyphs[e];
                    }, we.prototype.push = function(e, t) {
                        this.glyphs[e] = t, this.length++;
                    };
                    var Se = {
                        GlyphSet: we,
                        glyphLoader: function(e, t) {
                            return new xe({
                                index: t,
                                font: e
                            });
                        },
                        ttfGlyphLoader: function(e, t, r, i, n, o) {
                            return function() {
                                var s = new xe({
                                    index: t,
                                    font: e
                                });
                                return s.path = function() {
                                    r(s, i, n);
                                    var t = o(e.glyphs, s);
                                    return t.unitsPerEm = e.unitsPerEm, t;
                                }, _e(s, "xMin", "_xMin"), _e(s, "xMax", "_xMax"), _e(s, "yMin", "_yMin"), _e(s, "yMax", "_yMax"), 
                                s;
                            };
                        },
                        cffGlyphLoader: function(e, t, r, i) {
                            return function() {
                                var n = new xe({
                                    index: t,
                                    font: e
                                });
                                return n.path = function() {
                                    var t = r(e, n, i);
                                    return t.unitsPerEm = e.unitsPerEm, t;
                                }, n;
                            };
                        }
                    };
                    function Te(e, t) {
                        if (e === t) return !0;
                        if (Array.isArray(e) && Array.isArray(t)) {
                            if (e.length !== t.length) return !1;
                            for (var r = 0; r < e.length; r += 1) if (!Te(e[r], t[r])) return !1;
                            return !0;
                        }
                        return !1;
                    }
                    function Ee(e) {
                        return e.length < 1240 ? 107 : e.length < 33900 ? 1131 : 32768;
                    }
                    function Me(e, t, r) {
                        var i, n, o = [], s = [], a = le.getCard16(e, t);
                        if (0 !== a) {
                            var h = le.getByte(e, t + 2);
                            i = t + (a + 1) * h + 2;
                            for (var l = t + 3, u = 0; u < a + 1; u += 1) o.push(le.getOffset(e, l, h)), l += h;
                            n = i + o[a];
                        } else n = t + 2;
                        for (var c = 0; c < o.length - 1; c += 1) {
                            var p = le.getBytes(e, i + o[c], i + o[c + 1]);
                            r && (p = r(p)), s.push(p);
                        }
                        return {
                            objects: s,
                            startOffset: t,
                            endOffset: n
                        };
                    }
                    function Ce(e, t) {
                        if (28 === t) return e.parseByte() << 8 | e.parseByte();
                        if (29 === t) return e.parseByte() << 24 | e.parseByte() << 16 | e.parseByte() << 8 | e.parseByte();
                        if (30 === t) return function(e) {
                            for (var t = "", r = [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", ".", "E", "E-", null, "-" ]; ;) {
                                var i = e.parseByte(), n = i >> 4, o = 15 & i;
                                if (15 === n) break;
                                if (t += r[n], 15 === o) break;
                                t += r[o];
                            }
                            return parseFloat(t);
                        }(e);
                        if (32 <= t && t <= 246) return t - 139;
                        if (247 <= t && t <= 250) return 256 * (t - 247) + e.parseByte() + 108;
                        if (251 <= t && t <= 254) return 256 * -(t - 251) - e.parseByte() - 108;
                        throw new Error("Invalid b0 " + t);
                    }
                    function Le(e, t, r) {
                        t = void 0 !== t ? t : 0;
                        var i = new le.Parser(e, t), n = [], o = [];
                        for (r = void 0 !== r ? r : e.length; i.relativeOffset < r; ) {
                            var s = i.parseByte();
                            s <= 21 ? (12 === s && (s = 1200 + i.parseByte()), n.push([ s, o ]), o = []) : o.push(Ce(i, s));
                        }
                        return function(e) {
                            for (var t = {}, r = 0; r < e.length; r += 1) {
                                var i, n = e[r][0], o = e[r][1];
                                if (i = 1 === o.length ? o[0] : o, t.hasOwnProperty(n) && !isNaN(t[n])) throw new Error("Object " + t + " already has key " + n);
                                t[n] = i;
                            }
                            return t;
                        }(n);
                    }
                    function Re(e, t) {
                        return t <= 390 ? ce[t] : e[t - 391];
                    }
                    function Ae(e, t, r) {
                        for (var i, n = {}, o = 0; o < t.length; o += 1) {
                            var s = t[o];
                            if (Array.isArray(s.type)) {
                                var a = [];
                                a.length = s.type.length;
                                for (var h = 0; h < s.type.length; h++) void 0 === (i = void 0 !== e[s.op] ? e[s.op][h] : void 0) && (i = void 0 !== s.value && void 0 !== s.value[h] ? s.value[h] : null), 
                                "SID" === s.type[h] && (i = Re(r, i)), a[h] = i;
                                n[s.name] = a;
                            } else void 0 === (i = e[s.op]) && (i = void 0 !== s.value ? s.value : null), "SID" === s.type && (i = Re(r, i)), 
                            n[s.name] = i;
                        }
                        return n;
                    }
                    var De = [ {
                        name: "version",
                        op: 0,
                        type: "SID"
                    }, {
                        name: "notice",
                        op: 1,
                        type: "SID"
                    }, {
                        name: "copyright",
                        op: 1200,
                        type: "SID"
                    }, {
                        name: "fullName",
                        op: 2,
                        type: "SID"
                    }, {
                        name: "familyName",
                        op: 3,
                        type: "SID"
                    }, {
                        name: "weight",
                        op: 4,
                        type: "SID"
                    }, {
                        name: "isFixedPitch",
                        op: 1201,
                        type: "number",
                        value: 0
                    }, {
                        name: "italicAngle",
                        op: 1202,
                        type: "number",
                        value: 0
                    }, {
                        name: "underlinePosition",
                        op: 1203,
                        type: "number",
                        value: -100
                    }, {
                        name: "underlineThickness",
                        op: 1204,
                        type: "number",
                        value: 50
                    }, {
                        name: "paintType",
                        op: 1205,
                        type: "number",
                        value: 0
                    }, {
                        name: "charstringType",
                        op: 1206,
                        type: "number",
                        value: 2
                    }, {
                        name: "fontMatrix",
                        op: 1207,
                        type: [ "real", "real", "real", "real", "real", "real" ],
                        value: [ .001, 0, 0, .001, 0, 0 ]
                    }, {
                        name: "uniqueId",
                        op: 13,
                        type: "number"
                    }, {
                        name: "fontBBox",
                        op: 5,
                        type: [ "number", "number", "number", "number" ],
                        value: [ 0, 0, 0, 0 ]
                    }, {
                        name: "strokeWidth",
                        op: 1208,
                        type: "number",
                        value: 0
                    }, {
                        name: "xuid",
                        op: 14,
                        type: [],
                        value: null
                    }, {
                        name: "charset",
                        op: 15,
                        type: "offset",
                        value: 0
                    }, {
                        name: "encoding",
                        op: 16,
                        type: "offset",
                        value: 0
                    }, {
                        name: "charStrings",
                        op: 17,
                        type: "offset",
                        value: 0
                    }, {
                        name: "private",
                        op: 18,
                        type: [ "number", "offset" ],
                        value: [ 0, 0 ]
                    }, {
                        name: "ros",
                        op: 1230,
                        type: [ "SID", "SID", "number" ]
                    }, {
                        name: "cidFontVersion",
                        op: 1231,
                        type: "number",
                        value: 0
                    }, {
                        name: "cidFontRevision",
                        op: 1232,
                        type: "number",
                        value: 0
                    }, {
                        name: "cidFontType",
                        op: 1233,
                        type: "number",
                        value: 0
                    }, {
                        name: "cidCount",
                        op: 1234,
                        type: "number",
                        value: 8720
                    }, {
                        name: "uidBase",
                        op: 1235,
                        type: "number"
                    }, {
                        name: "fdArray",
                        op: 1236,
                        type: "offset"
                    }, {
                        name: "fdSelect",
                        op: 1237,
                        type: "offset"
                    }, {
                        name: "fontName",
                        op: 1238,
                        type: "SID"
                    } ], Pe = [ {
                        name: "subrs",
                        op: 19,
                        type: "offset",
                        value: 0
                    }, {
                        name: "defaultWidthX",
                        op: 20,
                        type: "number",
                        value: 0
                    }, {
                        name: "nominalWidthX",
                        op: 21,
                        type: "number",
                        value: 0
                    } ];
                    function ke(e, t, r, i) {
                        return Ae(Le(e, t, r), Pe, i);
                    }
                    function Ie(e, t, r, i) {
                        for (var n, o, s = [], a = 0; a < r.length; a += 1) {
                            var h = (o = i, Ae(Le(n = new DataView(new Uint8Array(r[a]).buffer), 0, n.byteLength), De, o));
                            h._subrs = [], h._subrsBias = 0;
                            var l = h.private[0], u = h.private[1];
                            if (0 !== l && 0 !== u) {
                                var c = ke(e, u + t, l, i);
                                if (h._defaultWidthX = c.defaultWidthX, h._nominalWidthX = c.nominalWidthX, 0 !== c.subrs) {
                                    var p = Me(e, u + c.subrs + t);
                                    h._subrs = p.objects, h._subrsBias = Ee(h._subrs);
                                }
                                h._privateDict = c;
                            }
                            s.push(h);
                        }
                        return s;
                    }
                    function Oe(e, t, r) {
                        var i, n, o, s, a, h, l, u, c = new A(), p = [], d = 0, f = !1, m = !1, g = 0, v = 0;
                        if (e.isCIDFont) {
                            var y = e.tables.cff.topDict._fdSelect[t.index], b = e.tables.cff.topDict._fdArray[y];
                            a = b._subrs, h = b._subrsBias, l = b._defaultWidthX, u = b._nominalWidthX;
                        } else a = e.tables.cff.topDict._subrs, h = e.tables.cff.topDict._subrsBias, l = e.tables.cff.topDict._defaultWidthX, 
                        u = e.tables.cff.topDict._nominalWidthX;
                        var x = l;
                        function _(e, t) {
                            m && c.closePath(), c.moveTo(e, t), m = !0;
                        }
                        function w() {
                            p.length % 2 != 0 && !f && (x = p.shift() + u), d += p.length >> 1, p.length = 0, 
                            f = !0;
                        }
                        return function r(l) {
                            for (var y, b, S, T, E, M, C, L, R, A, D, P, k = 0; k < l.length; ) {
                                var I = l[k];
                                switch (k += 1, I) {
                                  case 1:
                                  case 3:
                                    w();
                                    break;

                                  case 4:
                                    1 < p.length && !f && (x = p.shift() + u, f = !0), v += p.pop(), _(g, v);
                                    break;

                                  case 5:
                                    for (;0 < p.length; ) g += p.shift(), v += p.shift(), c.lineTo(g, v);
                                    break;

                                  case 6:
                                    for (;0 < p.length && (g += p.shift(), c.lineTo(g, v), 0 !== p.length); ) v += p.shift(), 
                                    c.lineTo(g, v);
                                    break;

                                  case 7:
                                    for (;0 < p.length && (v += p.shift(), c.lineTo(g, v), 0 !== p.length); ) g += p.shift(), 
                                    c.lineTo(g, v);
                                    break;

                                  case 8:
                                    for (;0 < p.length; ) i = g + p.shift(), n = v + p.shift(), o = i + p.shift(), s = n + p.shift(), 
                                    g = o + p.shift(), v = s + p.shift(), c.curveTo(i, n, o, s, g, v);
                                    break;

                                  case 10:
                                    E = p.pop() + h, (M = a[E]) && r(M);
                                    break;

                                  case 11:
                                    return;

                                  case 12:
                                    switch (I = l[k], k += 1, I) {
                                      case 35:
                                        i = g + p.shift(), n = v + p.shift(), o = i + p.shift(), s = n + p.shift(), C = o + p.shift(), 
                                        L = s + p.shift(), R = C + p.shift(), A = L + p.shift(), D = R + p.shift(), P = A + p.shift(), 
                                        g = D + p.shift(), v = P + p.shift(), p.shift(), c.curveTo(i, n, o, s, C, L), c.curveTo(R, A, D, P, g, v);
                                        break;

                                      case 34:
                                        i = g + p.shift(), n = v, o = i + p.shift(), s = n + p.shift(), C = o + p.shift(), 
                                        L = s, R = C + p.shift(), A = s, D = R + p.shift(), P = v, g = D + p.shift(), c.curveTo(i, n, o, s, C, L), 
                                        c.curveTo(R, A, D, P, g, v);
                                        break;

                                      case 36:
                                        i = g + p.shift(), n = v + p.shift(), o = i + p.shift(), s = n + p.shift(), C = o + p.shift(), 
                                        L = s, R = C + p.shift(), A = s, D = R + p.shift(), P = A + p.shift(), g = D + p.shift(), 
                                        c.curveTo(i, n, o, s, C, L), c.curveTo(R, A, D, P, g, v);
                                        break;

                                      case 37:
                                        i = g + p.shift(), n = v + p.shift(), o = i + p.shift(), s = n + p.shift(), C = o + p.shift(), 
                                        L = s + p.shift(), R = C + p.shift(), A = L + p.shift(), D = R + p.shift(), P = A + p.shift(), 
                                        Math.abs(D - g) > Math.abs(P - v) ? g = D + p.shift() : v = P + p.shift(), c.curveTo(i, n, o, s, C, L), 
                                        c.curveTo(R, A, D, P, g, v);
                                        break;

                                      default:
                                        console.log("Glyph " + t.index + ": unknown operator 1200" + I), p.length = 0;
                                    }
                                    break;

                                  case 14:
                                    0 < p.length && !f && (x = p.shift() + u, f = !0), m && (c.closePath(), m = !1);
                                    break;

                                  case 18:
                                    w();
                                    break;

                                  case 19:
                                  case 20:
                                    w(), k += d + 7 >> 3;
                                    break;

                                  case 21:
                                    2 < p.length && !f && (x = p.shift() + u, f = !0), v += p.pop(), _(g += p.pop(), v);
                                    break;

                                  case 22:
                                    1 < p.length && !f && (x = p.shift() + u, f = !0), _(g += p.pop(), v);
                                    break;

                                  case 23:
                                    w();
                                    break;

                                  case 24:
                                    for (;2 < p.length; ) i = g + p.shift(), n = v + p.shift(), o = i + p.shift(), s = n + p.shift(), 
                                    g = o + p.shift(), v = s + p.shift(), c.curveTo(i, n, o, s, g, v);
                                    g += p.shift(), v += p.shift(), c.lineTo(g, v);
                                    break;

                                  case 25:
                                    for (;6 < p.length; ) g += p.shift(), v += p.shift(), c.lineTo(g, v);
                                    i = g + p.shift(), n = v + p.shift(), o = i + p.shift(), s = n + p.shift(), g = o + p.shift(), 
                                    v = s + p.shift(), c.curveTo(i, n, o, s, g, v);
                                    break;

                                  case 26:
                                    for (p.length % 2 && (g += p.shift()); 0 < p.length; ) i = g, n = v + p.shift(), 
                                    o = i + p.shift(), s = n + p.shift(), g = o, v = s + p.shift(), c.curveTo(i, n, o, s, g, v);
                                    break;

                                  case 27:
                                    for (p.length % 2 && (v += p.shift()); 0 < p.length; ) i = g + p.shift(), n = v, 
                                    o = i + p.shift(), s = n + p.shift(), g = o + p.shift(), v = s, c.curveTo(i, n, o, s, g, v);
                                    break;

                                  case 28:
                                    y = l[k], b = l[k + 1], p.push((y << 24 | b << 16) >> 16), k += 2;
                                    break;

                                  case 29:
                                    E = p.pop() + e.gsubrsBias, (M = e.gsubrs[E]) && r(M);
                                    break;

                                  case 30:
                                    for (;0 < p.length && (i = g, n = v + p.shift(), o = i + p.shift(), s = n + p.shift(), 
                                    g = o + p.shift(), v = s + (1 === p.length ? p.shift() : 0), c.curveTo(i, n, o, s, g, v), 
                                    0 !== p.length); ) i = g + p.shift(), n = v, o = i + p.shift(), s = n + p.shift(), 
                                    v = s + p.shift(), g = o + (1 === p.length ? p.shift() : 0), c.curveTo(i, n, o, s, g, v);
                                    break;

                                  case 31:
                                    for (;0 < p.length && (i = g + p.shift(), n = v, o = i + p.shift(), s = n + p.shift(), 
                                    v = s + p.shift(), g = o + (1 === p.length ? p.shift() : 0), c.curveTo(i, n, o, s, g, v), 
                                    0 !== p.length); ) i = g, n = v + p.shift(), o = i + p.shift(), s = n + p.shift(), 
                                    g = o + p.shift(), v = s + (1 === p.length ? p.shift() : 0), c.curveTo(i, n, o, s, g, v);
                                    break;

                                  default:
                                    I < 32 ? console.log("Glyph " + t.index + ": unknown operator " + I) : I < 247 ? p.push(I - 139) : I < 251 ? (y = l[k], 
                                    k += 1, p.push(256 * (I - 247) + y + 108)) : I < 255 ? (y = l[k], k += 1, p.push(256 * -(I - 251) - y - 108)) : (y = l[k], 
                                    b = l[k + 1], S = l[k + 2], T = l[k + 3], k += 4, p.push((y << 24 | b << 16 | S << 8 | T) / 65536));
                                }
                            }
                        }(r), t.advanceWidth = x, c;
                    }
                    function Ue(e, t) {
                        var r, i = ce.indexOf(e);
                        return 0 <= i && (r = i), 0 <= (i = t.indexOf(e)) ? r = i + ce.length : (r = ce.length + t.length, 
                        t.push(e)), r;
                    }
                    function Ne(e, t, r) {
                        for (var i = {}, n = 0; n < e.length; n += 1) {
                            var o = e[n], s = t[o.name];
                            void 0 === s || Te(s, o.value) || ("SID" === o.type && (s = Ue(s, r)), i[o.op] = {
                                name: o.name,
                                type: o.type,
                                value: s
                            });
                        }
                        return i;
                    }
                    function Be(e, t) {
                        var r = new te.Record("Top DICT", [ {
                            name: "dict",
                            type: "DICT",
                            value: {}
                        } ]);
                        return r.dict = Ne(De, e, t), r;
                    }
                    function Fe(e) {
                        var t = new te.Record("Top DICT INDEX", [ {
                            name: "topDicts",
                            type: "INDEX",
                            value: []
                        } ]);
                        return t.topDicts = [ {
                            name: "topDict_0",
                            type: "TABLE",
                            value: e
                        } ], t;
                    }
                    function Ge(e) {
                        var t = [], r = e.path;
                        t.push({
                            name: "width",
                            type: "NUMBER",
                            value: e.advanceWidth
                        });
                        for (var i = 0, n = 0, o = 0; o < r.commands.length; o += 1) {
                            var s = void 0, a = void 0, h = r.commands[o];
                            if ("Q" === h.type && (h = {
                                type: "C",
                                x: h.x,
                                y: h.y,
                                x1: 1 / 3 * i + 2 / 3 * h.x1,
                                y1: 1 / 3 * n + 2 / 3 * h.y1,
                                x2: 1 / 3 * h.x + 2 / 3 * h.x1,
                                y2: 1 / 3 * h.y + 2 / 3 * h.y1
                            }), "M" === h.type) s = Math.round(h.x - i), a = Math.round(h.y - n), t.push({
                                name: "dx",
                                type: "NUMBER",
                                value: s
                            }), t.push({
                                name: "dy",
                                type: "NUMBER",
                                value: a
                            }), t.push({
                                name: "rmoveto",
                                type: "OP",
                                value: 21
                            }), i = Math.round(h.x), n = Math.round(h.y); else if ("L" === h.type) s = Math.round(h.x - i), 
                            a = Math.round(h.y - n), t.push({
                                name: "dx",
                                type: "NUMBER",
                                value: s
                            }), t.push({
                                name: "dy",
                                type: "NUMBER",
                                value: a
                            }), t.push({
                                name: "rlineto",
                                type: "OP",
                                value: 5
                            }), i = Math.round(h.x), n = Math.round(h.y); else if ("C" === h.type) {
                                var l = Math.round(h.x1 - i), u = Math.round(h.y1 - n), c = Math.round(h.x2 - h.x1), p = Math.round(h.y2 - h.y1);
                                s = Math.round(h.x - h.x2), a = Math.round(h.y - h.y2), t.push({
                                    name: "dx1",
                                    type: "NUMBER",
                                    value: l
                                }), t.push({
                                    name: "dy1",
                                    type: "NUMBER",
                                    value: u
                                }), t.push({
                                    name: "dx2",
                                    type: "NUMBER",
                                    value: c
                                }), t.push({
                                    name: "dy2",
                                    type: "NUMBER",
                                    value: p
                                }), t.push({
                                    name: "dx",
                                    type: "NUMBER",
                                    value: s
                                }), t.push({
                                    name: "dy",
                                    type: "NUMBER",
                                    value: a
                                }), t.push({
                                    name: "rrcurveto",
                                    type: "OP",
                                    value: 8
                                }), i = Math.round(h.x), n = Math.round(h.y);
                            }
                        }
                        return t.push({
                            name: "endchar",
                            type: "OP",
                            value: 14
                        }), t;
                    }
                    var ze = {
                        parse: function(e, t, r) {
                            r.tables.cff = {};
                            var i, n, o, s = Me(e, Me(e, (i = e, n = t, (o = {}).formatMajor = le.getCard8(i, n), 
                            o.formatMinor = le.getCard8(i, n + 1), o.size = le.getCard8(i, n + 2), o.offsetSize = le.getCard8(i, n + 3), 
                            o.startOffset = n, o.endOffset = n + 4, o).endOffset, le.bytesToString).endOffset), a = Me(e, s.endOffset, le.bytesToString), h = Me(e, a.endOffset);
                            r.gsubrs = h.objects, r.gsubrsBias = Ee(r.gsubrs);
                            var l = Ie(e, t, s.objects, a.objects);
                            if (1 !== l.length) throw new Error("CFF table has too many fonts in 'FontSet' - count of fonts NameIndex.length = " + l.length);
                            var u = l[0];
                            if ((r.tables.cff.topDict = u)._privateDict && (r.defaultWidthX = u._privateDict.defaultWidthX, 
                            r.nominalWidthX = u._privateDict.nominalWidthX), void 0 !== u.ros[0] && void 0 !== u.ros[1] && (r.isCIDFont = !0), 
                            r.isCIDFont) {
                                var c = u.fdArray, p = u.fdSelect;
                                if (0 === c || 0 === p) throw new Error("Font is marked as a CID font, but FDArray and/or FDSelect information is missing");
                                var d = Ie(e, t, Me(e, c += t).objects, a.objects);
                                u._fdArray = d, p += t, u._fdSelect = function(e, t, r, i) {
                                    var n, o = [], s = new le.Parser(e, t), a = s.parseCard8();
                                    if (0 === a) for (var h = 0; h < r; h++) {
                                        if (i <= (n = s.parseCard8())) throw new Error("CFF table CID Font FDSelect has bad FD index value " + n + " (FD count " + i + ")");
                                        o.push(n);
                                    } else {
                                        if (3 !== a) throw new Error("CFF Table CID Font FDSelect table has unsupported format " + a);
                                        var l, u = s.parseCard16(), c = s.parseCard16();
                                        if (0 !== c) throw new Error("CFF Table CID Font FDSelect format 3 range has bad initial GID " + c);
                                        for (var p = 0; p < u; p++) {
                                            if (n = s.parseCard8(), l = s.parseCard16(), i <= n) throw new Error("CFF table CID Font FDSelect has bad FD index value " + n + " (FD count " + i + ")");
                                            if (r < l) throw new Error("CFF Table CID Font FDSelect format 3 range has bad GID " + l);
                                            for (;c < l; c++) o.push(n);
                                            c = l;
                                        }
                                        if (l !== r) throw new Error("CFF Table CID Font FDSelect format 3 range has bad final GID " + l);
                                    }
                                    return o;
                                }(e, p, r.numGlyphs, d.length);
                            }
                            var f = t + u.private[1], m = ke(e, f, u.private[0], a.objects);
                            if (r.defaultWidthX = m.defaultWidthX, r.nominalWidthX = m.nominalWidthX, 0 !== m.subrs) {
                                var g = Me(e, f + m.subrs);
                                r.subrs = g.objects, r.subrsBias = Ee(r.subrs);
                            } else r.subrs = [], r.subrsBias = 0;
                            var v = Me(e, t + u.charStrings);
                            r.nGlyphs = v.objects.length;
                            var y = function(e, t, r, i) {
                                var n, o, s = new le.Parser(e, t);
                                r -= 1;
                                var a = [ ".notdef" ], h = s.parseCard8();
                                if (0 === h) for (var l = 0; l < r; l += 1) n = s.parseSID(), a.push(Re(i, n)); else if (1 === h) for (;a.length <= r; ) {
                                    n = s.parseSID(), o = s.parseCard8();
                                    for (var u = 0; u <= o; u += 1) a.push(Re(i, n)), n += 1;
                                } else {
                                    if (2 !== h) throw new Error("Unknown charset format " + h);
                                    for (;a.length <= r; ) {
                                        n = s.parseSID(), o = s.parseCard16();
                                        for (var c = 0; c <= o; c += 1) a.push(Re(i, n)), n += 1;
                                    }
                                }
                                return a;
                            }(e, t + u.charset, r.nGlyphs, a.objects);
                            0 === u.encoding ? r.cffEncoding = new ve(pe, y) : 1 === u.encoding ? r.cffEncoding = new ve(de, y) : r.cffEncoding = function(e, t, r) {
                                var i, n = {}, o = new le.Parser(e, t), s = o.parseCard8();
                                if (0 === s) for (var a = o.parseCard8(), h = 0; h < a; h += 1) n[i = o.parseCard8()] = h; else {
                                    if (1 !== s) throw new Error("Unknown encoding format " + s);
                                    var l = o.parseCard8();
                                    i = 1;
                                    for (var u = 0; u < l; u += 1) for (var c = o.parseCard8(), p = o.parseCard8(), d = c; d <= c + p; d += 1) n[d] = i, 
                                    i += 1;
                                }
                                return new ve(n, r);
                            }(e, t + u.encoding, y), r.encoding = r.encoding || r.cffEncoding, r.glyphs = new Se.GlyphSet(r);
                            for (var b = 0; b < r.nGlyphs; b += 1) {
                                var x = v.objects[b];
                                r.glyphs.push(b, Se.cffGlyphLoader(r, b, Oe, x));
                            }
                        },
                        make: function(e, t) {
                            for (var r, i = new te.Table("CFF ", [ {
                                name: "header",
                                type: "RECORD"
                            }, {
                                name: "nameIndex",
                                type: "RECORD"
                            }, {
                                name: "topDictIndex",
                                type: "RECORD"
                            }, {
                                name: "stringIndex",
                                type: "RECORD"
                            }, {
                                name: "globalSubrIndex",
                                type: "RECORD"
                            }, {
                                name: "charsets",
                                type: "RECORD"
                            }, {
                                name: "charStringsIndex",
                                type: "RECORD"
                            }, {
                                name: "privateDict",
                                type: "RECORD"
                            } ]), n = 1 / t.unitsPerEm, o = {
                                version: t.version,
                                fullName: t.fullName,
                                familyName: t.familyName,
                                weight: t.weightName,
                                fontBBox: t.fontBBox || [ 0, 0, 0, 0 ],
                                fontMatrix: [ n, 0, 0, n, 0, 0 ],
                                charset: 999,
                                encoding: 0,
                                charStrings: 999,
                                private: [ 0, 999 ]
                            }, s = [], a = 1; a < e.length; a += 1) r = e.get(a), s.push(r.name);
                            var h = [];
                            i.header = new te.Record("Header", [ {
                                name: "major",
                                type: "Card8",
                                value: 1
                            }, {
                                name: "minor",
                                type: "Card8",
                                value: 0
                            }, {
                                name: "hdrSize",
                                type: "Card8",
                                value: 4
                            }, {
                                name: "major",
                                type: "Card8",
                                value: 1
                            } ]), i.nameIndex = function(e) {
                                var t = new te.Record("Name INDEX", [ {
                                    name: "names",
                                    type: "INDEX",
                                    value: []
                                } ]);
                                t.names = [];
                                for (var r = 0; r < e.length; r += 1) t.names.push({
                                    name: "name_" + r,
                                    type: "NAME",
                                    value: e[r]
                                });
                                return t;
                            }([ t.postScriptName ]);
                            var l, u, c, p = Be(o, h);
                            i.topDictIndex = Fe(p), i.globalSubrIndex = new te.Record("Global Subr INDEX", [ {
                                name: "subrs",
                                type: "INDEX",
                                value: []
                            } ]), i.charsets = function(e, t) {
                                for (var r = new te.Record("Charsets", [ {
                                    name: "format",
                                    type: "Card8",
                                    value: 0
                                } ]), i = 0; i < e.length; i += 1) {
                                    var n = Ue(e[i], t);
                                    r.fields.push({
                                        name: "glyph_" + i,
                                        type: "SID",
                                        value: n
                                    });
                                }
                                return r;
                            }(s, h), i.charStringsIndex = function(e) {
                                for (var t = new te.Record("CharStrings INDEX", [ {
                                    name: "charStrings",
                                    type: "INDEX",
                                    value: []
                                } ]), r = 0; r < e.length; r += 1) {
                                    var i = e.get(r), n = Ge(i);
                                    t.charStrings.push({
                                        name: i.name,
                                        type: "CHARSTRING",
                                        value: n
                                    });
                                }
                                return t;
                            }(e), i.privateDict = (l = {}, u = h, (c = new te.Record("Private DICT", [ {
                                name: "dict",
                                type: "DICT",
                                value: {}
                            } ])).dict = Ne(Pe, l, u), c), i.stringIndex = function(e) {
                                var t = new te.Record("String INDEX", [ {
                                    name: "strings",
                                    type: "INDEX",
                                    value: []
                                } ]);
                                t.strings = [];
                                for (var r = 0; r < e.length; r += 1) t.strings.push({
                                    name: "string_" + r,
                                    type: "STRING",
                                    value: e[r]
                                });
                                return t;
                            }(h);
                            var d = i.header.sizeOf() + i.nameIndex.sizeOf() + i.topDictIndex.sizeOf() + i.stringIndex.sizeOf() + i.globalSubrIndex.sizeOf();
                            return o.charset = d, o.encoding = 0, o.charStrings = o.charset + i.charsets.sizeOf(), 
                            o.private[1] = o.charStrings + i.charStringsIndex.sizeOf(), p = Be(o, h), i.topDictIndex = Fe(p), 
                            i;
                        }
                    }, je = {
                        parse: function(e, t) {
                            var r = {}, i = new le.Parser(e, t);
                            return r.version = i.parseVersion(), r.fontRevision = Math.round(1e3 * i.parseFixed()) / 1e3, 
                            r.checkSumAdjustment = i.parseULong(), r.magicNumber = i.parseULong(), k.argument(1594834165 === r.magicNumber, "Font header has wrong magic number."), 
                            r.flags = i.parseUShort(), r.unitsPerEm = i.parseUShort(), r.created = i.parseLongDateTime(), 
                            r.modified = i.parseLongDateTime(), r.xMin = i.parseShort(), r.yMin = i.parseShort(), 
                            r.xMax = i.parseShort(), r.yMax = i.parseShort(), r.macStyle = i.parseUShort(), 
                            r.lowestRecPPEM = i.parseUShort(), r.fontDirectionHint = i.parseShort(), r.indexToLocFormat = i.parseShort(), 
                            r.glyphDataFormat = i.parseShort(), r;
                        },
                        make: function(e) {
                            var t = Math.round(new Date().getTime() / 1e3) + 2082844800, r = t;
                            return e.createdTimestamp && (r = e.createdTimestamp + 2082844800), new te.Table("head", [ {
                                name: "version",
                                type: "FIXED",
                                value: 65536
                            }, {
                                name: "fontRevision",
                                type: "FIXED",
                                value: 65536
                            }, {
                                name: "checkSumAdjustment",
                                type: "ULONG",
                                value: 0
                            }, {
                                name: "magicNumber",
                                type: "ULONG",
                                value: 1594834165
                            }, {
                                name: "flags",
                                type: "USHORT",
                                value: 0
                            }, {
                                name: "unitsPerEm",
                                type: "USHORT",
                                value: 1e3
                            }, {
                                name: "created",
                                type: "LONGDATETIME",
                                value: r
                            }, {
                                name: "modified",
                                type: "LONGDATETIME",
                                value: t
                            }, {
                                name: "xMin",
                                type: "SHORT",
                                value: 0
                            }, {
                                name: "yMin",
                                type: "SHORT",
                                value: 0
                            }, {
                                name: "xMax",
                                type: "SHORT",
                                value: 0
                            }, {
                                name: "yMax",
                                type: "SHORT",
                                value: 0
                            }, {
                                name: "macStyle",
                                type: "USHORT",
                                value: 0
                            }, {
                                name: "lowestRecPPEM",
                                type: "USHORT",
                                value: 0
                            }, {
                                name: "fontDirectionHint",
                                type: "SHORT",
                                value: 2
                            }, {
                                name: "indexToLocFormat",
                                type: "SHORT",
                                value: 0
                            }, {
                                name: "glyphDataFormat",
                                type: "SHORT",
                                value: 0
                            } ], e);
                        }
                    }, He = {
                        parse: function(e, t) {
                            var r = {}, i = new le.Parser(e, t);
                            return r.version = i.parseVersion(), r.ascender = i.parseShort(), r.descender = i.parseShort(), 
                            r.lineGap = i.parseShort(), r.advanceWidthMax = i.parseUShort(), r.minLeftSideBearing = i.parseShort(), 
                            r.minRightSideBearing = i.parseShort(), r.xMaxExtent = i.parseShort(), r.caretSlopeRise = i.parseShort(), 
                            r.caretSlopeRun = i.parseShort(), r.caretOffset = i.parseShort(), i.relativeOffset += 8, 
                            r.metricDataFormat = i.parseShort(), r.numberOfHMetrics = i.parseUShort(), r;
                        },
                        make: function(e) {
                            return new te.Table("hhea", [ {
                                name: "version",
                                type: "FIXED",
                                value: 65536
                            }, {
                                name: "ascender",
                                type: "FWORD",
                                value: 0
                            }, {
                                name: "descender",
                                type: "FWORD",
                                value: 0
                            }, {
                                name: "lineGap",
                                type: "FWORD",
                                value: 0
                            }, {
                                name: "advanceWidthMax",
                                type: "UFWORD",
                                value: 0
                            }, {
                                name: "minLeftSideBearing",
                                type: "FWORD",
                                value: 0
                            }, {
                                name: "minRightSideBearing",
                                type: "FWORD",
                                value: 0
                            }, {
                                name: "xMaxExtent",
                                type: "FWORD",
                                value: 0
                            }, {
                                name: "caretSlopeRise",
                                type: "SHORT",
                                value: 1
                            }, {
                                name: "caretSlopeRun",
                                type: "SHORT",
                                value: 0
                            }, {
                                name: "caretOffset",
                                type: "SHORT",
                                value: 0
                            }, {
                                name: "reserved1",
                                type: "SHORT",
                                value: 0
                            }, {
                                name: "reserved2",
                                type: "SHORT",
                                value: 0
                            }, {
                                name: "reserved3",
                                type: "SHORT",
                                value: 0
                            }, {
                                name: "reserved4",
                                type: "SHORT",
                                value: 0
                            }, {
                                name: "metricDataFormat",
                                type: "SHORT",
                                value: 0
                            }, {
                                name: "numberOfHMetrics",
                                type: "USHORT",
                                value: 0
                            } ], e);
                        }
                    }, Ve = {
                        parse: function(e, t, r, i, n) {
                            for (var o, s, a = new le.Parser(e, t), h = 0; h < i; h += 1) {
                                h < r && (o = a.parseUShort(), s = a.parseShort());
                                var l = n.get(h);
                                l.advanceWidth = o, l.leftSideBearing = s;
                            }
                        },
                        make: function(e) {
                            for (var t = new te.Table("hmtx", []), r = 0; r < e.length; r += 1) {
                                var i = e.get(r), n = i.advanceWidth || 0, o = i.leftSideBearing || 0;
                                t.fields.push({
                                    name: "advanceWidth_" + r,
                                    type: "USHORT",
                                    value: n
                                }), t.fields.push({
                                    name: "leftSideBearing_" + r,
                                    type: "SHORT",
                                    value: o
                                });
                            }
                            return t;
                        }
                    }, We = {
                        make: function(e) {
                            for (var t = new te.Table("ltag", [ {
                                name: "version",
                                type: "ULONG",
                                value: 1
                            }, {
                                name: "flags",
                                type: "ULONG",
                                value: 0
                            }, {
                                name: "numTags",
                                type: "ULONG",
                                value: e.length
                            } ]), r = "", i = 12 + 4 * e.length, n = 0; n < e.length; ++n) {
                                var o = r.indexOf(e[n]);
                                o < 0 && (o = r.length, r += e[n]), t.fields.push({
                                    name: "offset " + n,
                                    type: "USHORT",
                                    value: i + o
                                }), t.fields.push({
                                    name: "length " + n,
                                    type: "USHORT",
                                    value: e[n].length
                                });
                            }
                            return t.fields.push({
                                name: "stringPool",
                                type: "CHARARRAY",
                                value: r
                            }), t;
                        },
                        parse: function(e, t) {
                            var r = new le.Parser(e, t), i = r.parseULong();
                            k.argument(1 === i, "Unsupported ltag table version."), r.skip("uLong", 1);
                            for (var n = r.parseULong(), o = [], s = 0; s < n; s++) {
                                for (var a = "", h = t + r.parseUShort(), l = r.parseUShort(), u = h; u < h + l; ++u) a += String.fromCharCode(e.getInt8(u));
                                o.push(a);
                            }
                            return o;
                        }
                    }, qe = {
                        parse: function(e, t) {
                            var r = {}, i = new le.Parser(e, t);
                            return r.version = i.parseVersion(), r.numGlyphs = i.parseUShort(), 1 === r.version && (r.maxPoints = i.parseUShort(), 
                            r.maxContours = i.parseUShort(), r.maxCompositePoints = i.parseUShort(), r.maxCompositeContours = i.parseUShort(), 
                            r.maxZones = i.parseUShort(), r.maxTwilightPoints = i.parseUShort(), r.maxStorage = i.parseUShort(), 
                            r.maxFunctionDefs = i.parseUShort(), r.maxInstructionDefs = i.parseUShort(), r.maxStackElements = i.parseUShort(), 
                            r.maxSizeOfInstructions = i.parseUShort(), r.maxComponentElements = i.parseUShort(), 
                            r.maxComponentDepth = i.parseUShort()), r;
                        },
                        make: function(e) {
                            return new te.Table("maxp", [ {
                                name: "version",
                                type: "FIXED",
                                value: 20480
                            }, {
                                name: "numGlyphs",
                                type: "USHORT",
                                value: e
                            } ]);
                        }
                    }, Xe = [ "copyright", "fontFamily", "fontSubfamily", "uniqueID", "fullName", "version", "postScriptName", "trademark", "manufacturer", "designer", "description", "manufacturerURL", "designerURL", "license", "licenseURL", "reserved", "preferredFamily", "preferredSubfamily", "compatibleFullName", "sampleText", "postScriptFindFontName", "wwsFamily", "wwsSubfamily" ], Ye = {
                        0: "en",
                        1: "fr",
                        2: "de",
                        3: "it",
                        4: "nl",
                        5: "sv",
                        6: "es",
                        7: "da",
                        8: "pt",
                        9: "no",
                        10: "he",
                        11: "ja",
                        12: "ar",
                        13: "fi",
                        14: "el",
                        15: "is",
                        16: "mt",
                        17: "tr",
                        18: "hr",
                        19: "zh-Hant",
                        20: "ur",
                        21: "hi",
                        22: "th",
                        23: "ko",
                        24: "lt",
                        25: "pl",
                        26: "hu",
                        27: "es",
                        28: "lv",
                        29: "se",
                        30: "fo",
                        31: "fa",
                        32: "ru",
                        33: "zh",
                        34: "nl-BE",
                        35: "ga",
                        36: "sq",
                        37: "ro",
                        38: "cz",
                        39: "sk",
                        40: "si",
                        41: "yi",
                        42: "sr",
                        43: "mk",
                        44: "bg",
                        45: "uk",
                        46: "be",
                        47: "uz",
                        48: "kk",
                        49: "az-Cyrl",
                        50: "az-Arab",
                        51: "hy",
                        52: "ka",
                        53: "mo",
                        54: "ky",
                        55: "tg",
                        56: "tk",
                        57: "mn-CN",
                        58: "mn",
                        59: "ps",
                        60: "ks",
                        61: "ku",
                        62: "sd",
                        63: "bo",
                        64: "ne",
                        65: "sa",
                        66: "mr",
                        67: "bn",
                        68: "as",
                        69: "gu",
                        70: "pa",
                        71: "or",
                        72: "ml",
                        73: "kn",
                        74: "ta",
                        75: "te",
                        76: "si",
                        77: "my",
                        78: "km",
                        79: "lo",
                        80: "vi",
                        81: "id",
                        82: "tl",
                        83: "ms",
                        84: "ms-Arab",
                        85: "am",
                        86: "ti",
                        87: "om",
                        88: "so",
                        89: "sw",
                        90: "rw",
                        91: "rn",
                        92: "ny",
                        93: "mg",
                        94: "eo",
                        128: "cy",
                        129: "eu",
                        130: "ca",
                        131: "la",
                        132: "qu",
                        133: "gn",
                        134: "ay",
                        135: "tt",
                        136: "ug",
                        137: "dz",
                        138: "jv",
                        139: "su",
                        140: "gl",
                        141: "af",
                        142: "br",
                        143: "iu",
                        144: "gd",
                        145: "gv",
                        146: "ga",
                        147: "to",
                        148: "el-polyton",
                        149: "kl",
                        150: "az",
                        151: "nn"
                    }, Ze = {
                        0: 0,
                        1: 0,
                        2: 0,
                        3: 0,
                        4: 0,
                        5: 0,
                        6: 0,
                        7: 0,
                        8: 0,
                        9: 0,
                        10: 5,
                        11: 1,
                        12: 4,
                        13: 0,
                        14: 6,
                        15: 0,
                        16: 0,
                        17: 0,
                        18: 0,
                        19: 2,
                        20: 4,
                        21: 9,
                        22: 21,
                        23: 3,
                        24: 29,
                        25: 29,
                        26: 29,
                        27: 29,
                        28: 29,
                        29: 0,
                        30: 0,
                        31: 4,
                        32: 7,
                        33: 25,
                        34: 0,
                        35: 0,
                        36: 0,
                        37: 0,
                        38: 29,
                        39: 29,
                        40: 0,
                        41: 5,
                        42: 7,
                        43: 7,
                        44: 7,
                        45: 7,
                        46: 7,
                        47: 7,
                        48: 7,
                        49: 7,
                        50: 4,
                        51: 24,
                        52: 23,
                        53: 7,
                        54: 7,
                        55: 7,
                        56: 7,
                        57: 27,
                        58: 7,
                        59: 4,
                        60: 4,
                        61: 4,
                        62: 4,
                        63: 26,
                        64: 9,
                        65: 9,
                        66: 9,
                        67: 13,
                        68: 13,
                        69: 11,
                        70: 10,
                        71: 12,
                        72: 17,
                        73: 16,
                        74: 14,
                        75: 15,
                        76: 18,
                        77: 19,
                        78: 20,
                        79: 22,
                        80: 30,
                        81: 0,
                        82: 0,
                        83: 0,
                        84: 4,
                        85: 28,
                        86: 28,
                        87: 28,
                        88: 0,
                        89: 0,
                        90: 0,
                        91: 0,
                        92: 0,
                        93: 0,
                        94: 0,
                        128: 0,
                        129: 0,
                        130: 0,
                        131: 0,
                        132: 0,
                        133: 0,
                        134: 0,
                        135: 7,
                        136: 4,
                        137: 26,
                        138: 0,
                        139: 0,
                        140: 0,
                        141: 0,
                        142: 0,
                        143: 28,
                        144: 0,
                        145: 0,
                        146: 0,
                        147: 0,
                        148: 6,
                        149: 0,
                        150: 0,
                        151: 0
                    }, Qe = {
                        1078: "af",
                        1052: "sq",
                        1156: "gsw",
                        1118: "am",
                        5121: "ar-DZ",
                        15361: "ar-BH",
                        3073: "ar",
                        2049: "ar-IQ",
                        11265: "ar-JO",
                        13313: "ar-KW",
                        12289: "ar-LB",
                        4097: "ar-LY",
                        6145: "ary",
                        8193: "ar-OM",
                        16385: "ar-QA",
                        1025: "ar-SA",
                        10241: "ar-SY",
                        7169: "aeb",
                        14337: "ar-AE",
                        9217: "ar-YE",
                        1067: "hy",
                        1101: "as",
                        2092: "az-Cyrl",
                        1068: "az",
                        1133: "ba",
                        1069: "eu",
                        1059: "be",
                        2117: "bn",
                        1093: "bn-IN",
                        8218: "bs-Cyrl",
                        5146: "bs",
                        1150: "br",
                        1026: "bg",
                        1027: "ca",
                        3076: "zh-HK",
                        5124: "zh-MO",
                        2052: "zh",
                        4100: "zh-SG",
                        1028: "zh-TW",
                        1155: "co",
                        1050: "hr",
                        4122: "hr-BA",
                        1029: "cs",
                        1030: "da",
                        1164: "prs",
                        1125: "dv",
                        2067: "nl-BE",
                        1043: "nl",
                        3081: "en-AU",
                        10249: "en-BZ",
                        4105: "en-CA",
                        9225: "en-029",
                        16393: "en-IN",
                        6153: "en-IE",
                        8201: "en-JM",
                        17417: "en-MY",
                        5129: "en-NZ",
                        13321: "en-PH",
                        18441: "en-SG",
                        7177: "en-ZA",
                        11273: "en-TT",
                        2057: "en-GB",
                        1033: "en",
                        12297: "en-ZW",
                        1061: "et",
                        1080: "fo",
                        1124: "fil",
                        1035: "fi",
                        2060: "fr-BE",
                        3084: "fr-CA",
                        1036: "fr",
                        5132: "fr-LU",
                        6156: "fr-MC",
                        4108: "fr-CH",
                        1122: "fy",
                        1110: "gl",
                        1079: "ka",
                        3079: "de-AT",
                        1031: "de",
                        5127: "de-LI",
                        4103: "de-LU",
                        2055: "de-CH",
                        1032: "el",
                        1135: "kl",
                        1095: "gu",
                        1128: "ha",
                        1037: "he",
                        1081: "hi",
                        1038: "hu",
                        1039: "is",
                        1136: "ig",
                        1057: "id",
                        1117: "iu",
                        2141: "iu-Latn",
                        2108: "ga",
                        1076: "xh",
                        1077: "zu",
                        1040: "it",
                        2064: "it-CH",
                        1041: "ja",
                        1099: "kn",
                        1087: "kk",
                        1107: "km",
                        1158: "quc",
                        1159: "rw",
                        1089: "sw",
                        1111: "kok",
                        1042: "ko",
                        1088: "ky",
                        1108: "lo",
                        1062: "lv",
                        1063: "lt",
                        2094: "dsb",
                        1134: "lb",
                        1071: "mk",
                        2110: "ms-BN",
                        1086: "ms",
                        1100: "ml",
                        1082: "mt",
                        1153: "mi",
                        1146: "arn",
                        1102: "mr",
                        1148: "moh",
                        1104: "mn",
                        2128: "mn-CN",
                        1121: "ne",
                        1044: "nb",
                        2068: "nn",
                        1154: "oc",
                        1096: "or",
                        1123: "ps",
                        1045: "pl",
                        1046: "pt",
                        2070: "pt-PT",
                        1094: "pa",
                        1131: "qu-BO",
                        2155: "qu-EC",
                        3179: "qu",
                        1048: "ro",
                        1047: "rm",
                        1049: "ru",
                        9275: "smn",
                        4155: "smj-NO",
                        5179: "smj",
                        3131: "se-FI",
                        1083: "se",
                        2107: "se-SE",
                        8251: "sms",
                        6203: "sma-NO",
                        7227: "sms",
                        1103: "sa",
                        7194: "sr-Cyrl-BA",
                        3098: "sr",
                        6170: "sr-Latn-BA",
                        2074: "sr-Latn",
                        1132: "nso",
                        1074: "tn",
                        1115: "si",
                        1051: "sk",
                        1060: "sl",
                        11274: "es-AR",
                        16394: "es-BO",
                        13322: "es-CL",
                        9226: "es-CO",
                        5130: "es-CR",
                        7178: "es-DO",
                        12298: "es-EC",
                        17418: "es-SV",
                        4106: "es-GT",
                        18442: "es-HN",
                        2058: "es-MX",
                        19466: "es-NI",
                        6154: "es-PA",
                        15370: "es-PY",
                        10250: "es-PE",
                        20490: "es-PR",
                        3082: "es",
                        1034: "es",
                        21514: "es-US",
                        14346: "es-UY",
                        8202: "es-VE",
                        2077: "sv-FI",
                        1053: "sv",
                        1114: "syr",
                        1064: "tg",
                        2143: "tzm",
                        1097: "ta",
                        1092: "tt",
                        1098: "te",
                        1054: "th",
                        1105: "bo",
                        1055: "tr",
                        1090: "tk",
                        1152: "ug",
                        1058: "uk",
                        1070: "hsb",
                        1056: "ur",
                        2115: "uz-Cyrl",
                        1091: "uz",
                        1066: "vi",
                        1106: "cy",
                        1160: "wo",
                        1157: "sah",
                        1144: "ii",
                        1130: "yo"
                    };
                    function Ke(e, t, r) {
                        switch (e) {
                          case 0:
                            if (65535 === t) return "und";
                            if (r) return r[t];
                            break;

                          case 1:
                            return Ye[t];

                          case 3:
                            return Qe[t];
                        }
                    }
                    var $e = "utf-16", Je = {
                        0: "macintosh",
                        1: "x-mac-japanese",
                        2: "x-mac-chinesetrad",
                        3: "x-mac-korean",
                        6: "x-mac-greek",
                        7: "x-mac-cyrillic",
                        9: "x-mac-devanagai",
                        10: "x-mac-gurmukhi",
                        11: "x-mac-gujarati",
                        12: "x-mac-oriya",
                        13: "x-mac-bengali",
                        14: "x-mac-tamil",
                        15: "x-mac-telugu",
                        16: "x-mac-kannada",
                        17: "x-mac-malayalam",
                        18: "x-mac-sinhalese",
                        19: "x-mac-burmese",
                        20: "x-mac-khmer",
                        21: "x-mac-thai",
                        22: "x-mac-lao",
                        23: "x-mac-georgian",
                        24: "x-mac-armenian",
                        25: "x-mac-chinesesimp",
                        26: "x-mac-tibetan",
                        27: "x-mac-mongolian",
                        28: "x-mac-ethiopic",
                        29: "x-mac-ce",
                        30: "x-mac-vietnamese",
                        31: "x-mac-extarabic"
                    }, et = {
                        15: "x-mac-icelandic",
                        17: "x-mac-turkish",
                        18: "x-mac-croatian",
                        24: "x-mac-ce",
                        25: "x-mac-ce",
                        26: "x-mac-ce",
                        27: "x-mac-ce",
                        28: "x-mac-ce",
                        30: "x-mac-icelandic",
                        37: "x-mac-romanian",
                        38: "x-mac-ce",
                        39: "x-mac-ce",
                        40: "x-mac-ce",
                        143: "x-mac-inuit",
                        146: "x-mac-gaelic"
                    };
                    function tt(e, t, r) {
                        switch (e) {
                          case 0:
                            return $e;

                          case 1:
                            return et[r] || Je[t];

                          case 3:
                            if (1 === t || 10 === t) return $e;
                        }
                    }
                    function rt(e) {
                        var t = {};
                        for (var r in e) t[e[r]] = parseInt(r);
                        return t;
                    }
                    function it(e, t, r, i, n, o) {
                        return new te.Record("NameRecord", [ {
                            name: "platformID",
                            type: "USHORT",
                            value: e
                        }, {
                            name: "encodingID",
                            type: "USHORT",
                            value: t
                        }, {
                            name: "languageID",
                            type: "USHORT",
                            value: r
                        }, {
                            name: "nameID",
                            type: "USHORT",
                            value: i
                        }, {
                            name: "length",
                            type: "USHORT",
                            value: n
                        }, {
                            name: "offset",
                            type: "USHORT",
                            value: o
                        } ]);
                    }
                    function nt(e, t) {
                        var r = function(e, t) {
                            var r = e.length, i = t.length - r + 1;
                            e: for (var n = 0; n < i; n++) for (;n < i; n++) {
                                for (var o = 0; o < r; o++) if (t[n + o] !== e[o]) continue e;
                                return n;
                            }
                            return -1;
                        }(e, t);
                        if (r < 0) {
                            r = t.length;
                            for (var i = 0, n = e.length; i < n; ++i) t.push(e[i]);
                        }
                        return r;
                    }
                    var ot = {
                        parse: function(e, t, r) {
                            for (var i = {}, n = new le.Parser(e, t), o = n.parseUShort(), s = n.parseUShort(), a = n.offset + n.parseUShort(), h = 0; h < s; h++) {
                                var l = n.parseUShort(), u = n.parseUShort(), c = n.parseUShort(), p = n.parseUShort(), d = Xe[p] || p, f = n.parseUShort(), m = n.parseUShort(), g = Ke(l, c, r), v = tt(l, u, c);
                                if (void 0 !== v && void 0 !== g) {
                                    var y;
                                    if (y = v === $e ? O.UTF16(e, a + m, f) : O.MACSTRING(e, a + m, f, v)) {
                                        var b = i[d];
                                        void 0 === b && (b = i[d] = {}), b[g] = y;
                                    }
                                }
                            }
                            return 1 === o && n.parseUShort(), i;
                        },
                        make: function(e, t) {
                            var r, i = [], n = {}, o = rt(Xe);
                            for (var s in e) {
                                var a = o[s];
                                if (void 0 === a && (a = s), r = parseInt(a), isNaN(r)) throw new Error('Name table entry "' + s + '" does not exist, see nameTableNames for complete list.');
                                n[r] = e[s], i.push(r);
                            }
                            for (var h = rt(Ye), l = rt(Qe), u = [], c = [], p = 0; p < i.length; p++) {
                                var d = n[r = i[p]];
                                for (var f in d) {
                                    var m = d[f], g = 1, v = h[f], y = Ze[v], b = tt(g, y, v), x = U.MACSTRING(m, b);
                                    void 0 === x && (g = 0, (v = t.indexOf(f)) < 0 && (v = t.length, t.push(f)), y = 4, 
                                    x = U.UTF16(m));
                                    var _ = nt(x, c);
                                    u.push(it(g, y, v, r, x.length, _));
                                    var w = l[f];
                                    if (void 0 !== w) {
                                        var S = U.UTF16(m), T = nt(S, c);
                                        u.push(it(3, 1, w, r, S.length, T));
                                    }
                                }
                            }
                            u.sort(function(e, t) {
                                return e.platformID - t.platformID || e.encodingID - t.encodingID || e.languageID - t.languageID || e.nameID - t.nameID;
                            });
                            for (var E = new te.Table("name", [ {
                                name: "format",
                                type: "USHORT",
                                value: 0
                            }, {
                                name: "count",
                                type: "USHORT",
                                value: u.length
                            }, {
                                name: "stringOffset",
                                type: "USHORT",
                                value: 6 + 12 * u.length
                            } ]), M = 0; M < u.length; M++) E.fields.push({
                                name: "record_" + M,
                                type: "RECORD",
                                value: u[M]
                            });
                            return E.fields.push({
                                name: "strings",
                                type: "LITERAL",
                                value: c
                            }), E;
                        }
                    }, st = [ {
                        begin: 0,
                        end: 127
                    }, {
                        begin: 128,
                        end: 255
                    }, {
                        begin: 256,
                        end: 383
                    }, {
                        begin: 384,
                        end: 591
                    }, {
                        begin: 592,
                        end: 687
                    }, {
                        begin: 688,
                        end: 767
                    }, {
                        begin: 768,
                        end: 879
                    }, {
                        begin: 880,
                        end: 1023
                    }, {
                        begin: 11392,
                        end: 11519
                    }, {
                        begin: 1024,
                        end: 1279
                    }, {
                        begin: 1328,
                        end: 1423
                    }, {
                        begin: 1424,
                        end: 1535
                    }, {
                        begin: 42240,
                        end: 42559
                    }, {
                        begin: 1536,
                        end: 1791
                    }, {
                        begin: 1984,
                        end: 2047
                    }, {
                        begin: 2304,
                        end: 2431
                    }, {
                        begin: 2432,
                        end: 2559
                    }, {
                        begin: 2560,
                        end: 2687
                    }, {
                        begin: 2688,
                        end: 2815
                    }, {
                        begin: 2816,
                        end: 2943
                    }, {
                        begin: 2944,
                        end: 3071
                    }, {
                        begin: 3072,
                        end: 3199
                    }, {
                        begin: 3200,
                        end: 3327
                    }, {
                        begin: 3328,
                        end: 3455
                    }, {
                        begin: 3584,
                        end: 3711
                    }, {
                        begin: 3712,
                        end: 3839
                    }, {
                        begin: 4256,
                        end: 4351
                    }, {
                        begin: 6912,
                        end: 7039
                    }, {
                        begin: 4352,
                        end: 4607
                    }, {
                        begin: 7680,
                        end: 7935
                    }, {
                        begin: 7936,
                        end: 8191
                    }, {
                        begin: 8192,
                        end: 8303
                    }, {
                        begin: 8304,
                        end: 8351
                    }, {
                        begin: 8352,
                        end: 8399
                    }, {
                        begin: 8400,
                        end: 8447
                    }, {
                        begin: 8448,
                        end: 8527
                    }, {
                        begin: 8528,
                        end: 8591
                    }, {
                        begin: 8592,
                        end: 8703
                    }, {
                        begin: 8704,
                        end: 8959
                    }, {
                        begin: 8960,
                        end: 9215
                    }, {
                        begin: 9216,
                        end: 9279
                    }, {
                        begin: 9280,
                        end: 9311
                    }, {
                        begin: 9312,
                        end: 9471
                    }, {
                        begin: 9472,
                        end: 9599
                    }, {
                        begin: 9600,
                        end: 9631
                    }, {
                        begin: 9632,
                        end: 9727
                    }, {
                        begin: 9728,
                        end: 9983
                    }, {
                        begin: 9984,
                        end: 10175
                    }, {
                        begin: 12288,
                        end: 12351
                    }, {
                        begin: 12352,
                        end: 12447
                    }, {
                        begin: 12448,
                        end: 12543
                    }, {
                        begin: 12544,
                        end: 12591
                    }, {
                        begin: 12592,
                        end: 12687
                    }, {
                        begin: 43072,
                        end: 43135
                    }, {
                        begin: 12800,
                        end: 13055
                    }, {
                        begin: 13056,
                        end: 13311
                    }, {
                        begin: 44032,
                        end: 55215
                    }, {
                        begin: 55296,
                        end: 57343
                    }, {
                        begin: 67840,
                        end: 67871
                    }, {
                        begin: 19968,
                        end: 40959
                    }, {
                        begin: 57344,
                        end: 63743
                    }, {
                        begin: 12736,
                        end: 12783
                    }, {
                        begin: 64256,
                        end: 64335
                    }, {
                        begin: 64336,
                        end: 65023
                    }, {
                        begin: 65056,
                        end: 65071
                    }, {
                        begin: 65040,
                        end: 65055
                    }, {
                        begin: 65104,
                        end: 65135
                    }, {
                        begin: 65136,
                        end: 65279
                    }, {
                        begin: 65280,
                        end: 65519
                    }, {
                        begin: 65520,
                        end: 65535
                    }, {
                        begin: 3840,
                        end: 4095
                    }, {
                        begin: 1792,
                        end: 1871
                    }, {
                        begin: 1920,
                        end: 1983
                    }, {
                        begin: 3456,
                        end: 3583
                    }, {
                        begin: 4096,
                        end: 4255
                    }, {
                        begin: 4608,
                        end: 4991
                    }, {
                        begin: 5024,
                        end: 5119
                    }, {
                        begin: 5120,
                        end: 5759
                    }, {
                        begin: 5760,
                        end: 5791
                    }, {
                        begin: 5792,
                        end: 5887
                    }, {
                        begin: 6016,
                        end: 6143
                    }, {
                        begin: 6144,
                        end: 6319
                    }, {
                        begin: 10240,
                        end: 10495
                    }, {
                        begin: 40960,
                        end: 42127
                    }, {
                        begin: 5888,
                        end: 5919
                    }, {
                        begin: 66304,
                        end: 66351
                    }, {
                        begin: 66352,
                        end: 66383
                    }, {
                        begin: 66560,
                        end: 66639
                    }, {
                        begin: 118784,
                        end: 119039
                    }, {
                        begin: 119808,
                        end: 120831
                    }, {
                        begin: 1044480,
                        end: 1048573
                    }, {
                        begin: 65024,
                        end: 65039
                    }, {
                        begin: 917504,
                        end: 917631
                    }, {
                        begin: 6400,
                        end: 6479
                    }, {
                        begin: 6480,
                        end: 6527
                    }, {
                        begin: 6528,
                        end: 6623
                    }, {
                        begin: 6656,
                        end: 6687
                    }, {
                        begin: 11264,
                        end: 11359
                    }, {
                        begin: 11568,
                        end: 11647
                    }, {
                        begin: 19904,
                        end: 19967
                    }, {
                        begin: 43008,
                        end: 43055
                    }, {
                        begin: 65536,
                        end: 65663
                    }, {
                        begin: 65856,
                        end: 65935
                    }, {
                        begin: 66432,
                        end: 66463
                    }, {
                        begin: 66464,
                        end: 66527
                    }, {
                        begin: 66640,
                        end: 66687
                    }, {
                        begin: 66688,
                        end: 66735
                    }, {
                        begin: 67584,
                        end: 67647
                    }, {
                        begin: 68096,
                        end: 68191
                    }, {
                        begin: 119552,
                        end: 119647
                    }, {
                        begin: 73728,
                        end: 74751
                    }, {
                        begin: 119648,
                        end: 119679
                    }, {
                        begin: 7040,
                        end: 7103
                    }, {
                        begin: 7168,
                        end: 7247
                    }, {
                        begin: 7248,
                        end: 7295
                    }, {
                        begin: 43136,
                        end: 43231
                    }, {
                        begin: 43264,
                        end: 43311
                    }, {
                        begin: 43312,
                        end: 43359
                    }, {
                        begin: 43520,
                        end: 43615
                    }, {
                        begin: 65936,
                        end: 65999
                    }, {
                        begin: 66e3,
                        end: 66047
                    }, {
                        begin: 66208,
                        end: 66271
                    }, {
                        begin: 127024,
                        end: 127135
                    } ], at = {
                        parse: function(e, t) {
                            var r = {}, i = new le.Parser(e, t);
                            r.version = i.parseUShort(), r.xAvgCharWidth = i.parseShort(), r.usWeightClass = i.parseUShort(), 
                            r.usWidthClass = i.parseUShort(), r.fsType = i.parseUShort(), r.ySubscriptXSize = i.parseShort(), 
                            r.ySubscriptYSize = i.parseShort(), r.ySubscriptXOffset = i.parseShort(), r.ySubscriptYOffset = i.parseShort(), 
                            r.ySuperscriptXSize = i.parseShort(), r.ySuperscriptYSize = i.parseShort(), r.ySuperscriptXOffset = i.parseShort(), 
                            r.ySuperscriptYOffset = i.parseShort(), r.yStrikeoutSize = i.parseShort(), r.yStrikeoutPosition = i.parseShort(), 
                            r.sFamilyClass = i.parseShort(), r.panose = [];
                            for (var n = 0; n < 10; n++) r.panose[n] = i.parseByte();
                            return r.ulUnicodeRange1 = i.parseULong(), r.ulUnicodeRange2 = i.parseULong(), r.ulUnicodeRange3 = i.parseULong(), 
                            r.ulUnicodeRange4 = i.parseULong(), r.achVendID = String.fromCharCode(i.parseByte(), i.parseByte(), i.parseByte(), i.parseByte()), 
                            r.fsSelection = i.parseUShort(), r.usFirstCharIndex = i.parseUShort(), r.usLastCharIndex = i.parseUShort(), 
                            r.sTypoAscender = i.parseShort(), r.sTypoDescender = i.parseShort(), r.sTypoLineGap = i.parseShort(), 
                            r.usWinAscent = i.parseUShort(), r.usWinDescent = i.parseUShort(), 1 <= r.version && (r.ulCodePageRange1 = i.parseULong(), 
                            r.ulCodePageRange2 = i.parseULong()), 2 <= r.version && (r.sxHeight = i.parseShort(), 
                            r.sCapHeight = i.parseShort(), r.usDefaultChar = i.parseUShort(), r.usBreakChar = i.parseUShort(), 
                            r.usMaxContent = i.parseUShort()), r;
                        },
                        make: function(e) {
                            return new te.Table("OS/2", [ {
                                name: "version",
                                type: "USHORT",
                                value: 3
                            }, {
                                name: "xAvgCharWidth",
                                type: "SHORT",
                                value: 0
                            }, {
                                name: "usWeightClass",
                                type: "USHORT",
                                value: 0
                            }, {
                                name: "usWidthClass",
                                type: "USHORT",
                                value: 0
                            }, {
                                name: "fsType",
                                type: "USHORT",
                                value: 0
                            }, {
                                name: "ySubscriptXSize",
                                type: "SHORT",
                                value: 650
                            }, {
                                name: "ySubscriptYSize",
                                type: "SHORT",
                                value: 699
                            }, {
                                name: "ySubscriptXOffset",
                                type: "SHORT",
                                value: 0
                            }, {
                                name: "ySubscriptYOffset",
                                type: "SHORT",
                                value: 140
                            }, {
                                name: "ySuperscriptXSize",
                                type: "SHORT",
                                value: 650
                            }, {
                                name: "ySuperscriptYSize",
                                type: "SHORT",
                                value: 699
                            }, {
                                name: "ySuperscriptXOffset",
                                type: "SHORT",
                                value: 0
                            }, {
                                name: "ySuperscriptYOffset",
                                type: "SHORT",
                                value: 479
                            }, {
                                name: "yStrikeoutSize",
                                type: "SHORT",
                                value: 49
                            }, {
                                name: "yStrikeoutPosition",
                                type: "SHORT",
                                value: 258
                            }, {
                                name: "sFamilyClass",
                                type: "SHORT",
                                value: 0
                            }, {
                                name: "bFamilyType",
                                type: "BYTE",
                                value: 0
                            }, {
                                name: "bSerifStyle",
                                type: "BYTE",
                                value: 0
                            }, {
                                name: "bWeight",
                                type: "BYTE",
                                value: 0
                            }, {
                                name: "bProportion",
                                type: "BYTE",
                                value: 0
                            }, {
                                name: "bContrast",
                                type: "BYTE",
                                value: 0
                            }, {
                                name: "bStrokeVariation",
                                type: "BYTE",
                                value: 0
                            }, {
                                name: "bArmStyle",
                                type: "BYTE",
                                value: 0
                            }, {
                                name: "bLetterform",
                                type: "BYTE",
                                value: 0
                            }, {
                                name: "bMidline",
                                type: "BYTE",
                                value: 0
                            }, {
                                name: "bXHeight",
                                type: "BYTE",
                                value: 0
                            }, {
                                name: "ulUnicodeRange1",
                                type: "ULONG",
                                value: 0
                            }, {
                                name: "ulUnicodeRange2",
                                type: "ULONG",
                                value: 0
                            }, {
                                name: "ulUnicodeRange3",
                                type: "ULONG",
                                value: 0
                            }, {
                                name: "ulUnicodeRange4",
                                type: "ULONG",
                                value: 0
                            }, {
                                name: "achVendID",
                                type: "CHARARRAY",
                                value: "XXXX"
                            }, {
                                name: "fsSelection",
                                type: "USHORT",
                                value: 0
                            }, {
                                name: "usFirstCharIndex",
                                type: "USHORT",
                                value: 0
                            }, {
                                name: "usLastCharIndex",
                                type: "USHORT",
                                value: 0
                            }, {
                                name: "sTypoAscender",
                                type: "SHORT",
                                value: 0
                            }, {
                                name: "sTypoDescender",
                                type: "SHORT",
                                value: 0
                            }, {
                                name: "sTypoLineGap",
                                type: "SHORT",
                                value: 0
                            }, {
                                name: "usWinAscent",
                                type: "USHORT",
                                value: 0
                            }, {
                                name: "usWinDescent",
                                type: "USHORT",
                                value: 0
                            }, {
                                name: "ulCodePageRange1",
                                type: "ULONG",
                                value: 0
                            }, {
                                name: "ulCodePageRange2",
                                type: "ULONG",
                                value: 0
                            }, {
                                name: "sxHeight",
                                type: "SHORT",
                                value: 0
                            }, {
                                name: "sCapHeight",
                                type: "SHORT",
                                value: 0
                            }, {
                                name: "usDefaultChar",
                                type: "USHORT",
                                value: 0
                            }, {
                                name: "usBreakChar",
                                type: "USHORT",
                                value: 0
                            }, {
                                name: "usMaxContext",
                                type: "USHORT",
                                value: 0
                            } ], e);
                        },
                        unicodeRanges: st,
                        getUnicodeRange: function(e) {
                            for (var t = 0; t < st.length; t += 1) {
                                var r = st[t];
                                if (e >= r.begin && e < r.end) return t;
                            }
                            return -1;
                        }
                    }, ht = {
                        parse: function(e, t) {
                            var r = {}, i = new le.Parser(e, t);
                            switch (r.version = i.parseVersion(), r.italicAngle = i.parseFixed(), r.underlinePosition = i.parseShort(), 
                            r.underlineThickness = i.parseShort(), r.isFixedPitch = i.parseULong(), r.minMemType42 = i.parseULong(), 
                            r.maxMemType42 = i.parseULong(), r.minMemType1 = i.parseULong(), r.maxMemType1 = i.parseULong(), 
                            r.version) {
                              case 1:
                                r.names = fe.slice();
                                break;

                              case 2:
                                r.numberOfGlyphs = i.parseUShort(), r.glyphNameIndex = new Array(r.numberOfGlyphs);
                                for (var n = 0; n < r.numberOfGlyphs; n++) r.glyphNameIndex[n] = i.parseUShort();
                                r.names = [];
                                for (var o = 0; o < r.numberOfGlyphs; o++) if (r.glyphNameIndex[o] >= fe.length) {
                                    var s = i.parseChar();
                                    r.names.push(i.parseString(s));
                                }
                                break;

                              case 2.5:
                                r.numberOfGlyphs = i.parseUShort(), r.offset = new Array(r.numberOfGlyphs);
                                for (var a = 0; a < r.numberOfGlyphs; a++) r.offset[a] = i.parseChar();
                            }
                            return r;
                        },
                        make: function() {
                            return new te.Table("post", [ {
                                name: "version",
                                type: "FIXED",
                                value: 196608
                            }, {
                                name: "italicAngle",
                                type: "FIXED",
                                value: 0
                            }, {
                                name: "underlinePosition",
                                type: "FWORD",
                                value: 0
                            }, {
                                name: "underlineThickness",
                                type: "FWORD",
                                value: 0
                            }, {
                                name: "isFixedPitch",
                                type: "ULONG",
                                value: 0
                            }, {
                                name: "minMemType42",
                                type: "ULONG",
                                value: 0
                            }, {
                                name: "maxMemType42",
                                type: "ULONG",
                                value: 0
                            }, {
                                name: "minMemType1",
                                type: "ULONG",
                                value: 0
                            }, {
                                name: "maxMemType1",
                                type: "ULONG",
                                value: 0
                            } ]);
                        }
                    }, lt = new Array(9);
                    lt[1] = function() {
                        var e = this.offset + this.relativeOffset, t = this.parseUShort();
                        return 1 === t ? {
                            substFormat: 1,
                            coverage: this.parsePointer(ae.coverage),
                            deltaGlyphId: this.parseUShort()
                        } : 2 === t ? {
                            substFormat: 2,
                            coverage: this.parsePointer(ae.coverage),
                            substitute: this.parseOffset16List()
                        } : void k.assert(!1, "0x" + e.toString(16) + ": lookup type 1 format must be 1 or 2.");
                    }, lt[2] = function() {
                        var e = this.parseUShort();
                        return k.argument(1 === e, "GSUB Multiple Substitution Subtable identifier-format must be 1"), 
                        {
                            substFormat: e,
                            coverage: this.parsePointer(ae.coverage),
                            sequences: this.parseListOfLists()
                        };
                    }, lt[3] = function() {
                        var e = this.parseUShort();
                        return k.argument(1 === e, "GSUB Alternate Substitution Subtable identifier-format must be 1"), 
                        {
                            substFormat: e,
                            coverage: this.parsePointer(ae.coverage),
                            alternateSets: this.parseListOfLists()
                        };
                    }, lt[4] = function() {
                        var e = this.parseUShort();
                        return k.argument(1 === e, "GSUB ligature table identifier-format must be 1"), {
                            substFormat: e,
                            coverage: this.parsePointer(ae.coverage),
                            ligatureSets: this.parseListOfLists(function() {
                                return {
                                    ligGlyph: this.parseUShort(),
                                    components: this.parseUShortList(this.parseUShort() - 1)
                                };
                            })
                        };
                    };
                    var ut = {
                        sequenceIndex: ae.uShort,
                        lookupListIndex: ae.uShort
                    };
                    lt[5] = function() {
                        var e = this.offset + this.relativeOffset, t = this.parseUShort();
                        if (1 === t) return {
                            substFormat: t,
                            coverage: this.parsePointer(ae.coverage),
                            ruleSets: this.parseListOfLists(function() {
                                var e = this.parseUShort(), t = this.parseUShort();
                                return {
                                    input: this.parseUShortList(e - 1),
                                    lookupRecords: this.parseRecordList(t, ut)
                                };
                            })
                        };
                        if (2 === t) return {
                            substFormat: t,
                            coverage: this.parsePointer(ae.coverage),
                            classDef: this.parsePointer(ae.classDef),
                            classSets: this.parseListOfLists(function() {
                                var e = this.parseUShort(), t = this.parseUShort();
                                return {
                                    classes: this.parseUShortList(e - 1),
                                    lookupRecords: this.parseRecordList(t, ut)
                                };
                            })
                        };
                        if (3 === t) {
                            var r = this.parseUShort(), i = this.parseUShort();
                            return {
                                substFormat: t,
                                coverages: this.parseList(r, ae.pointer(ae.coverage)),
                                lookupRecords: this.parseRecordList(i, ut)
                            };
                        }
                        k.assert(!1, "0x" + e.toString(16) + ": lookup type 5 format must be 1, 2 or 3.");
                    }, lt[6] = function() {
                        var e = this.offset + this.relativeOffset, t = this.parseUShort();
                        return 1 === t ? {
                            substFormat: 1,
                            coverage: this.parsePointer(ae.coverage),
                            chainRuleSets: this.parseListOfLists(function() {
                                return {
                                    backtrack: this.parseUShortList(),
                                    input: this.parseUShortList(this.parseShort() - 1),
                                    lookahead: this.parseUShortList(),
                                    lookupRecords: this.parseRecordList(ut)
                                };
                            })
                        } : 2 === t ? {
                            substFormat: 2,
                            coverage: this.parsePointer(ae.coverage),
                            backtrackClassDef: this.parsePointer(ae.classDef),
                            inputClassDef: this.parsePointer(ae.classDef),
                            lookaheadClassDef: this.parsePointer(ae.classDef),
                            chainClassSet: this.parseListOfLists(function() {
                                return {
                                    backtrack: this.parseUShortList(),
                                    input: this.parseUShortList(this.parseShort() - 1),
                                    lookahead: this.parseUShortList(),
                                    lookupRecords: this.parseRecordList(ut)
                                };
                            })
                        } : 3 === t ? {
                            substFormat: 3,
                            backtrackCoverage: this.parseList(ae.pointer(ae.coverage)),
                            inputCoverage: this.parseList(ae.pointer(ae.coverage)),
                            lookaheadCoverage: this.parseList(ae.pointer(ae.coverage)),
                            lookupRecords: this.parseRecordList(ut)
                        } : void k.assert(!1, "0x" + e.toString(16) + ": lookup type 6 format must be 1, 2 or 3.");
                    }, lt[7] = function() {
                        var e = this.parseUShort();
                        k.argument(1 === e, "GSUB Extension Substitution subtable identifier-format must be 1");
                        var t = this.parseUShort(), r = new ae(this.data, this.offset + this.parseULong());
                        return {
                            substFormat: 1,
                            lookupType: t,
                            extension: lt[t].call(r)
                        };
                    }, lt[8] = function() {
                        var e = this.parseUShort();
                        return k.argument(1 === e, "GSUB Reverse Chaining Contextual Single Substitution Subtable identifier-format must be 1"), 
                        {
                            substFormat: e,
                            coverage: this.parsePointer(ae.coverage),
                            backtrackCoverage: this.parseList(ae.pointer(ae.coverage)),
                            lookaheadCoverage: this.parseList(ae.pointer(ae.coverage)),
                            substitutes: this.parseUShortList()
                        };
                    };
                    var ct = new Array(9);
                    ct[1] = function(e) {
                        return 1 === e.substFormat ? new te.Table("substitutionTable", [ {
                            name: "substFormat",
                            type: "USHORT",
                            value: 1
                        }, {
                            name: "coverage",
                            type: "TABLE",
                            value: new te.Coverage(e.coverage)
                        }, {
                            name: "deltaGlyphID",
                            type: "USHORT",
                            value: e.deltaGlyphId
                        } ]) : new te.Table("substitutionTable", [ {
                            name: "substFormat",
                            type: "USHORT",
                            value: 2
                        }, {
                            name: "coverage",
                            type: "TABLE",
                            value: new te.Coverage(e.coverage)
                        } ].concat(te.ushortList("substitute", e.substitute)));
                    }, ct[3] = function(e) {
                        return k.assert(1 === e.substFormat, "Lookup type 3 substFormat must be 1."), new te.Table("substitutionTable", [ {
                            name: "substFormat",
                            type: "USHORT",
                            value: 1
                        }, {
                            name: "coverage",
                            type: "TABLE",
                            value: new te.Coverage(e.coverage)
                        } ].concat(te.tableList("altSet", e.alternateSets, function(e) {
                            return new te.Table("alternateSetTable", te.ushortList("alternate", e));
                        })));
                    }, ct[4] = function(e) {
                        return k.assert(1 === e.substFormat, "Lookup type 4 substFormat must be 1."), new te.Table("substitutionTable", [ {
                            name: "substFormat",
                            type: "USHORT",
                            value: 1
                        }, {
                            name: "coverage",
                            type: "TABLE",
                            value: new te.Coverage(e.coverage)
                        } ].concat(te.tableList("ligSet", e.ligatureSets, function(e) {
                            return new te.Table("ligatureSetTable", te.tableList("ligature", e, function(e) {
                                return new te.Table("ligatureTable", [ {
                                    name: "ligGlyph",
                                    type: "USHORT",
                                    value: e.ligGlyph
                                } ].concat(te.ushortList("component", e.components, e.components.length + 1)));
                            }));
                        })));
                    };
                    var pt = {
                        parse: function(e, t) {
                            var r = new ae(e, t = t || 0), i = r.parseVersion(1);
                            return k.argument(1 === i || 1.1 === i, "Unsupported GSUB table version."), 1 === i ? {
                                version: i,
                                scripts: r.parseScriptList(),
                                features: r.parseFeatureList(),
                                lookups: r.parseLookupList(lt)
                            } : {
                                version: i,
                                scripts: r.parseScriptList(),
                                features: r.parseFeatureList(),
                                lookups: r.parseLookupList(lt),
                                variations: r.parseFeatureVariationsList()
                            };
                        },
                        make: function(e) {
                            return new te.Table("GSUB", [ {
                                name: "version",
                                type: "ULONG",
                                value: 65536
                            }, {
                                name: "scripts",
                                type: "TABLE",
                                value: new te.ScriptList(e.scripts)
                            }, {
                                name: "features",
                                type: "TABLE",
                                value: new te.FeatureList(e.features)
                            }, {
                                name: "lookups",
                                type: "TABLE",
                                value: new te.LookupList(e.lookups, ct)
                            } ]);
                        }
                    }, dt = {
                        parse: function(e, t) {
                            var r = new le.Parser(e, t), i = r.parseULong();
                            k.argument(1 === i, "Unsupported META table version."), r.parseULong(), r.parseULong();
                            for (var n = r.parseULong(), o = {}, s = 0; s < n; s++) {
                                var a = r.parseTag(), h = r.parseULong(), l = r.parseULong(), u = O.UTF8(e, t + h, l);
                                o[a] = u;
                            }
                            return o;
                        },
                        make: function(e) {
                            var t = Object.keys(e).length, r = "", i = 16 + 12 * t, n = new te.Table("meta", [ {
                                name: "version",
                                type: "ULONG",
                                value: 1
                            }, {
                                name: "flags",
                                type: "ULONG",
                                value: 0
                            }, {
                                name: "offset",
                                type: "ULONG",
                                value: i
                            }, {
                                name: "numTags",
                                type: "ULONG",
                                value: t
                            } ]);
                            for (var o in e) {
                                var s = r.length;
                                r += e[o], n.fields.push({
                                    name: "tag " + o,
                                    type: "TAG",
                                    value: o
                                }), n.fields.push({
                                    name: "offset " + o,
                                    type: "ULONG",
                                    value: i + s
                                }), n.fields.push({
                                    name: "length " + o,
                                    type: "ULONG",
                                    value: e[o].length
                                });
                            }
                            return n.fields.push({
                                name: "stringPool",
                                type: "CHARARRAY",
                                value: r
                            }), n;
                        }
                    };
                    function ft(e) {
                        return Math.log(e) / Math.log(2) | 0;
                    }
                    function mt(e) {
                        for (;e.length % 4 != 0; ) e.push(0);
                        for (var t = 0, r = 0; r < e.length; r += 4) t += (e[r] << 24) + (e[r + 1] << 16) + (e[r + 2] << 8) + e[r + 3];
                        return t % Math.pow(2, 32);
                    }
                    function gt(e, t, r, i) {
                        return new te.Record("Table Record", [ {
                            name: "tag",
                            type: "TAG",
                            value: void 0 !== e ? e : ""
                        }, {
                            name: "checkSum",
                            type: "ULONG",
                            value: void 0 !== t ? t : 0
                        }, {
                            name: "offset",
                            type: "ULONG",
                            value: void 0 !== r ? r : 0
                        }, {
                            name: "length",
                            type: "ULONG",
                            value: void 0 !== i ? i : 0
                        } ]);
                    }
                    function vt(e) {
                        var t = new te.Table("sfnt", [ {
                            name: "version",
                            type: "TAG",
                            value: "OTTO"
                        }, {
                            name: "numTables",
                            type: "USHORT",
                            value: 0
                        }, {
                            name: "searchRange",
                            type: "USHORT",
                            value: 0
                        }, {
                            name: "entrySelector",
                            type: "USHORT",
                            value: 0
                        }, {
                            name: "rangeShift",
                            type: "USHORT",
                            value: 0
                        } ]);
                        t.tables = e, t.numTables = e.length;
                        var r = Math.pow(2, ft(t.numTables));
                        t.searchRange = 16 * r, t.entrySelector = ft(r), t.rangeShift = 16 * t.numTables - t.searchRange;
                        for (var i = [], n = [], o = t.sizeOf() + gt().sizeOf() * t.numTables; o % 4 != 0; ) o += 1, 
                        n.push({
                            name: "padding",
                            type: "BYTE",
                            value: 0
                        });
                        for (var s = 0; s < e.length; s += 1) {
                            var a = e[s];
                            k.argument(4 === a.tableName.length, "Table name" + a.tableName + " is invalid.");
                            var h = a.sizeOf(), l = gt(a.tableName, mt(a.encode()), o, h);
                            for (i.push({
                                name: l.tag + " Table Record",
                                type: "RECORD",
                                value: l
                            }), n.push({
                                name: a.tableName + " table",
                                type: "RECORD",
                                value: a
                            }), o += h, k.argument(!isNaN(o), "Something went wrong calculating the offset."); o % 4 != 0; ) o += 1, 
                            n.push({
                                name: "padding",
                                type: "BYTE",
                                value: 0
                            });
                        }
                        return i.sort(function(e, t) {
                            return e.value.tag > t.value.tag ? 1 : -1;
                        }), t.fields = t.fields.concat(i), t.fields = t.fields.concat(n), t;
                    }
                    function yt(e, t, r) {
                        for (var i = 0; i < t.length; i += 1) {
                            var n = e.charToGlyphIndex(t[i]);
                            if (0 < n) return e.glyphs.get(n).getMetrics();
                        }
                        return r;
                    }
                    var bt = function(e) {
                        for (var t, r = [], i = [], n = [], o = [], s = [], a = [], h = [], l = 0, u = 0, c = 0, p = 0, d = 0, f = 0; f < e.glyphs.length; f += 1) {
                            var m = e.glyphs.get(f), g = 0 | m.unicode;
                            if (isNaN(m.advanceWidth)) throw new Error("Glyph " + m.name + " (" + f + "): advanceWidth is not a number.");
                            (g < t || void 0 === t) && 0 < g && (t = g), l < g && (l = g);
                            var v = at.getUnicodeRange(g);
                            if (v < 32) u |= 1 << v; else if (v < 64) c |= 1 << v - 32; else if (v < 96) p |= 1 << v - 64; else {
                                if (!(v < 123)) throw new Error("Unicode ranges bits > 123 are reserved for internal usage");
                                d |= 1 << v - 96;
                            }
                            if (".notdef" !== m.name) {
                                var y = m.getMetrics();
                                r.push(y.xMin), i.push(y.yMin), n.push(y.xMax), o.push(y.yMax), a.push(y.leftSideBearing), 
                                h.push(y.rightSideBearing), s.push(m.advanceWidth);
                            }
                        }
                        var b = {
                            xMin: Math.min.apply(null, r),
                            yMin: Math.min.apply(null, i),
                            xMax: Math.max.apply(null, n),
                            yMax: Math.max.apply(null, o),
                            advanceWidthMax: Math.max.apply(null, s),
                            advanceWidthAvg: function(e) {
                                for (var t = 0, r = 0; r < e.length; r += 1) t += e[r];
                                return t / e.length;
                            }(s),
                            minLeftSideBearing: Math.min.apply(null, a),
                            maxLeftSideBearing: Math.max.apply(null, a),
                            minRightSideBearing: Math.min.apply(null, h)
                        };
                        b.ascender = e.ascender, b.descender = e.descender;
                        var x = je.make({
                            flags: 3,
                            unitsPerEm: e.unitsPerEm,
                            xMin: b.xMin,
                            yMin: b.yMin,
                            xMax: b.xMax,
                            yMax: b.yMax,
                            lowestRecPPEM: 3,
                            createdTimestamp: e.createdTimestamp
                        }), _ = He.make({
                            ascender: b.ascender,
                            descender: b.descender,
                            advanceWidthMax: b.advanceWidthMax,
                            minLeftSideBearing: b.minLeftSideBearing,
                            minRightSideBearing: b.minRightSideBearing,
                            xMaxExtent: b.maxLeftSideBearing + (b.xMax - b.xMin),
                            numberOfHMetrics: e.glyphs.length
                        }), w = qe.make(e.glyphs.length), S = at.make({
                            xAvgCharWidth: Math.round(b.advanceWidthAvg),
                            usWeightClass: e.tables.os2.usWeightClass,
                            usWidthClass: e.tables.os2.usWidthClass,
                            usFirstCharIndex: t,
                            usLastCharIndex: l,
                            ulUnicodeRange1: u,
                            ulUnicodeRange2: c,
                            ulUnicodeRange3: p,
                            ulUnicodeRange4: d,
                            fsSelection: e.tables.os2.fsSelection,
                            sTypoAscender: b.ascender,
                            sTypoDescender: b.descender,
                            sTypoLineGap: 0,
                            usWinAscent: b.yMax,
                            usWinDescent: Math.abs(b.yMin),
                            ulCodePageRange1: 1,
                            sxHeight: yt(e, "xyvw", {
                                yMax: Math.round(b.ascender / 2)
                            }).yMax,
                            sCapHeight: yt(e, "HIKLEFJMNTZBDPRAGOQSUVWXY", b).yMax,
                            usDefaultChar: e.hasChar(" ") ? 32 : 0,
                            usBreakChar: e.hasChar(" ") ? 32 : 0
                        }), T = Ve.make(e.glyphs), E = ue.make(e.glyphs), M = e.getEnglishName("fontFamily"), C = e.getEnglishName("fontSubfamily"), L = M + " " + C, R = e.getEnglishName("postScriptName");
                        R || (R = M.replace(/\s/g, "") + "-" + C);
                        var A = {};
                        for (var D in e.names) A[D] = e.names[D];
                        A.uniqueID || (A.uniqueID = {
                            en: e.getEnglishName("manufacturer") + ":" + L
                        }), A.postScriptName || (A.postScriptName = {
                            en: R
                        }), A.preferredFamily || (A.preferredFamily = e.names.fontFamily), A.preferredSubfamily || (A.preferredSubfamily = e.names.fontSubfamily);
                        var P = [], k = ot.make(A, P), I = 0 < P.length ? We.make(P) : void 0, O = ht.make(), U = ze.make(e.glyphs, {
                            version: e.getEnglishName("version"),
                            fullName: L,
                            familyName: M,
                            weightName: C,
                            postScriptName: R,
                            unitsPerEm: e.unitsPerEm,
                            fontBBox: [ 0, b.yMin, b.ascender, b.advanceWidthMax ]
                        }), N = e.metas && 0 < Object.keys(e.metas).length ? dt.make(e.metas) : void 0, B = [ x, _, w, S, k, E, O, U, T ];
                        I && B.push(I), e.tables.gsub && B.push(pt.make(e.tables.gsub)), N && B.push(N);
                        for (var F = vt(B), G = mt(F.encode()), z = F.fields, j = !1, H = 0; H < z.length; H += 1) if ("head table" === z[H].name) {
                            z[H].value.checkSumAdjustment = 2981146554 - G, j = !0;
                            break;
                        }
                        if (!j) throw new Error("Could not find head table with checkSum to adjust.");
                        return F;
                    };
                    function xt(e, t) {
                        for (var r = 0, i = e.length - 1; r <= i; ) {
                            var n = r + i >>> 1, o = e[n].tag;
                            if (o === t) return n;
                            o < t ? r = n + 1 : i = n - 1;
                        }
                        return -r - 1;
                    }
                    function _t(e, t) {
                        for (var r = 0, i = e.length - 1; r <= i; ) {
                            var n = r + i >>> 1, o = e[n];
                            if (o === t) return n;
                            o < t ? r = n + 1 : i = n - 1;
                        }
                        return -r - 1;
                    }
                    function wt(e, t) {
                        for (var r, i = 0, n = e.length - 1; i <= n; ) {
                            var o = i + n >>> 1, s = (r = e[o]).start;
                            if (s === t) return r;
                            s < t ? i = o + 1 : n = o - 1;
                        }
                        if (0 < i) return t > (r = e[i - 1]).end ? 0 : r;
                    }
                    function St(e, t) {
                        this.font = e, this.tableName = t;
                    }
                    function Tt(e) {
                        St.call(this, e, "gpos");
                    }
                    function Et(e) {
                        St.call(this, e, "gsub");
                    }
                    function Mt(e, t) {
                        var r = e.length;
                        if (r !== t.length) return !1;
                        for (var i = 0; i < r; i++) if (e[i] !== t[i]) return !1;
                        return !0;
                    }
                    function Ct(e, t, r) {
                        for (var i = e.subtables, n = 0; n < i.length; n++) {
                            var o = i[n];
                            if (o.substFormat === t) return o;
                        }
                        if (r) return i.push(r), r;
                    }
                    function Lt(e) {
                        for (var t = new ArrayBuffer(e.length), r = new Uint8Array(t), i = 0; i < e.length; ++i) r[i] = e[i];
                        return t;
                    }
                    function Rt(e, t) {
                        if (!e) throw t;
                    }
                    function At(e, t, r, i, n) {
                        var o;
                        return 0 < (t & i) ? (o = e.parseByte(), 0 == (t & n) && (o = -o), r + o) : 0 < (t & n) ? r : r + e.parseShort();
                    }
                    function Dt(e, t, r) {
                        var i, n, o = new le.Parser(t, r);
                        if (e.numberOfContours = o.parseShort(), e._xMin = o.parseShort(), e._yMin = o.parseShort(), 
                        e._xMax = o.parseShort(), e._yMax = o.parseShort(), 0 < e.numberOfContours) {
                            for (var s = e.endPointIndices = [], a = 0; a < e.numberOfContours; a += 1) s.push(o.parseUShort());
                            e.instructionLength = o.parseUShort(), e.instructions = [];
                            for (var h = 0; h < e.instructionLength; h += 1) e.instructions.push(o.parseByte());
                            var l = s[s.length - 1] + 1;
                            i = [];
                            for (var u = 0; u < l; u += 1) if (n = o.parseByte(), i.push(n), 0 < (8 & n)) for (var c = o.parseByte(), p = 0; p < c; p += 1) i.push(n), 
                            u += 1;
                            if (k.argument(i.length === l, "Bad flags."), 0 < s.length) {
                                var d, f = [];
                                if (0 < l) {
                                    for (var m = 0; m < l; m += 1) n = i[m], (d = {}).onCurve = !!(1 & n), d.lastPointOfContour = 0 <= s.indexOf(m), 
                                    f.push(d);
                                    for (var g = 0, v = 0; v < l; v += 1) n = i[v], (d = f[v]).x = At(o, n, g, 2, 16), 
                                    g = d.x;
                                    for (var y = 0, b = 0; b < l; b += 1) n = i[b], (d = f[b]).y = At(o, n, y, 4, 32), 
                                    y = d.y;
                                }
                                e.points = f;
                            } else e.points = [];
                        } else if (0 === e.numberOfContours) e.points = []; else {
                            e.isComposite = !0, e.points = [], e.components = [];
                            for (var x = !0; x; ) {
                                i = o.parseUShort();
                                var _ = {
                                    glyphIndex: o.parseUShort(),
                                    xScale: 1,
                                    scale01: 0,
                                    scale10: 0,
                                    yScale: 1,
                                    dx: 0,
                                    dy: 0
                                };
                                0 < (1 & i) ? 0 < (2 & i) ? (_.dx = o.parseShort(), _.dy = o.parseShort()) : _.matchedPoints = [ o.parseUShort(), o.parseUShort() ] : 0 < (2 & i) ? (_.dx = o.parseChar(), 
                                _.dy = o.parseChar()) : _.matchedPoints = [ o.parseByte(), o.parseByte() ], 0 < (8 & i) ? _.xScale = _.yScale = o.parseF2Dot14() : 0 < (64 & i) ? (_.xScale = o.parseF2Dot14(), 
                                _.yScale = o.parseF2Dot14()) : 0 < (128 & i) && (_.xScale = o.parseF2Dot14(), _.scale01 = o.parseF2Dot14(), 
                                _.scale10 = o.parseF2Dot14(), _.yScale = o.parseF2Dot14()), e.components.push(_), 
                                x = !!(32 & i);
                            }
                            if (256 & i) {
                                e.instructionLength = o.parseUShort(), e.instructions = [];
                                for (var w = 0; w < e.instructionLength; w += 1) e.instructions.push(o.parseByte());
                            }
                        }
                    }
                    function Pt(e, t) {
                        for (var r = [], i = 0; i < e.length; i += 1) {
                            var n = e[i], o = {
                                x: t.xScale * n.x + t.scale01 * n.y + t.dx,
                                y: t.scale10 * n.x + t.yScale * n.y + t.dy,
                                onCurve: n.onCurve,
                                lastPointOfContour: n.lastPointOfContour
                            };
                            r.push(o);
                        }
                        return r;
                    }
                    function kt(e) {
                        var t = new A();
                        if (!e) return t;
                        for (var r = function(e) {
                            for (var t = [], r = [], i = 0; i < e.length; i += 1) {
                                var n = e[i];
                                r.push(n), n.lastPointOfContour && (t.push(r), r = []);
                            }
                            return k.argument(0 === r.length, "There are still points left in the current contour."), 
                            t;
                        }(e), i = 0; i < r.length; ++i) {
                            var n = r[i], o = null, s = n[n.length - 1], a = n[0];
                            if (s.onCurve) t.moveTo(s.x, s.y); else if (a.onCurve) t.moveTo(a.x, a.y); else {
                                var h = {
                                    x: .5 * (s.x + a.x),
                                    y: .5 * (s.y + a.y)
                                };
                                t.moveTo(h.x, h.y);
                            }
                            for (var l = 0; l < n.length; ++l) if (o = s, s = a, a = n[(l + 1) % n.length], 
                            s.onCurve) t.lineTo(s.x, s.y); else {
                                var u = a;
                                o.onCurve || (s.x, o.x, s.y, o.y), a.onCurve || (u = {
                                    x: .5 * (s.x + a.x),
                                    y: .5 * (s.y + a.y)
                                }), t.quadraticCurveTo(s.x, s.y, u.x, u.y);
                            }
                            t.closePath();
                        }
                        return t;
                    }
                    function It(e, t) {
                        if (t.isComposite) for (var r = 0; r < t.components.length; r += 1) {
                            var i = t.components[r], n = e.get(i.glyphIndex);
                            if (n.getPath(), n.points) {
                                var o = void 0;
                                if (void 0 === i.matchedPoints) o = Pt(n.points, i); else {
                                    if (i.matchedPoints[0] > t.points.length - 1 || i.matchedPoints[1] > n.points.length - 1) throw Error("Matched points out of range in " + t.name);
                                    var s = t.points[i.matchedPoints[0]], a = n.points[i.matchedPoints[1]], h = {
                                        xScale: i.xScale,
                                        scale01: i.scale01,
                                        scale10: i.scale10,
                                        yScale: i.yScale,
                                        dx: 0,
                                        dy: 0
                                    };
                                    a = Pt([ a ], h)[0], h.dx = s.x - a.x, h.dy = s.y - a.y, o = Pt(n.points, h);
                                }
                                t.points = t.points.concat(o);
                            }
                        }
                        return kt(t.points);
                    }
                    (Tt.prototype = St.prototype = {
                        searchTag: xt,
                        binSearch: _t,
                        getTable: function(e) {
                            var t = this.font.tables[this.tableName];
                            return !t && e && (t = this.font.tables[this.tableName] = this.createDefaultTable()), 
                            t;
                        },
                        getScriptNames: function() {
                            var e = this.getTable();
                            return e ? e.scripts.map(function(e) {
                                return e.tag;
                            }) : [];
                        },
                        getDefaultScriptName: function() {
                            var e = this.getTable();
                            if (e) {
                                for (var t = !1, r = 0; r < e.scripts.length; r++) {
                                    var i = e.scripts[r].tag;
                                    if ("DFLT" === i) return i;
                                    "latn" === i && (t = !0);
                                }
                                return t ? "latn" : void 0;
                            }
                        },
                        getScriptTable: function(e, t) {
                            var r = this.getTable(t);
                            if (r) {
                                e = e || "DFLT";
                                var i = r.scripts, n = xt(r.scripts, e);
                                if (0 <= n) return i[n].script;
                                if (t) {
                                    var o = {
                                        tag: e,
                                        script: {
                                            defaultLangSys: {
                                                reserved: 0,
                                                reqFeatureIndex: 65535,
                                                featureIndexes: []
                                            },
                                            langSysRecords: []
                                        }
                                    };
                                    return i.splice(-1 - n, 0, o), o.script;
                                }
                            }
                        },
                        getLangSysTable: function(e, t, r) {
                            var i = this.getScriptTable(e, r);
                            if (i) {
                                if (!t || "dflt" === t || "DFLT" === t) return i.defaultLangSys;
                                var n = xt(i.langSysRecords, t);
                                if (0 <= n) return i.langSysRecords[n].langSys;
                                if (r) {
                                    var o = {
                                        tag: t,
                                        langSys: {
                                            reserved: 0,
                                            reqFeatureIndex: 65535,
                                            featureIndexes: []
                                        }
                                    };
                                    return i.langSysRecords.splice(-1 - n, 0, o), o.langSys;
                                }
                            }
                        },
                        getFeatureTable: function(e, t, r, i) {
                            var n = this.getLangSysTable(e, t, i);
                            if (n) {
                                for (var o, s = n.featureIndexes, a = this.font.tables[this.tableName].features, h = 0; h < s.length; h++) if ((o = a[s[h]]).tag === r) return o.feature;
                                if (i) {
                                    var l = a.length;
                                    return k.assert(0 === l || r >= a[l - 1].tag, "Features must be added in alphabetical order."), 
                                    o = {
                                        tag: r,
                                        feature: {
                                            params: 0,
                                            lookupListIndexes: []
                                        }
                                    }, a.push(o), s.push(l), o.feature;
                                }
                            }
                        },
                        getLookupTables: function(e, t, r, i, n) {
                            var o = this.getFeatureTable(e, t, r, n), s = [];
                            if (o) {
                                for (var a, h = o.lookupListIndexes, l = this.font.tables[this.tableName].lookups, u = 0; u < h.length; u++) (a = l[h[u]]).lookupType === i && s.push(a);
                                if (0 === s.length && n) {
                                    a = {
                                        lookupType: i,
                                        lookupFlag: 0,
                                        subtables: [],
                                        markFilteringSet: void 0
                                    };
                                    var c = l.length;
                                    return l.push(a), h.push(c), [ a ];
                                }
                            }
                            return s;
                        },
                        getGlyphClass: function(e, t) {
                            switch (e.format) {
                              case 1:
                                return e.startGlyph <= t && t < e.startGlyph + e.classes.length ? e.classes[t - e.startGlyph] : 0;

                              case 2:
                                var r = wt(e.ranges, t);
                                return r ? r.classId : 0;
                            }
                        },
                        getCoverageIndex: function(e, t) {
                            switch (e.format) {
                              case 1:
                                var r = _t(e.glyphs, t);
                                return 0 <= r ? r : -1;

                              case 2:
                                var i = wt(e.ranges, t);
                                return i ? i.index + t - i.start : -1;
                            }
                        },
                        expandCoverage: function(e) {
                            if (1 === e.format) return e.glyphs;
                            for (var t = [], r = e.ranges, i = 0; i < r.length; i++) for (var n = r[i], o = n.start, s = n.end, a = o; a <= s; a++) t.push(a);
                            return t;
                        }
                    }).init = function() {
                        var e = this.getDefaultScriptName();
                        this.defaultKerningTables = this.getKerningTables(e);
                    }, Tt.prototype.getKerningValue = function(e, t, r) {
                        for (var i = 0; i < e.length; i++) for (var n = e[i].subtables, o = 0; o < n.length; o++) {
                            var s = n[o], a = this.getCoverageIndex(s.coverage, t);
                            if (!(a < 0)) switch (s.posFormat) {
                              case 1:
                                for (var h = s.pairSets[a], l = 0; l < h.length; l++) {
                                    var u = h[l];
                                    if (u.secondGlyph === r) return u.value1 && u.value1.xAdvance || 0;
                                }
                                break;

                              case 2:
                                var c = this.getGlyphClass(s.classDef1, t), p = this.getGlyphClass(s.classDef2, r), d = s.classRecords[c][p];
                                return d.value1 && d.value1.xAdvance || 0;
                            }
                        }
                        return 0;
                    }, Tt.prototype.getKerningTables = function(e, t) {
                        if (this.font.tables.gpos) return this.getLookupTables(e, t, "kern", 2);
                    }, (Et.prototype = St.prototype).createDefaultTable = function() {
                        return {
                            version: 1,
                            scripts: [ {
                                tag: "DFLT",
                                script: {
                                    defaultLangSys: {
                                        reserved: 0,
                                        reqFeatureIndex: 65535,
                                        featureIndexes: []
                                    },
                                    langSysRecords: []
                                }
                            } ],
                            features: [],
                            lookups: []
                        };
                    }, Et.prototype.getSingle = function(e, t, r) {
                        for (var i = [], n = this.getLookupTables(t, r, e, 1), o = 0; o < n.length; o++) for (var s = n[o].subtables, a = 0; a < s.length; a++) {
                            var h = s[a], l = this.expandCoverage(h.coverage), u = void 0;
                            if (1 === h.substFormat) {
                                var c = h.deltaGlyphId;
                                for (u = 0; u < l.length; u++) {
                                    var p = l[u];
                                    i.push({
                                        sub: p,
                                        by: p + c
                                    });
                                }
                            } else {
                                var d = h.substitute;
                                for (u = 0; u < l.length; u++) i.push({
                                    sub: l[u],
                                    by: d[u]
                                });
                            }
                        }
                        return i;
                    }, Et.prototype.getAlternates = function(e, t, r) {
                        for (var i = [], n = this.getLookupTables(t, r, e, 3), o = 0; o < n.length; o++) for (var s = n[o].subtables, a = 0; a < s.length; a++) for (var h = s[a], l = this.expandCoverage(h.coverage), u = h.alternateSets, c = 0; c < l.length; c++) i.push({
                            sub: l[c],
                            by: u[c]
                        });
                        return i;
                    }, Et.prototype.getLigatures = function(e, t, r) {
                        for (var i = [], n = this.getLookupTables(t, r, e, 4), o = 0; o < n.length; o++) for (var s = n[o].subtables, a = 0; a < s.length; a++) for (var h = s[a], l = this.expandCoverage(h.coverage), u = h.ligatureSets, c = 0; c < l.length; c++) for (var p = l[c], d = u[c], f = 0; f < d.length; f++) {
                            var m = d[f];
                            i.push({
                                sub: [ p ].concat(m.components),
                                by: m.ligGlyph
                            });
                        }
                        return i;
                    }, Et.prototype.addSingle = function(e, t, r, i) {
                        var n = Ct(this.getLookupTables(r, i, e, 1, !0)[0], 2, {
                            substFormat: 2,
                            coverage: {
                                format: 1,
                                glyphs: []
                            },
                            substitute: []
                        });
                        k.assert(1 === n.coverage.format, "Ligature: unable to modify coverage table format " + n.coverage.format);
                        var o = t.sub, s = this.binSearch(n.coverage.glyphs, o);
                        s < 0 && (s = -1 - s, n.coverage.glyphs.splice(s, 0, o), n.substitute.splice(s, 0, 0)), 
                        n.substitute[s] = t.by;
                    }, Et.prototype.addAlternate = function(e, t, r, i) {
                        var n = Ct(this.getLookupTables(r, i, e, 3, !0)[0], 1, {
                            substFormat: 1,
                            coverage: {
                                format: 1,
                                glyphs: []
                            },
                            alternateSets: []
                        });
                        k.assert(1 === n.coverage.format, "Ligature: unable to modify coverage table format " + n.coverage.format);
                        var o = t.sub, s = this.binSearch(n.coverage.glyphs, o);
                        s < 0 && (s = -1 - s, n.coverage.glyphs.splice(s, 0, o), n.alternateSets.splice(s, 0, 0)), 
                        n.alternateSets[s] = t.by;
                    }, Et.prototype.addLigature = function(e, t, r, i) {
                        var n = this.getLookupTables(r, i, e, 4, !0)[0], o = n.subtables[0];
                        o || (o = {
                            substFormat: 1,
                            coverage: {
                                format: 1,
                                glyphs: []
                            },
                            ligatureSets: []
                        }, n.subtables[0] = o), k.assert(1 === o.coverage.format, "Ligature: unable to modify coverage table format " + o.coverage.format);
                        var s = t.sub[0], a = t.sub.slice(1), h = {
                            ligGlyph: t.by,
                            components: a
                        }, l = this.binSearch(o.coverage.glyphs, s);
                        if (0 <= l) {
                            for (var u = o.ligatureSets[l], c = 0; c < u.length; c++) if (Mt(u[c].components, a)) return;
                            u.push(h);
                        } else l = -1 - l, o.coverage.glyphs.splice(l, 0, s), o.ligatureSets.splice(l, 0, [ h ]);
                    }, Et.prototype.getFeature = function(e, t, r) {
                        if (/ss\d\d/.test(e)) return this.getSingle(e, t, r);
                        switch (e) {
                          case "aalt":
                          case "salt":
                            return this.getSingle(e, t, r).concat(this.getAlternates(e, t, r));

                          case "dlig":
                          case "liga":
                          case "rlig":
                            return this.getLigatures(e, t, r);
                        }
                    }, Et.prototype.add = function(e, t, r, i) {
                        if (/ss\d\d/.test(e)) return this.addSingle(e, t, r, i);
                        switch (e) {
                          case "aalt":
                          case "salt":
                            return "number" == typeof t.by ? this.addSingle(e, t, r, i) : this.addAlternate(e, t, r, i);

                          case "dlig":
                          case "liga":
                          case "rlig":
                            return this.addLigature(e, t, r, i);
                        }
                    };
                    var Ot, Ut, Nt, Bt, Ft = {
                        getPath: kt,
                        parse: function(e, t, r, i) {
                            for (var n = new Se.GlyphSet(i), o = 0; o < r.length - 1; o += 1) {
                                var s = r[o];
                                s !== r[o + 1] ? n.push(o, Se.ttfGlyphLoader(i, o, Dt, e, t + s, It)) : n.push(o, Se.glyphLoader(i, o));
                            }
                            return n;
                        }
                    };
                    function Gt(e) {
                        this.font = e, this.getCommands = function(e) {
                            return Ft.getPath(e).commands;
                        }, this._fpgmState = this._prepState = void 0, this._errorState = 0;
                    }
                    function zt(e) {
                        return e;
                    }
                    function jt(e) {
                        return Math.sign(e) * Math.round(Math.abs(e));
                    }
                    function Ht(e) {
                        return Math.sign(e) * Math.round(Math.abs(2 * e)) / 2;
                    }
                    function Vt(e) {
                        return Math.sign(e) * (Math.round(Math.abs(e) + .5) - .5);
                    }
                    function Wt(e) {
                        return Math.sign(e) * Math.ceil(Math.abs(e));
                    }
                    function qt(e) {
                        return Math.sign(e) * Math.floor(Math.abs(e));
                    }
                    var Xt = function(e) {
                        var t = this.srPeriod, r = this.srPhase, i = 1;
                        return e < 0 && (e = -e, i = -1), e += this.srThreshold - r, e = Math.trunc(e / t) * t, 
                        (e += r) < 0 ? r * i : e * i;
                    }, Yt = {
                        x: 1,
                        y: 0,
                        axis: "x",
                        distance: function(e, t, r, i) {
                            return (r ? e.xo : e.x) - (i ? t.xo : t.x);
                        },
                        interpolate: function(e, t, r, i) {
                            var n, o, s, a, h, l, u;
                            if (!i || i === this) return n = e.xo - t.xo, o = e.xo - r.xo, h = t.x - t.xo, l = r.x - r.xo, 
                            0 === (u = (s = Math.abs(n)) + (a = Math.abs(o))) ? void (e.x = e.xo + (h + l) / 2) : void (e.x = e.xo + (h * a + l * s) / u);
                            n = i.distance(e, t, !0, !0), o = i.distance(e, r, !0, !0), h = i.distance(t, t, !1, !0), 
                            l = i.distance(r, r, !1, !0), 0 !== (u = (s = Math.abs(n)) + (a = Math.abs(o))) ? Yt.setRelative(e, e, (h * a + l * s) / u, i, !0) : Yt.setRelative(e, e, (h + l) / 2, i, !0);
                        },
                        normalSlope: Number.NEGATIVE_INFINITY,
                        setRelative: function(e, t, r, i, n) {
                            if (i && i !== this) {
                                var o = n ? t.xo : t.x, s = n ? t.yo : t.y, a = o + r * i.x, h = s + r * i.y;
                                e.x = a + (e.y - h) / i.normalSlope;
                            } else e.x = (n ? t.xo : t.x) + r;
                        },
                        slope: 0,
                        touch: function(e) {
                            e.xTouched = !0;
                        },
                        touched: function(e) {
                            return e.xTouched;
                        },
                        untouch: function(e) {
                            e.xTouched = !1;
                        }
                    }, Zt = {
                        x: 0,
                        y: 1,
                        axis: "y",
                        distance: function(e, t, r, i) {
                            return (r ? e.yo : e.y) - (i ? t.yo : t.y);
                        },
                        interpolate: function(e, t, r, i) {
                            var n, o, s, a, h, l, u;
                            if (!i || i === this) return n = e.yo - t.yo, o = e.yo - r.yo, h = t.y - t.yo, l = r.y - r.yo, 
                            0 === (u = (s = Math.abs(n)) + (a = Math.abs(o))) ? void (e.y = e.yo + (h + l) / 2) : void (e.y = e.yo + (h * a + l * s) / u);
                            n = i.distance(e, t, !0, !0), o = i.distance(e, r, !0, !0), h = i.distance(t, t, !1, !0), 
                            l = i.distance(r, r, !1, !0), 0 !== (u = (s = Math.abs(n)) + (a = Math.abs(o))) ? Zt.setRelative(e, e, (h * a + l * s) / u, i, !0) : Zt.setRelative(e, e, (h + l) / 2, i, !0);
                        },
                        normalSlope: 0,
                        setRelative: function(e, t, r, i, n) {
                            if (i && i !== this) {
                                var o = n ? t.xo : t.x, s = n ? t.yo : t.y, a = o + r * i.x, h = s + r * i.y;
                                e.y = h + i.normalSlope * (e.x - a);
                            } else e.y = (n ? t.yo : t.y) + r;
                        },
                        slope: Number.POSITIVE_INFINITY,
                        touch: function(e) {
                            e.yTouched = !0;
                        },
                        touched: function(e) {
                            return e.yTouched;
                        },
                        untouch: function(e) {
                            e.yTouched = !1;
                        }
                    };
                    function Qt(e, t) {
                        this.x = e, this.y = t, this.axis = void 0, this.slope = t / e, this.normalSlope = -e / t, 
                        Object.freeze(this);
                    }
                    function Kt(e, t) {
                        var r = Math.sqrt(e * e + t * t);
                        return t /= r, 1 == (e /= r) && 0 === t ? Yt : 0 === e && 1 === t ? Zt : new Qt(e, t);
                    }
                    function $t(e, t, r, i) {
                        this.x = this.xo = Math.round(64 * e) / 64, this.y = this.yo = Math.round(64 * t) / 64, 
                        this.lastPointOfContour = r, this.onCurve = i, this.prevPointOnContour = void 0, 
                        this.nextPointOnContour = void 0, this.xTouched = !1, this.yTouched = !1, Object.preventExtensions(this);
                    }
                    Object.freeze(Yt), Object.freeze(Zt), Qt.prototype.distance = function(e, t, r, i) {
                        return this.x * Yt.distance(e, t, r, i) + this.y * Zt.distance(e, t, r, i);
                    }, Qt.prototype.interpolate = function(e, t, r, i) {
                        var n, o, s, a, h, l, u;
                        s = i.distance(e, t, !0, !0), a = i.distance(e, r, !0, !0), n = i.distance(t, t, !1, !0), 
                        o = i.distance(r, r, !1, !0), 0 !== (u = (h = Math.abs(s)) + (l = Math.abs(a))) ? this.setRelative(e, e, (n * l + o * h) / u, i, !0) : this.setRelative(e, e, (n + o) / 2, i, !0);
                    }, Qt.prototype.setRelative = function(e, t, r, i, n) {
                        i = i || this;
                        var o = n ? t.xo : t.x, s = n ? t.yo : t.y, a = o + r * i.x, h = s + r * i.y, l = i.normalSlope, u = this.slope, c = e.x, p = e.y;
                        e.x = (u * c - l * a + h - p) / (u - l), e.y = u * (e.x - c) + p;
                    }, Qt.prototype.touch = function(e) {
                        e.xTouched = !0, e.yTouched = !0;
                    }, $t.prototype.nextTouched = function(e) {
                        for (var t = this.nextPointOnContour; !e.touched(t) && t !== this; ) t = t.nextPointOnContour;
                        return t;
                    }, $t.prototype.prevTouched = function(e) {
                        for (var t = this.prevPointOnContour; !e.touched(t) && t !== this; ) t = t.prevPointOnContour;
                        return t;
                    };
                    var Jt = Object.freeze(new $t(0, 0)), er = {
                        cvCutIn: 17 / 16,
                        deltaBase: 9,
                        deltaShift: .125,
                        loop: 1,
                        minDis: 1,
                        autoFlip: !0
                    };
                    function tr(e, t) {
                        switch (this.env = e, this.stack = [], this.prog = t, e) {
                          case "glyf":
                            this.zp0 = this.zp1 = this.zp2 = 1, this.rp0 = this.rp1 = this.rp2 = 0;

                          case "prep":
                            this.fv = this.pv = this.dpv = Yt, this.round = jt;
                        }
                    }
                    function rr(e) {
                        for (var t = e.tZone = new Array(e.gZone.length), r = 0; r < t.length; r++) t[r] = new $t(0, 0);
                    }
                    function ir(e, t) {
                        var r, i = e.prog, n = e.ip, o = 1;
                        do {
                            if (88 === (r = i[++n])) o++; else if (89 === r) o--; else if (64 === r) n += i[n + 1] + 1; else if (65 === r) n += 2 * i[n + 1] + 1; else if (176 <= r && r <= 183) n += r - 176 + 1; else if (184 <= r && r <= 191) n += 2 * (r - 184 + 1); else if (t && 1 === o && 27 === r) break;
                        } while (0 < o);
                        e.ip = n;
                    }
                    function nr(e, r) {
                        t.DEBUG && console.log(r.step, "SVTCA[" + e.axis + "]"), r.fv = r.pv = r.dpv = e;
                    }
                    function or(e, r) {
                        t.DEBUG && console.log(r.step, "SPVTCA[" + e.axis + "]"), r.pv = r.dpv = e;
                    }
                    function sr(e, r) {
                        t.DEBUG && console.log(r.step, "SFVTCA[" + e.axis + "]"), r.fv = e;
                    }
                    function ar(e, r) {
                        var i, n, o = r.stack, s = o.pop(), a = o.pop(), h = r.z2[s], l = r.z1[a];
                        t.DEBUG && console.log("SPVTL[" + e + "]", s, a), n = e ? (i = h.y - l.y, l.x - h.x) : (i = l.x - h.x, 
                        l.y - h.y), r.pv = r.dpv = Kt(i, n);
                    }
                    function hr(e, r) {
                        var i, n, o = r.stack, s = o.pop(), a = o.pop(), h = r.z2[s], l = r.z1[a];
                        t.DEBUG && console.log("SFVTL[" + e + "]", s, a), n = e ? (i = h.y - l.y, l.x - h.x) : (i = l.x - h.x, 
                        l.y - h.y), r.fv = Kt(i, n);
                    }
                    function lr(e) {
                        t.DEBUG && console.log(e.step, "POP[]"), e.stack.pop();
                    }
                    function ur(e, r) {
                        var i = r.stack.pop(), n = r.z0[i], o = r.fv, s = r.pv;
                        t.DEBUG && console.log(r.step, "MDAP[" + e + "]", i);
                        var a = s.distance(n, Jt);
                        e && (a = r.round(a)), o.setRelative(n, Jt, a, s), o.touch(n), r.rp0 = r.rp1 = i;
                    }
                    function cr(e, r) {
                        var i, n, o, s = r.z2, a = s.length - 2;
                        t.DEBUG && console.log(r.step, "IUP[" + e.axis + "]");
                        for (var h = 0; h < a; h++) i = s[h], e.touched(i) || (n = i.prevTouched(e)) !== i && (n === (o = i.nextTouched(e)) && e.setRelative(i, i, e.distance(n, n, !1, !0), e, !0), 
                        e.interpolate(i, n, o, e));
                    }
                    function pr(e, r) {
                        for (var i = r.stack, n = e ? r.rp1 : r.rp2, o = (e ? r.z0 : r.z1)[n], s = r.fv, a = r.pv, h = r.loop, l = r.z2; h--; ) {
                            var u = i.pop(), c = l[u], p = a.distance(o, o, !1, !0);
                            s.setRelative(c, c, p, a), s.touch(c), t.DEBUG && console.log(r.step, (1 < r.loop ? "loop " + (r.loop - h) + ": " : "") + "SHP[" + (e ? "rp1" : "rp2") + "]", u);
                        }
                        r.loop = 1;
                    }
                    function dr(e, r) {
                        var i = r.stack, n = e ? r.rp1 : r.rp2, o = (e ? r.z0 : r.z1)[n], s = r.fv, a = r.pv, h = i.pop(), l = r.z2[r.contours[h]], u = l;
                        t.DEBUG && console.log(r.step, "SHC[" + e + "]", h);
                        for (var c = a.distance(o, o, !1, !0); u !== o && s.setRelative(u, u, c, a), (u = u.nextPointOnContour) !== l; ) ;
                    }
                    function fr(e, r) {
                        var i, n, o = r.stack, s = e ? r.rp1 : r.rp2, a = (e ? r.z0 : r.z1)[s], h = r.fv, l = r.pv, u = o.pop();
                        switch (t.DEBUG && console.log(r.step, "SHZ[" + e + "]", u), u) {
                          case 0:
                            i = r.tZone;
                            break;

                          case 1:
                            i = r.gZone;
                            break;

                          default:
                            throw new Error("Invalid zone");
                        }
                        for (var c = l.distance(a, a, !1, !0), p = i.length - 2, d = 0; d < p; d++) n = i[d], 
                        h.setRelative(n, n, c, l);
                    }
                    function mr(e, r) {
                        var i = r.stack, n = i.pop() / 64, o = i.pop(), s = r.z1[o], a = r.z0[r.rp0], h = r.fv, l = r.pv;
                        h.setRelative(s, a, n, l), h.touch(s), t.DEBUG && console.log(r.step, "MSIRP[" + e + "]", n, o), 
                        r.rp1 = r.rp0, r.rp2 = o, e && (r.rp0 = o);
                    }
                    function gr(e, r) {
                        var i = r.stack, n = i.pop(), o = i.pop(), s = r.z0[o], a = r.fv, h = r.pv, l = r.cvt[n];
                        t.DEBUG && console.log(r.step, "MIAP[" + e + "]", n, "(", l, ")", o);
                        var u = h.distance(s, Jt);
                        e && (Math.abs(u - l) < r.cvCutIn && (u = l), u = r.round(u)), a.setRelative(s, Jt, u, h), 
                        0 === r.zp0 && (s.xo = s.x, s.yo = s.y), a.touch(s), r.rp0 = r.rp1 = o;
                    }
                    function vr(e, r) {
                        var i = r.stack, n = i.pop(), o = r.z2[n];
                        t.DEBUG && console.log(r.step, "GC[" + e + "]", n), i.push(64 * r.dpv.distance(o, Jt, e, !1));
                    }
                    function yr(e, r) {
                        var i = r.stack, n = i.pop(), o = i.pop(), s = r.z1[n], a = r.z0[o], h = r.dpv.distance(a, s, e, e);
                        t.DEBUG && console.log(r.step, "MD[" + e + "]", n, o, "->", h), r.stack.push(Math.round(64 * h));
                    }
                    function br(e, r) {
                        var i = r.stack, n = i.pop(), o = r.fv, s = r.pv, a = r.ppem, h = r.deltaBase + 16 * (e - 1), l = r.deltaShift, u = r.z0;
                        t.DEBUG && console.log(r.step, "DELTAP[" + e + "]", n, i);
                        for (var c = 0; c < n; c++) {
                            var p = i.pop(), d = i.pop();
                            if (h + ((240 & d) >> 4) === a) {
                                var f = (15 & d) - 8;
                                0 <= f && f++, t.DEBUG && console.log(r.step, "DELTAPFIX", p, "by", f * l);
                                var m = u[p];
                                o.setRelative(m, m, f * l, s);
                            }
                        }
                    }
                    function xr(e, r) {
                        var i = r.stack, n = i.pop();
                        t.DEBUG && console.log(r.step, "ROUND[]"), i.push(64 * r.round(n / 64));
                    }
                    function _r(e, r) {
                        var i = r.stack, n = i.pop(), o = r.ppem, s = r.deltaBase + 16 * (e - 1), a = r.deltaShift;
                        t.DEBUG && console.log(r.step, "DELTAC[" + e + "]", n, i);
                        for (var h = 0; h < n; h++) {
                            var l = i.pop(), u = i.pop();
                            if (s + ((240 & u) >> 4) === o) {
                                var c = (15 & u) - 8;
                                0 <= c && c++;
                                var p = c * a;
                                t.DEBUG && console.log(r.step, "DELTACFIX", l, "by", p), r.cvt[l] += p;
                            }
                        }
                    }
                    function wr(e, r) {
                        var i, n, o = r.stack, s = o.pop(), a = o.pop(), h = r.z2[s], l = r.z1[a];
                        t.DEBUG && console.log(r.step, "SDPVTL[" + e + "]", s, a), n = e ? (i = h.y - l.y, 
                        l.x - h.x) : (i = l.x - h.x, l.y - h.y), r.dpv = Kt(i, n);
                    }
                    function Sr(e, r) {
                        var i = r.stack, n = r.prog, o = r.ip;
                        t.DEBUG && console.log(r.step, "PUSHB[" + e + "]");
                        for (var s = 0; s < e; s++) i.push(n[++o]);
                        r.ip = o;
                    }
                    function Tr(e, r) {
                        var i = r.ip, n = r.prog, o = r.stack;
                        t.DEBUG && console.log(r.ip, "PUSHW[" + e + "]");
                        for (var s = 0; s < e; s++) {
                            var a = n[++i] << 8 | n[++i];
                            32768 & a && (a = -(1 + (65535 ^ a))), o.push(a);
                        }
                        r.ip = i;
                    }
                    function Er(e, r, i, n, o, s) {
                        var a, h, l, u, c = s.stack, p = e && c.pop(), d = c.pop(), f = s.rp0, m = s.z0[f], g = s.z1[d], v = s.minDis, y = s.fv, b = s.dpv;
                        l = 0 <= (h = a = b.distance(g, m, !0, !0)) ? 1 : -1, h = Math.abs(h), e && (u = s.cvt[p], 
                        n && Math.abs(h - u) < s.cvCutIn && (h = u)), i && h < v && (h = v), n && (h = s.round(h)), 
                        y.setRelative(g, m, l * h, b), y.touch(g), t.DEBUG && console.log(s.step, (e ? "MIRP[" : "MDRP[") + (r ? "M" : "m") + (i ? ">" : "_") + (n ? "R" : "_") + (0 === o ? "Gr" : 1 === o ? "Bl" : 2 === o ? "Wh" : "") + "]", e ? p + "(" + s.cvt[p] + "," + u + ")" : "", d, "(d =", a, "->", l * h, ")"), 
                        s.rp1 = s.rp0, s.rp2 = d, r && (s.rp0 = d);
                    }
                    Gt.prototype.exec = function(e, r) {
                        if ("number" != typeof r) throw new Error("Point size is not a number!");
                        if (!(2 < this._errorState)) {
                            var i = this.font, n = this._prepState;
                            if (!n || n.ppem !== r) {
                                var o = this._fpgmState;
                                if (!o) {
                                    tr.prototype = er, (o = this._fpgmState = new tr("fpgm", i.tables.fpgm)).funcs = [], 
                                    o.font = i, t.DEBUG && (console.log("---EXEC FPGM---"), o.step = -1);
                                    try {
                                        Ut(o);
                                    } catch (e) {
                                        return console.log("Hinting error in FPGM:" + e), void (this._errorState = 3);
                                    }
                                }
                                tr.prototype = o, (n = this._prepState = new tr("prep", i.tables.prep)).ppem = r;
                                var s = i.tables.cvt;
                                if (s) for (var a = n.cvt = new Array(s.length), h = r / i.unitsPerEm, l = 0; l < s.length; l++) a[l] = s[l] * h; else n.cvt = [];
                                t.DEBUG && (console.log("---EXEC PREP---"), n.step = -1);
                                try {
                                    Ut(n);
                                } catch (e) {
                                    this._errorState < 2 && console.log("Hinting error in PREP:" + e), this._errorState = 2;
                                }
                            }
                            if (!(1 < this._errorState)) try {
                                return Nt(e, n);
                            } catch (e) {
                                return this._errorState < 1 && (console.log("Hinting error:" + e), console.log("Note: further hinting errors are silenced")), 
                                void (this._errorState = 1);
                            }
                        }
                    }, Nt = function(e, r) {
                        var i, n, o, s = r.ppem / r.font.unitsPerEm, a = s, h = e.components;
                        if (tr.prototype = r, h) {
                            var l = r.font;
                            n = [], i = [];
                            for (var u = 0; u < h.length; u++) {
                                var c = h[u], p = l.glyphs.get(c.glyphIndex);
                                o = new tr("glyf", p.instructions), t.DEBUG && (console.log("---EXEC COMP " + u + "---"), 
                                o.step = -1), Bt(p, o, s, a);
                                for (var d = Math.round(c.dx * s), f = Math.round(c.dy * a), m = o.gZone, g = o.contours, v = 0; v < m.length; v++) {
                                    var y = m[v];
                                    y.xTouched = y.yTouched = !1, y.xo = y.x = y.x + d, y.yo = y.y = y.y + f;
                                }
                                var b = n.length;
                                n.push.apply(n, m);
                                for (var x = 0; x < g.length; x++) i.push(g[x] + b);
                            }
                            e.instructions && !o.inhibitGridFit && ((o = new tr("glyf", e.instructions)).gZone = o.z0 = o.z1 = o.z2 = n, 
                            o.contours = i, n.push(new $t(0, 0), new $t(Math.round(e.advanceWidth * s), 0)), 
                            t.DEBUG && (console.log("---EXEC COMPOSITE---"), o.step = -1), Ut(o), n.length -= 2);
                        } else o = new tr("glyf", e.instructions), t.DEBUG && (console.log("---EXEC GLYPH---"), 
                        o.step = -1), Bt(e, o, s, a), n = o.gZone;
                        return n;
                    }, Bt = function(e, r, i, n) {
                        for (var o, s, a, h = e.points || [], l = h.length, u = r.gZone = r.z0 = r.z1 = r.z2 = [], c = r.contours = [], p = 0; p < l; p++) o = h[p], 
                        u[p] = new $t(o.x * i, o.y * n, o.lastPointOfContour, o.onCurve);
                        for (var d = 0; d < l; d++) o = u[d], s || (s = o, c.push(d)), o.lastPointOfContour ? ((o.nextPointOnContour = s).prevPointOnContour = o, 
                        s = void 0) : (a = u[d + 1], (o.nextPointOnContour = a).prevPointOnContour = o);
                        if (!r.inhibitGridFit) {
                            if (t.DEBUG) {
                                console.log("PROCESSING GLYPH", r.stack);
                                for (var f = 0; f < l; f++) console.log(f, u[f].x, u[f].y);
                            }
                            if (u.push(new $t(0, 0), new $t(Math.round(e.advanceWidth * i), 0)), Ut(r), u.length -= 2, 
                            t.DEBUG) {
                                console.log("FINISHED GLYPH", r.stack);
                                for (var m = 0; m < l; m++) console.log(m, u[m].x, u[m].y);
                            }
                        }
                    }, Ut = function(e) {
                        var r = e.prog;
                        if (r) {
                            var i, n = r.length;
                            for (e.ip = 0; e.ip < n; e.ip++) {
                                if (t.DEBUG && e.step++, !(i = Ot[r[e.ip]])) throw new Error("unknown instruction: 0x" + Number(r[e.ip]).toString(16));
                                i(e);
                            }
                        }
                    }, Ot = [ nr.bind(void 0, Zt), nr.bind(void 0, Yt), or.bind(void 0, Zt), or.bind(void 0, Yt), sr.bind(void 0, Zt), sr.bind(void 0, Yt), ar.bind(void 0, 0), ar.bind(void 0, 1), hr.bind(void 0, 0), hr.bind(void 0, 1), function(e) {
                        var r = e.stack, i = r.pop(), n = r.pop();
                        t.DEBUG && console.log(e.step, "SPVFS[]", i, n), e.pv = e.dpv = Kt(n, i);
                    }, function(e) {
                        var r = e.stack, i = r.pop(), n = r.pop();
                        t.DEBUG && console.log(e.step, "SPVFS[]", i, n), e.fv = Kt(n, i);
                    }, function(e) {
                        var r = e.stack, i = e.pv;
                        t.DEBUG && console.log(e.step, "GPV[]"), r.push(16384 * i.x), r.push(16384 * i.y);
                    }, function(e) {
                        var r = e.stack, i = e.fv;
                        t.DEBUG && console.log(e.step, "GFV[]"), r.push(16384 * i.x), r.push(16384 * i.y);
                    }, function(e) {
                        e.fv = e.pv, t.DEBUG && console.log(e.step, "SFVTPV[]");
                    }, function(e) {
                        var r = e.stack, i = r.pop(), n = r.pop(), o = r.pop(), s = r.pop(), a = r.pop(), h = e.z0, l = e.z1, u = h[i], c = h[n], p = l[o], d = l[s], f = e.z2[a];
                        t.DEBUG && console.log("ISECT[], ", i, n, o, s, a);
                        var m = u.x, g = u.y, v = c.x, y = c.y, b = p.x, x = p.y, _ = d.x, w = d.y, S = (m - v) * (x - w) - (g - y) * (b - _), T = m * y - g * v, E = b * w - x * _;
                        f.x = (T * (b - _) - E * (m - v)) / S, f.y = (T * (x - w) - E * (g - y)) / S;
                    }, function(e) {
                        e.rp0 = e.stack.pop(), t.DEBUG && console.log(e.step, "SRP0[]", e.rp0);
                    }, function(e) {
                        e.rp1 = e.stack.pop(), t.DEBUG && console.log(e.step, "SRP1[]", e.rp1);
                    }, function(e) {
                        e.rp2 = e.stack.pop(), t.DEBUG && console.log(e.step, "SRP2[]", e.rp2);
                    }, function(e) {
                        var r = e.stack.pop();
                        switch (t.DEBUG && console.log(e.step, "SZP0[]", r), e.zp0 = r) {
                          case 0:
                            e.tZone || rr(e), e.z0 = e.tZone;
                            break;

                          case 1:
                            e.z0 = e.gZone;
                            break;

                          default:
                            throw new Error("Invalid zone pointer");
                        }
                    }, function(e) {
                        var r = e.stack.pop();
                        switch (t.DEBUG && console.log(e.step, "SZP1[]", r), e.zp1 = r) {
                          case 0:
                            e.tZone || rr(e), e.z1 = e.tZone;
                            break;

                          case 1:
                            e.z1 = e.gZone;
                            break;

                          default:
                            throw new Error("Invalid zone pointer");
                        }
                    }, function(e) {
                        var r = e.stack.pop();
                        switch (t.DEBUG && console.log(e.step, "SZP2[]", r), e.zp2 = r) {
                          case 0:
                            e.tZone || rr(e), e.z2 = e.tZone;
                            break;

                          case 1:
                            e.z2 = e.gZone;
                            break;

                          default:
                            throw new Error("Invalid zone pointer");
                        }
                    }, function(e) {
                        var r = e.stack.pop();
                        switch (t.DEBUG && console.log(e.step, "SZPS[]", r), e.zp0 = e.zp1 = e.zp2 = r, 
                        r) {
                          case 0:
                            e.tZone || rr(e), e.z0 = e.z1 = e.z2 = e.tZone;
                            break;

                          case 1:
                            e.z0 = e.z1 = e.z2 = e.gZone;
                            break;

                          default:
                            throw new Error("Invalid zone pointer");
                        }
                    }, function(e) {
                        e.loop = e.stack.pop(), t.DEBUG && console.log(e.step, "SLOOP[]", e.loop);
                    }, function(e) {
                        t.DEBUG && console.log(e.step, "RTG[]"), e.round = jt;
                    }, function(e) {
                        t.DEBUG && console.log(e.step, "RTHG[]"), e.round = Vt;
                    }, function(e) {
                        var r = e.stack.pop();
                        t.DEBUG && console.log(e.step, "SMD[]", r), e.minDis = r / 64;
                    }, function(e) {
                        t.DEBUG && console.log(e.step, "ELSE[]"), ir(e, !1);
                    }, function(e) {
                        var r = e.stack.pop();
                        t.DEBUG && console.log(e.step, "JMPR[]", r), e.ip += r - 1;
                    }, function(e) {
                        var r = e.stack.pop();
                        t.DEBUG && console.log(e.step, "SCVTCI[]", r), e.cvCutIn = r / 64;
                    }, void 0, void 0, function(e) {
                        var r = e.stack;
                        t.DEBUG && console.log(e.step, "DUP[]"), r.push(r[r.length - 1]);
                    }, lr, function(e) {
                        t.DEBUG && console.log(e.step, "CLEAR[]"), e.stack.length = 0;
                    }, function(e) {
                        var r = e.stack, i = r.pop(), n = r.pop();
                        t.DEBUG && console.log(e.step, "SWAP[]"), r.push(i), r.push(n);
                    }, function(e) {
                        var r = e.stack;
                        t.DEBUG && console.log(e.step, "DEPTH[]"), r.push(r.length);
                    }, function(e) {
                        var r = e.stack, i = r.pop();
                        t.DEBUG && console.log(e.step, "CINDEX[]", i), r.push(r[r.length - i]);
                    }, function(e) {
                        var r = e.stack, i = r.pop();
                        t.DEBUG && console.log(e.step, "MINDEX[]", i), r.push(r.splice(r.length - i, 1)[0]);
                    }, void 0, void 0, void 0, function(e) {
                        var r = e.stack, i = r.pop(), n = r.pop();
                        t.DEBUG && console.log(e.step, "LOOPCALL[]", i, n);
                        var o = e.ip, s = e.prog;
                        e.prog = e.funcs[i];
                        for (var a = 0; a < n; a++) Ut(e), t.DEBUG && console.log(++e.step, a + 1 < n ? "next loopcall" : "done loopcall", a);
                        e.ip = o, e.prog = s;
                    }, function(e) {
                        var r = e.stack.pop();
                        t.DEBUG && console.log(e.step, "CALL[]", r);
                        var i = e.ip, n = e.prog;
                        e.prog = e.funcs[r], Ut(e), e.ip = i, e.prog = n, t.DEBUG && console.log(++e.step, "returning from", r);
                    }, function(e) {
                        if ("fpgm" !== e.env) throw new Error("FDEF not allowed here");
                        var r = e.stack, i = e.prog, n = e.ip, o = r.pop(), s = n;
                        for (t.DEBUG && console.log(e.step, "FDEF[]", o); 45 !== i[++n]; ) ;
                        e.ip = n, e.funcs[o] = i.slice(s + 1, n);
                    }, void 0, ur.bind(void 0, 0), ur.bind(void 0, 1), cr.bind(void 0, Zt), cr.bind(void 0, Yt), pr.bind(void 0, 0), pr.bind(void 0, 1), dr.bind(void 0, 0), dr.bind(void 0, 1), fr.bind(void 0, 0), fr.bind(void 0, 1), function(e) {
                        for (var r = e.stack, i = e.loop, n = e.fv, o = r.pop() / 64, s = e.z2; i--; ) {
                            var a = r.pop(), h = s[a];
                            t.DEBUG && console.log(e.step, (1 < e.loop ? "loop " + (e.loop - i) + ": " : "") + "SHPIX[]", a, o), 
                            n.setRelative(h, h, o), n.touch(h);
                        }
                        e.loop = 1;
                    }, function(e) {
                        for (var r = e.stack, i = e.rp1, n = e.rp2, o = e.loop, s = e.z0[i], a = e.z1[n], h = e.fv, l = e.dpv, u = e.z2; o--; ) {
                            var c = r.pop(), p = u[c];
                            t.DEBUG && console.log(e.step, (1 < e.loop ? "loop " + (e.loop - o) + ": " : "") + "IP[]", c, i, "<->", n), 
                            h.interpolate(p, s, a, l), h.touch(p);
                        }
                        e.loop = 1;
                    }, mr.bind(void 0, 0), mr.bind(void 0, 1), function(e) {
                        for (var r = e.stack, i = e.rp0, n = e.z0[i], o = e.loop, s = e.fv, a = e.pv, h = e.z1; o--; ) {
                            var l = r.pop(), u = h[l];
                            t.DEBUG && console.log(e.step, (1 < e.loop ? "loop " + (e.loop - o) + ": " : "") + "ALIGNRP[]", l), 
                            s.setRelative(u, n, 0, a), s.touch(u);
                        }
                        e.loop = 1;
                    }, function(e) {
                        t.DEBUG && console.log(e.step, "RTDG[]"), e.round = Ht;
                    }, gr.bind(void 0, 0), gr.bind(void 0, 1), function(e) {
                        var r = e.prog, i = e.ip, n = e.stack, o = r[++i];
                        t.DEBUG && console.log(e.step, "NPUSHB[]", o);
                        for (var s = 0; s < o; s++) n.push(r[++i]);
                        e.ip = i;
                    }, function(e) {
                        var r = e.ip, i = e.prog, n = e.stack, o = i[++r];
                        t.DEBUG && console.log(e.step, "NPUSHW[]", o);
                        for (var s = 0; s < o; s++) {
                            var a = i[++r] << 8 | i[++r];
                            32768 & a && (a = -(1 + (65535 ^ a))), n.push(a);
                        }
                        e.ip = r;
                    }, function(e) {
                        var r = e.stack, i = e.store;
                        i || (i = e.store = []);
                        var n = r.pop(), o = r.pop();
                        t.DEBUG && console.log(e.step, "WS", n, o), i[o] = n;
                    }, function(e) {
                        var r = e.stack, i = e.store, n = r.pop();
                        t.DEBUG && console.log(e.step, "RS", n);
                        var o = i && i[n] || 0;
                        r.push(o);
                    }, function(e) {
                        var r = e.stack, i = r.pop(), n = r.pop();
                        t.DEBUG && console.log(e.step, "WCVTP", i, n), e.cvt[n] = i / 64;
                    }, function(e) {
                        var r = e.stack, i = r.pop();
                        t.DEBUG && console.log(e.step, "RCVT", i), r.push(64 * e.cvt[i]);
                    }, vr.bind(void 0, 0), vr.bind(void 0, 1), void 0, yr.bind(void 0, 0), yr.bind(void 0, 1), function(e) {
                        t.DEBUG && console.log(e.step, "MPPEM[]"), e.stack.push(e.ppem);
                    }, void 0, function(e) {
                        t.DEBUG && console.log(e.step, "FLIPON[]"), e.autoFlip = !0;
                    }, void 0, void 0, function(e) {
                        var r = e.stack, i = r.pop(), n = r.pop();
                        t.DEBUG && console.log(e.step, "LT[]", i, n), r.push(n < i ? 1 : 0);
                    }, function(e) {
                        var r = e.stack, i = r.pop(), n = r.pop();
                        t.DEBUG && console.log(e.step, "LTEQ[]", i, n), r.push(n <= i ? 1 : 0);
                    }, function(e) {
                        var r = e.stack, i = r.pop(), n = r.pop();
                        t.DEBUG && console.log(e.step, "GT[]", i, n), r.push(i < n ? 1 : 0);
                    }, function(e) {
                        var r = e.stack, i = r.pop(), n = r.pop();
                        t.DEBUG && console.log(e.step, "GTEQ[]", i, n), r.push(i <= n ? 1 : 0);
                    }, function(e) {
                        var r = e.stack, i = r.pop(), n = r.pop();
                        t.DEBUG && console.log(e.step, "EQ[]", i, n), r.push(i === n ? 1 : 0);
                    }, function(e) {
                        var r = e.stack, i = r.pop(), n = r.pop();
                        t.DEBUG && console.log(e.step, "NEQ[]", i, n), r.push(i !== n ? 1 : 0);
                    }, function(e) {
                        var r = e.stack, i = r.pop();
                        t.DEBUG && console.log(e.step, "ODD[]", i), r.push(Math.trunc(i) % 2 ? 1 : 0);
                    }, function(e) {
                        var r = e.stack, i = r.pop();
                        t.DEBUG && console.log(e.step, "EVEN[]", i), r.push(Math.trunc(i) % 2 ? 0 : 1);
                    }, function(e) {
                        var r = e.stack.pop();
                        t.DEBUG && console.log(e.step, "IF[]", r), r || (ir(e, !0), t.DEBUG && console.log(e.step, "EIF[]"));
                    }, function(e) {
                        t.DEBUG && console.log(e.step, "EIF[]");
                    }, function(e) {
                        var r = e.stack, i = r.pop(), n = r.pop();
                        t.DEBUG && console.log(e.step, "AND[]", i, n), r.push(i && n ? 1 : 0);
                    }, function(e) {
                        var r = e.stack, i = r.pop(), n = r.pop();
                        t.DEBUG && console.log(e.step, "OR[]", i, n), r.push(i || n ? 1 : 0);
                    }, function(e) {
                        var r = e.stack, i = r.pop();
                        t.DEBUG && console.log(e.step, "NOT[]", i), r.push(i ? 0 : 1);
                    }, br.bind(void 0, 1), function(e) {
                        var r = e.stack.pop();
                        t.DEBUG && console.log(e.step, "SDB[]", r), e.deltaBase = r;
                    }, function(e) {
                        var r = e.stack.pop();
                        t.DEBUG && console.log(e.step, "SDS[]", r), e.deltaShift = Math.pow(.5, r);
                    }, function(e) {
                        var r = e.stack, i = r.pop(), n = r.pop();
                        t.DEBUG && console.log(e.step, "ADD[]", i, n), r.push(n + i);
                    }, function(e) {
                        var r = e.stack, i = r.pop(), n = r.pop();
                        t.DEBUG && console.log(e.step, "SUB[]", i, n), r.push(n - i);
                    }, function(e) {
                        var r = e.stack, i = r.pop(), n = r.pop();
                        t.DEBUG && console.log(e.step, "DIV[]", i, n), r.push(64 * n / i);
                    }, function(e) {
                        var r = e.stack, i = r.pop(), n = r.pop();
                        t.DEBUG && console.log(e.step, "MUL[]", i, n), r.push(n * i / 64);
                    }, function(e) {
                        var r = e.stack, i = r.pop();
                        t.DEBUG && console.log(e.step, "ABS[]", i), r.push(Math.abs(i));
                    }, function(e) {
                        var r = e.stack, i = r.pop();
                        t.DEBUG && console.log(e.step, "NEG[]", i), r.push(-i);
                    }, function(e) {
                        var r = e.stack, i = r.pop();
                        t.DEBUG && console.log(e.step, "FLOOR[]", i), r.push(64 * Math.floor(i / 64));
                    }, function(e) {
                        var r = e.stack, i = r.pop();
                        t.DEBUG && console.log(e.step, "CEILING[]", i), r.push(64 * Math.ceil(i / 64));
                    }, xr.bind(void 0, 0), xr.bind(void 0, 1), xr.bind(void 0, 2), xr.bind(void 0, 3), void 0, void 0, void 0, void 0, function(e) {
                        var r = e.stack, i = r.pop(), n = r.pop();
                        t.DEBUG && console.log(e.step, "WCVTF[]", i, n), e.cvt[n] = i * e.ppem / e.font.unitsPerEm;
                    }, br.bind(void 0, 2), br.bind(void 0, 3), _r.bind(void 0, 1), _r.bind(void 0, 2), _r.bind(void 0, 3), function(e) {
                        var r, i = e.stack.pop();
                        switch (t.DEBUG && console.log(e.step, "SROUND[]", i), e.round = Xt, 192 & i) {
                          case 0:
                            r = .5;
                            break;

                          case 64:
                            r = 1;
                            break;

                          case 128:
                            r = 2;
                            break;

                          default:
                            throw new Error("invalid SROUND value");
                        }
                        switch (e.srPeriod = r, 48 & i) {
                          case 0:
                            e.srPhase = 0;
                            break;

                          case 16:
                            e.srPhase = .25 * r;
                            break;

                          case 32:
                            e.srPhase = .5 * r;
                            break;

                          case 48:
                            e.srPhase = .75 * r;
                            break;

                          default:
                            throw new Error("invalid SROUND value");
                        }
                        i &= 15, e.srThreshold = 0 === i ? 0 : (i / 8 - .5) * r;
                    }, function(e) {
                        var r, i = e.stack.pop();
                        switch (t.DEBUG && console.log(e.step, "S45ROUND[]", i), e.round = Xt, 192 & i) {
                          case 0:
                            r = Math.sqrt(2) / 2;
                            break;

                          case 64:
                            r = Math.sqrt(2);
                            break;

                          case 128:
                            r = 2 * Math.sqrt(2);
                            break;

                          default:
                            throw new Error("invalid S45ROUND value");
                        }
                        switch (e.srPeriod = r, 48 & i) {
                          case 0:
                            e.srPhase = 0;
                            break;

                          case 16:
                            e.srPhase = .25 * r;
                            break;

                          case 32:
                            e.srPhase = .5 * r;
                            break;

                          case 48:
                            e.srPhase = .75 * r;
                            break;

                          default:
                            throw new Error("invalid S45ROUND value");
                        }
                        i &= 15, e.srThreshold = 0 === i ? 0 : (i / 8 - .5) * r;
                    }, void 0, void 0, function(e) {
                        t.DEBUG && console.log(e.step, "ROFF[]"), e.round = zt;
                    }, void 0, function(e) {
                        t.DEBUG && console.log(e.step, "RUTG[]"), e.round = Wt;
                    }, function(e) {
                        t.DEBUG && console.log(e.step, "RDTG[]"), e.round = qt;
                    }, lr, lr, void 0, void 0, void 0, void 0, void 0, function(e) {
                        var r = e.stack.pop();
                        t.DEBUG && console.log(e.step, "SCANCTRL[]", r);
                    }, wr.bind(void 0, 0), wr.bind(void 0, 1), function(e) {
                        var r = e.stack, i = r.pop(), n = 0;
                        t.DEBUG && console.log(e.step, "GETINFO[]", i), 1 & i && (n = 35), 32 & i && (n |= 4096), 
                        r.push(n);
                    }, void 0, function(e) {
                        var r = e.stack, i = r.pop(), n = r.pop(), o = r.pop();
                        t.DEBUG && console.log(e.step, "ROLL[]"), r.push(n), r.push(i), r.push(o);
                    }, function(e) {
                        var r = e.stack, i = r.pop(), n = r.pop();
                        t.DEBUG && console.log(e.step, "MAX[]", i, n), r.push(Math.max(n, i));
                    }, function(e) {
                        var r = e.stack, i = r.pop(), n = r.pop();
                        t.DEBUG && console.log(e.step, "MIN[]", i, n), r.push(Math.min(n, i));
                    }, function(e) {
                        var r = e.stack.pop();
                        t.DEBUG && console.log(e.step, "SCANTYPE[]", r);
                    }, function(e) {
                        var r = e.stack.pop(), i = e.stack.pop();
                        switch (t.DEBUG && console.log(e.step, "INSTCTRL[]", r, i), r) {
                          case 1:
                            return void (e.inhibitGridFit = !!i);

                          case 2:
                            return void (e.ignoreCvt = !!i);

                          default:
                            throw new Error("invalid INSTCTRL[] selector");
                        }
                    }, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, Sr.bind(void 0, 1), Sr.bind(void 0, 2), Sr.bind(void 0, 3), Sr.bind(void 0, 4), Sr.bind(void 0, 5), Sr.bind(void 0, 6), Sr.bind(void 0, 7), Sr.bind(void 0, 8), Tr.bind(void 0, 1), Tr.bind(void 0, 2), Tr.bind(void 0, 3), Tr.bind(void 0, 4), Tr.bind(void 0, 5), Tr.bind(void 0, 6), Tr.bind(void 0, 7), Tr.bind(void 0, 8), Er.bind(void 0, 0, 0, 0, 0, 0), Er.bind(void 0, 0, 0, 0, 0, 1), Er.bind(void 0, 0, 0, 0, 0, 2), Er.bind(void 0, 0, 0, 0, 0, 3), Er.bind(void 0, 0, 0, 0, 1, 0), Er.bind(void 0, 0, 0, 0, 1, 1), Er.bind(void 0, 0, 0, 0, 1, 2), Er.bind(void 0, 0, 0, 0, 1, 3), Er.bind(void 0, 0, 0, 1, 0, 0), Er.bind(void 0, 0, 0, 1, 0, 1), Er.bind(void 0, 0, 0, 1, 0, 2), Er.bind(void 0, 0, 0, 1, 0, 3), Er.bind(void 0, 0, 0, 1, 1, 0), Er.bind(void 0, 0, 0, 1, 1, 1), Er.bind(void 0, 0, 0, 1, 1, 2), Er.bind(void 0, 0, 0, 1, 1, 3), Er.bind(void 0, 0, 1, 0, 0, 0), Er.bind(void 0, 0, 1, 0, 0, 1), Er.bind(void 0, 0, 1, 0, 0, 2), Er.bind(void 0, 0, 1, 0, 0, 3), Er.bind(void 0, 0, 1, 0, 1, 0), Er.bind(void 0, 0, 1, 0, 1, 1), Er.bind(void 0, 0, 1, 0, 1, 2), Er.bind(void 0, 0, 1, 0, 1, 3), Er.bind(void 0, 0, 1, 1, 0, 0), Er.bind(void 0, 0, 1, 1, 0, 1), Er.bind(void 0, 0, 1, 1, 0, 2), Er.bind(void 0, 0, 1, 1, 0, 3), Er.bind(void 0, 0, 1, 1, 1, 0), Er.bind(void 0, 0, 1, 1, 1, 1), Er.bind(void 0, 0, 1, 1, 1, 2), Er.bind(void 0, 0, 1, 1, 1, 3), Er.bind(void 0, 1, 0, 0, 0, 0), Er.bind(void 0, 1, 0, 0, 0, 1), Er.bind(void 0, 1, 0, 0, 0, 2), Er.bind(void 0, 1, 0, 0, 0, 3), Er.bind(void 0, 1, 0, 0, 1, 0), Er.bind(void 0, 1, 0, 0, 1, 1), Er.bind(void 0, 1, 0, 0, 1, 2), Er.bind(void 0, 1, 0, 0, 1, 3), Er.bind(void 0, 1, 0, 1, 0, 0), Er.bind(void 0, 1, 0, 1, 0, 1), Er.bind(void 0, 1, 0, 1, 0, 2), Er.bind(void 0, 1, 0, 1, 0, 3), Er.bind(void 0, 1, 0, 1, 1, 0), Er.bind(void 0, 1, 0, 1, 1, 1), Er.bind(void 0, 1, 0, 1, 1, 2), Er.bind(void 0, 1, 0, 1, 1, 3), Er.bind(void 0, 1, 1, 0, 0, 0), Er.bind(void 0, 1, 1, 0, 0, 1), Er.bind(void 0, 1, 1, 0, 0, 2), Er.bind(void 0, 1, 1, 0, 0, 3), Er.bind(void 0, 1, 1, 0, 1, 0), Er.bind(void 0, 1, 1, 0, 1, 1), Er.bind(void 0, 1, 1, 0, 1, 2), Er.bind(void 0, 1, 1, 0, 1, 3), Er.bind(void 0, 1, 1, 1, 0, 0), Er.bind(void 0, 1, 1, 1, 0, 1), Er.bind(void 0, 1, 1, 1, 0, 2), Er.bind(void 0, 1, 1, 1, 0, 3), Er.bind(void 0, 1, 1, 1, 1, 0), Er.bind(void 0, 1, 1, 1, 1, 1), Er.bind(void 0, 1, 1, 1, 1, 2), Er.bind(void 0, 1, 1, 1, 1, 3) ];
                    var Mr = Array.from || function(e) {
                        return e.match(/[\uD800-\uDBFF][\uDC00-\uDFFF]?|[^\uD800-\uDFFF]|./g) || [];
                    };
                    function Cr(e) {
                        (e = e || {}).empty || (Rt(e.familyName, "When creating a new Font object, familyName is required."), 
                        Rt(e.styleName, "When creating a new Font object, styleName is required."), Rt(e.unitsPerEm, "When creating a new Font object, unitsPerEm is required."), 
                        Rt(e.ascender, "When creating a new Font object, ascender is required."), Rt(e.descender, "When creating a new Font object, descender is required."), 
                        Rt(e.descender < 0, "Descender should be negative (e.g. -512)."), this.names = {
                            fontFamily: {
                                en: e.familyName || " "
                            },
                            fontSubfamily: {
                                en: e.styleName || " "
                            },
                            fullName: {
                                en: e.fullName || e.familyName + " " + e.styleName
                            },
                            postScriptName: {
                                en: e.postScriptName || (e.familyName + e.styleName).replace(/\s/g, "")
                            },
                            designer: {
                                en: e.designer || " "
                            },
                            designerURL: {
                                en: e.designerURL || " "
                            },
                            manufacturer: {
                                en: e.manufacturer || " "
                            },
                            manufacturerURL: {
                                en: e.manufacturerURL || " "
                            },
                            license: {
                                en: e.license || " "
                            },
                            licenseURL: {
                                en: e.licenseURL || " "
                            },
                            version: {
                                en: e.version || "Version 0.1"
                            },
                            description: {
                                en: e.description || " "
                            },
                            copyright: {
                                en: e.copyright || " "
                            },
                            trademark: {
                                en: e.trademark || " "
                            }
                        }, this.unitsPerEm = e.unitsPerEm || 1e3, this.ascender = e.ascender, this.descender = e.descender, 
                        this.createdTimestamp = e.createdTimestamp, this.tables = {
                            os2: {
                                usWeightClass: e.weightClass || this.usWeightClasses.MEDIUM,
                                usWidthClass: e.widthClass || this.usWidthClasses.MEDIUM,
                                fsSelection: e.fsSelection || this.fsSelectionValues.REGULAR
                            }
                        }), this.supported = !0, this.glyphs = new Se.GlyphSet(this, e.glyphs || []), this.encoding = new me(this), 
                        this.position = new Tt(this), this.substitution = new Et(this), this.tables = this.tables || {}, 
                        Object.defineProperty(this, "hinting", {
                            get: function() {
                                return this._hinting ? this._hinting : "truetype" === this.outlinesFormat ? this._hinting = new Gt(this) : void 0;
                            }
                        });
                    }
                    function Lr(e, t) {
                        var r = JSON.stringify(e), i = 256;
                        for (var n in t) {
                            var o = parseInt(n);
                            if (o && !(o < 256)) {
                                if (JSON.stringify(t[n]) === r) return o;
                                i <= o && (i = o + 1);
                            }
                        }
                        return t[i] = e, i;
                    }
                    function Rr(e, t, r, i) {
                        for (var n = [ {
                            name: "nameID_" + e,
                            type: "USHORT",
                            value: Lr(t.name, i)
                        }, {
                            name: "flags_" + e,
                            type: "USHORT",
                            value: 0
                        } ], o = 0; o < r.length; ++o) {
                            var s = r[o].tag;
                            n.push({
                                name: "axis_" + e + " " + s,
                                type: "FIXED",
                                value: t.coordinates[s] << 16
                            });
                        }
                        return n;
                    }
                    function Ar(e, t, r, i) {
                        var n = {}, o = new le.Parser(e, t);
                        n.name = i[o.parseUShort()] || {}, o.skip("uShort", 1), n.coordinates = {};
                        for (var s = 0; s < r.length; ++s) n.coordinates[r[s].tag] = o.parseFixed();
                        return n;
                    }
                    Cr.prototype.hasChar = function(e) {
                        return null !== this.encoding.charToGlyphIndex(e);
                    }, Cr.prototype.charToGlyphIndex = function(e) {
                        return this.encoding.charToGlyphIndex(e);
                    }, Cr.prototype.charToGlyph = function(e) {
                        var t = this.charToGlyphIndex(e), r = this.glyphs.get(t);
                        return r || (r = this.glyphs.get(0)), r;
                    }, Cr.prototype.stringToGlyphs = function(e, t) {
                        t = t || this.defaultRenderOptions;
                        for (var r = Mr(e), i = [], n = 0; n < r.length; n += 1) {
                            var o = r[n];
                            i.push(this.charToGlyphIndex(o));
                        }
                        var s = i.length;
                        if (t.features) {
                            var a = t.script || this.substitution.getDefaultScriptName(), h = [];
                            t.features.liga && (h = h.concat(this.substitution.getFeature("liga", a, t.language))), 
                            t.features.rlig && (h = h.concat(this.substitution.getFeature("rlig", a, t.language)));
                            for (var l = 0; l < s; l += 1) for (var u = 0; u < h.length; u++) {
                                for (var c = h[u], p = c.sub, d = p.length, f = 0; f < d && p[f] === i[l + f]; ) f++;
                                f === d && (i.splice(l, d, c.by), s = s - d + 1);
                            }
                        }
                        for (var m = new Array(s), g = this.glyphs.get(0), v = 0; v < s; v += 1) m[v] = this.glyphs.get(i[v]) || g;
                        return m;
                    }, Cr.prototype.nameToGlyphIndex = function(e) {
                        return this.glyphNames.nameToGlyphIndex(e);
                    }, Cr.prototype.nameToGlyph = function(e) {
                        var t = this.nameToGlyphIndex(e), r = this.glyphs.get(t);
                        return r || (r = this.glyphs.get(0)), r;
                    }, Cr.prototype.glyphIndexToName = function(e) {
                        return this.glyphNames.glyphIndexToName ? this.glyphNames.glyphIndexToName(e) : "";
                    }, Cr.prototype.getKerningValue = function(e, t) {
                        e = e.index || e, t = t.index || t;
                        var r = this.position.defaultKerningTables;
                        return r ? this.position.getKerningValue(r, e, t) : this.kerningPairs[e + "," + t] || 0;
                    }, Cr.prototype.defaultRenderOptions = {
                        kerning: !0,
                        features: {
                            liga: !0,
                            rlig: !0
                        }
                    }, Cr.prototype.forEachGlyph = function(e, t, r, i, n, o) {
                        t = void 0 !== t ? t : 0, r = void 0 !== r ? r : 0, i = void 0 !== i ? i : 72, n = n || this.defaultRenderOptions;
                        var s, a = 1 / this.unitsPerEm * i, h = this.stringToGlyphs(e, n);
                        if (n.kerning) {
                            var l = n.script || this.position.getDefaultScriptName();
                            s = this.position.getKerningTables(l, n.language);
                        }
                        for (var u = 0; u < h.length; u += 1) {
                            var c = h[u];
                            o.call(this, c, t, r, i, n), c.advanceWidth && (t += c.advanceWidth * a), n.kerning && u < h.length - 1 && (t += (s ? this.position.getKerningValue(s, c.index, h[u + 1].index) : this.getKerningValue(c, h[u + 1])) * a), 
                            n.letterSpacing ? t += n.letterSpacing * i : n.tracking && (t += n.tracking / 1e3 * i);
                        }
                        return t;
                    }, Cr.prototype.getPath = function(e, t, r, i, n) {
                        var o = new A();
                        return this.forEachGlyph(e, t, r, i, n, function(e, t, r, i) {
                            var s = e.getPath(t, r, i, n, this);
                            o.extend(s);
                        }), o;
                    }, Cr.prototype.getPaths = function(e, t, r, i, n) {
                        var o = [];
                        return this.forEachGlyph(e, t, r, i, n, function(e, t, r, i) {
                            var s = e.getPath(t, r, i, n, this);
                            o.push(s);
                        }), o;
                    }, Cr.prototype.getAdvanceWidth = function(e, t, r) {
                        return this.forEachGlyph(e, 0, 0, t, r, function() {});
                    }, Cr.prototype.draw = function(e, t, r, i, n, o) {
                        this.getPath(t, r, i, n, o).draw(e);
                    }, Cr.prototype.drawPoints = function(e, t, r, i, n, o) {
                        this.forEachGlyph(t, r, i, n, o, function(t, r, i, n) {
                            t.drawPoints(e, r, i, n);
                        });
                    }, Cr.prototype.drawMetrics = function(e, t, r, i, n, o) {
                        this.forEachGlyph(t, r, i, n, o, function(t, r, i, n) {
                            t.drawMetrics(e, r, i, n);
                        });
                    }, Cr.prototype.getEnglishName = function(e) {
                        var t = this.names[e];
                        if (t) return t.en;
                    }, Cr.prototype.validate = function() {
                        var e = this;
                        function t(t) {
                            var r = e.getEnglishName(t);
                            r && r.trim().length;
                        }
                        t("fontFamily"), t("weightName"), t("manufacturer"), t("copyright"), t("version"), 
                        this.unitsPerEm;
                    }, Cr.prototype.toTables = function() {
                        return bt(this);
                    }, Cr.prototype.toBuffer = function() {
                        return console.warn("Font.toBuffer is deprecated. Use Font.toArrayBuffer instead."), 
                        this.toArrayBuffer();
                    }, Cr.prototype.toArrayBuffer = function() {
                        for (var e = this.toTables().encode(), t = new ArrayBuffer(e.length), r = new Uint8Array(t), i = 0; i < e.length; i++) r[i] = e[i];
                        return t;
                    }, Cr.prototype.download = function(t) {
                        var r = this.getEnglishName("fontFamily"), n = this.getEnglishName("fontSubfamily");
                        t = t || r.replace(/\s/g, "") + "-" + n + ".otf";
                        var o = this.toArrayBuffer();
                        if ("undefined" != typeof window) window.requestFileSystem = window.requestFileSystem || window.webkitRequestFileSystem, 
                        window.requestFileSystem(window.TEMPORARY, o.byteLength, function(e) {
                            e.root.getFile(t, {
                                create: !0
                            }, function(e) {
                                e.createWriter(function(t) {
                                    var r = new DataView(o), i = new Blob([ r ], {
                                        type: "font/opentype"
                                    });
                                    t.write(i), t.addEventListener("writeend", function() {
                                        location.href = e.toURL();
                                    }, !1);
                                });
                            });
                        }, function(e) {
                            throw new Error(e.name + ": " + e.message);
                        }); else {
                            var s = e("fs"), a = function(e) {
                                for (var t = new i(e.byteLength), r = new Uint8Array(e), n = 0; n < t.length; ++n) t[n] = r[n];
                                return t;
                            }(o);
                            s.writeFileSync(t, a);
                        }
                    }, Cr.prototype.fsSelectionValues = {
                        ITALIC: 1,
                        UNDERSCORE: 2,
                        NEGATIVE: 4,
                        OUTLINED: 8,
                        STRIKEOUT: 16,
                        BOLD: 32,
                        REGULAR: 64,
                        USER_TYPO_METRICS: 128,
                        WWS: 256,
                        OBLIQUE: 512
                    }, Cr.prototype.usWidthClasses = {
                        ULTRA_CONDENSED: 1,
                        EXTRA_CONDENSED: 2,
                        CONDENSED: 3,
                        SEMI_CONDENSED: 4,
                        MEDIUM: 5,
                        SEMI_EXPANDED: 6,
                        EXPANDED: 7,
                        EXTRA_EXPANDED: 8,
                        ULTRA_EXPANDED: 9
                    }, Cr.prototype.usWeightClasses = {
                        THIN: 100,
                        EXTRA_LIGHT: 200,
                        LIGHT: 300,
                        NORMAL: 400,
                        MEDIUM: 500,
                        SEMI_BOLD: 600,
                        BOLD: 700,
                        EXTRA_BOLD: 800,
                        BLACK: 900
                    };
                    var Dr = {
                        make: function(e, t) {
                            var r, i, n, o, s = new te.Table("fvar", [ {
                                name: "version",
                                type: "ULONG",
                                value: 65536
                            }, {
                                name: "offsetToData",
                                type: "USHORT",
                                value: 0
                            }, {
                                name: "countSizePairs",
                                type: "USHORT",
                                value: 2
                            }, {
                                name: "axisCount",
                                type: "USHORT",
                                value: e.axes.length
                            }, {
                                name: "axisSize",
                                type: "USHORT",
                                value: 20
                            }, {
                                name: "instanceCount",
                                type: "USHORT",
                                value: e.instances.length
                            }, {
                                name: "instanceSize",
                                type: "USHORT",
                                value: 4 + 4 * e.axes.length
                            } ]);
                            s.offsetToData = s.sizeOf();
                            for (var a = 0; a < e.axes.length; a++) s.fields = s.fields.concat((r = a, n = t, 
                            o = Lr((i = e.axes[a]).name, n), [ {
                                name: "tag_" + r,
                                type: "TAG",
                                value: i.tag
                            }, {
                                name: "minValue_" + r,
                                type: "FIXED",
                                value: i.minValue << 16
                            }, {
                                name: "defaultValue_" + r,
                                type: "FIXED",
                                value: i.defaultValue << 16
                            }, {
                                name: "maxValue_" + r,
                                type: "FIXED",
                                value: i.maxValue << 16
                            }, {
                                name: "flags_" + r,
                                type: "USHORT",
                                value: 0
                            }, {
                                name: "nameID_" + r,
                                type: "USHORT",
                                value: o
                            } ]));
                            for (var h = 0; h < e.instances.length; h++) s.fields = s.fields.concat(Rr(h, e.instances[h], e.axes, t));
                            return s;
                        },
                        parse: function(e, t, r) {
                            var i = new le.Parser(e, t), n = i.parseULong();
                            k.argument(65536 === n, "Unsupported fvar table version.");
                            var o = i.parseOffset16();
                            i.skip("uShort", 1);
                            for (var s, a, h, l, u, c = i.parseUShort(), p = i.parseUShort(), d = i.parseUShort(), f = i.parseUShort(), m = [], g = 0; g < c; g++) m.push((s = e, 
                            a = t + o + g * p, h = r, u = l = void 0, l = {}, u = new le.Parser(s, a), l.tag = u.parseTag(), 
                            l.minValue = u.parseFixed(), l.defaultValue = u.parseFixed(), l.maxValue = u.parseFixed(), 
                            u.skip("uShort", 1), l.name = h[u.parseUShort()] || {}, l));
                            for (var v = [], y = t + o + c * p, b = 0; b < d; b++) v.push(Ar(e, y + b * f, m, r));
                            return {
                                axes: m,
                                instances: v
                            };
                        }
                    }, Pr = new Array(10);
                    Pr[1] = function() {
                        var e = this.offset + this.relativeOffset, t = this.parseUShort();
                        return 1 === t ? {
                            posFormat: 1,
                            coverage: this.parsePointer(ae.coverage),
                            value: this.parseValueRecord()
                        } : 2 === t ? {
                            posFormat: 2,
                            coverage: this.parsePointer(ae.coverage),
                            values: this.parseValueRecordList()
                        } : void k.assert(!1, "0x" + e.toString(16) + ": GPOS lookup type 1 format must be 1 or 2.");
                    }, Pr[2] = function() {
                        var e = this.offset + this.relativeOffset, t = this.parseUShort();
                        k.assert(1 === t || 2 === t, "0x" + e.toString(16) + ": GPOS lookup type 2 format must be 1 or 2.");
                        var r = this.parsePointer(ae.coverage), i = this.parseUShort(), n = this.parseUShort();
                        if (1 === t) return {
                            posFormat: t,
                            coverage: r,
                            valueFormat1: i,
                            valueFormat2: n,
                            pairSets: this.parseList(ae.pointer(ae.list(function() {
                                return {
                                    secondGlyph: this.parseUShort(),
                                    value1: this.parseValueRecord(i),
                                    value2: this.parseValueRecord(n)
                                };
                            })))
                        };
                        if (2 === t) {
                            var o = this.parsePointer(ae.classDef), s = this.parsePointer(ae.classDef), a = this.parseUShort(), h = this.parseUShort();
                            return {
                                posFormat: t,
                                coverage: r,
                                valueFormat1: i,
                                valueFormat2: n,
                                classDef1: o,
                                classDef2: s,
                                class1Count: a,
                                class2Count: h,
                                classRecords: this.parseList(a, ae.list(h, function() {
                                    return {
                                        value1: this.parseValueRecord(i),
                                        value2: this.parseValueRecord(n)
                                    };
                                }))
                            };
                        }
                    }, Pr[3] = function() {
                        return {
                            error: "GPOS Lookup 3 not supported"
                        };
                    }, Pr[4] = function() {
                        return {
                            error: "GPOS Lookup 4 not supported"
                        };
                    }, Pr[5] = function() {
                        return {
                            error: "GPOS Lookup 5 not supported"
                        };
                    }, Pr[6] = function() {
                        return {
                            error: "GPOS Lookup 6 not supported"
                        };
                    }, Pr[7] = function() {
                        return {
                            error: "GPOS Lookup 7 not supported"
                        };
                    }, Pr[8] = function() {
                        return {
                            error: "GPOS Lookup 8 not supported"
                        };
                    }, Pr[9] = function() {
                        return {
                            error: "GPOS Lookup 9 not supported"
                        };
                    };
                    var kr = new Array(10), Ir = {
                        parse: function(e, t) {
                            var r = new ae(e, t = t || 0), i = r.parseVersion(1);
                            return k.argument(1 === i || 1.1 === i, "Unsupported GPOS table version " + i), 
                            1 === i ? {
                                version: i,
                                scripts: r.parseScriptList(),
                                features: r.parseFeatureList(),
                                lookups: r.parseLookupList(Pr)
                            } : {
                                version: i,
                                scripts: r.parseScriptList(),
                                features: r.parseFeatureList(),
                                lookups: r.parseLookupList(Pr),
                                variations: r.parseFeatureVariationsList()
                            };
                        },
                        make: function(e) {
                            return new te.Table("GPOS", [ {
                                name: "version",
                                type: "ULONG",
                                value: 65536
                            }, {
                                name: "scripts",
                                type: "TABLE",
                                value: new te.ScriptList(e.scripts)
                            }, {
                                name: "features",
                                type: "TABLE",
                                value: new te.FeatureList(e.features)
                            }, {
                                name: "lookups",
                                type: "TABLE",
                                value: new te.LookupList(e.lookups, kr)
                            } ]);
                        }
                    }, Or = {
                        parse: function(e, t) {
                            var r = new le.Parser(e, t), i = r.parseUShort();
                            if (0 === i) return function(e) {
                                var t = {};
                                e.skip("uShort");
                                var r = e.parseUShort();
                                k.argument(0 === r, "Unsupported kern sub-table version."), e.skip("uShort", 2);
                                var i = e.parseUShort();
                                e.skip("uShort", 3);
                                for (var n = 0; n < i; n += 1) {
                                    var o = e.parseUShort(), s = e.parseUShort(), a = e.parseShort();
                                    t[o + "," + s] = a;
                                }
                                return t;
                            }(r);
                            if (1 === i) return function(e) {
                                var t = {};
                                e.skip("uShort"), 1 < e.parseULong() && console.warn("Only the first kern subtable is supported."), 
                                e.skip("uLong");
                                var r = 255 & e.parseUShort();
                                if (e.skip("uShort"), 0 === r) {
                                    var i = e.parseUShort();
                                    e.skip("uShort", 3);
                                    for (var n = 0; n < i; n += 1) {
                                        var o = e.parseUShort(), s = e.parseUShort(), a = e.parseShort();
                                        t[o + "," + s] = a;
                                    }
                                }
                                return t;
                            }(r);
                            throw new Error("Unsupported kern table version (" + i + ").");
                        }
                    }, Ur = {
                        parse: function(e, t, r, i) {
                            for (var n = new le.Parser(e, t), o = i ? n.parseUShort : n.parseULong, s = [], a = 0; a < r + 1; a += 1) {
                                var h = o.call(n);
                                i && (h *= 2), s.push(h);
                            }
                            return s;
                        }
                    };
                    function Nr(e, t) {
                        for (var r = [], i = 12, n = 0; n < t; n += 1) {
                            var o = le.getTag(e, i), s = le.getULong(e, i + 4), a = le.getULong(e, i + 8), h = le.getULong(e, i + 12);
                            r.push({
                                tag: o,
                                checksum: s,
                                offset: a,
                                length: h,
                                compression: !1
                            }), i += 16;
                        }
                        return r;
                    }
                    function Br(e, t) {
                        if ("WOFF" !== t.compression) return {
                            data: e,
                            offset: t.offset
                        };
                        var r = new Uint8Array(e.buffer, t.offset + 2, t.compressedLength - 2), i = new Uint8Array(t.length);
                        if (C(r, i), i.byteLength !== t.length) throw new Error("Decompression error: " + t.tag + " decompressed length doesn't match recorded length");
                        return {
                            data: new DataView(i.buffer, 0),
                            offset: 0
                        };
                    }
                    function Fr(e) {
                        var t, r, i, n, o, s, a, h, l, u, c, p, d, f, m = new Cr({
                            empty: !0
                        }), g = new DataView(e, 0), v = [], y = le.getTag(g, 0);
                        if (y === String.fromCharCode(0, 1, 0, 0) || "true" === y || "typ1" === y) m.outlinesFormat = "truetype", 
                        v = Nr(g, i = le.getUShort(g, 4)); else if ("OTTO" === y) m.outlinesFormat = "cff", 
                        v = Nr(g, i = le.getUShort(g, 4)); else {
                            if ("wOFF" !== y) throw new Error("Unsupported OpenType signature " + y);
                            var b = le.getTag(g, 4);
                            if (b === String.fromCharCode(0, 1, 0, 0)) m.outlinesFormat = "truetype"; else {
                                if ("OTTO" !== b) throw new Error("Unsupported OpenType flavor " + y);
                                m.outlinesFormat = "cff";
                            }
                            v = function(e, t) {
                                for (var r = [], i = 44, n = 0; n < t; n += 1) {
                                    var o, s = le.getTag(e, i), a = le.getULong(e, i + 4), h = le.getULong(e, i + 8), l = le.getULong(e, i + 12);
                                    o = h < l && "WOFF", r.push({
                                        tag: s,
                                        offset: a,
                                        compression: o,
                                        compressedLength: h,
                                        length: l
                                    }), i += 20;
                                }
                                return r;
                            }(g, i = le.getUShort(g, 12));
                        }
                        for (var x = 0; x < i; x += 1) {
                            var _ = v[x], w = void 0;
                            switch (_.tag) {
                              case "cmap":
                                w = Br(g, _), m.tables.cmap = ue.parse(w.data, w.offset), m.encoding = new ge(m.tables.cmap);
                                break;

                              case "cvt ":
                                w = Br(g, _), f = new le.Parser(w.data, w.offset), m.tables.cvt = f.parseShortList(_.length / 2);
                                break;

                              case "fvar":
                                o = _;
                                break;

                              case "fpgm":
                                w = Br(g, _), f = new le.Parser(w.data, w.offset), m.tables.fpgm = f.parseByteList(_.length);
                                break;

                              case "head":
                                w = Br(g, _), m.tables.head = je.parse(w.data, w.offset), m.unitsPerEm = m.tables.head.unitsPerEm, 
                                t = m.tables.head.indexToLocFormat;
                                break;

                              case "hhea":
                                w = Br(g, _), m.tables.hhea = He.parse(w.data, w.offset), m.ascender = m.tables.hhea.ascender, 
                                m.descender = m.tables.hhea.descender, m.numberOfHMetrics = m.tables.hhea.numberOfHMetrics;
                                break;

                              case "hmtx":
                                l = _;
                                break;

                              case "ltag":
                                w = Br(g, _), r = We.parse(w.data, w.offset);
                                break;

                              case "maxp":
                                w = Br(g, _), m.tables.maxp = qe.parse(w.data, w.offset), m.numGlyphs = m.tables.maxp.numGlyphs;
                                break;

                              case "name":
                                p = _;
                                break;

                              case "OS/2":
                                w = Br(g, _), m.tables.os2 = at.parse(w.data, w.offset);
                                break;

                              case "post":
                                w = Br(g, _), m.tables.post = ht.parse(w.data, w.offset), m.glyphNames = new ye(m.tables.post);
                                break;

                              case "prep":
                                w = Br(g, _), f = new le.Parser(w.data, w.offset), m.tables.prep = f.parseByteList(_.length);
                                break;

                              case "glyf":
                                s = _;
                                break;

                              case "loca":
                                c = _;
                                break;

                              case "CFF ":
                                n = _;
                                break;

                              case "kern":
                                u = _;
                                break;

                              case "GPOS":
                                a = _;
                                break;

                              case "GSUB":
                                h = _;
                                break;

                              case "meta":
                                d = _;
                            }
                        }
                        var S = Br(g, p);
                        if (m.tables.name = ot.parse(S.data, S.offset, r), m.names = m.tables.name, s && c) {
                            var T = 0 === t, E = Br(g, c), M = Ur.parse(E.data, E.offset, m.numGlyphs, T), C = Br(g, s);
                            m.glyphs = Ft.parse(C.data, C.offset, M, m);
                        } else {
                            if (!n) throw new Error("Font doesn't contain TrueType or CFF outlines.");
                            var L = Br(g, n);
                            ze.parse(L.data, L.offset, m);
                        }
                        var R = Br(g, l);
                        if (Ve.parse(R.data, R.offset, m.numberOfHMetrics, m.numGlyphs, m.glyphs), function(e) {
                            for (var t, r = e.tables.cmap.glyphIndexMap, i = Object.keys(r), n = 0; n < i.length; n += 1) {
                                var o = i[n], s = r[o];
                                (t = e.glyphs.get(s)).addUnicode(parseInt(o));
                            }
                            for (var a = 0; a < e.glyphs.length; a += 1) t = e.glyphs.get(a), e.cffEncoding ? e.isCIDFont ? t.name = "gid" + a : t.name = e.cffEncoding.charset[a] : e.glyphNames.names && (t.name = e.glyphNames.glyphIndexToName(a));
                        }(m), u) {
                            var A = Br(g, u);
                            m.kerningPairs = Or.parse(A.data, A.offset);
                        } else m.kerningPairs = {};
                        if (a) {
                            var D = Br(g, a);
                            m.tables.gpos = Ir.parse(D.data, D.offset), m.position.init();
                        }
                        if (h) {
                            var P = Br(g, h);
                            m.tables.gsub = pt.parse(P.data, P.offset);
                        }
                        if (o) {
                            var k = Br(g, o);
                            m.tables.fvar = Dr.parse(k.data, k.offset, m.names);
                        }
                        if (d) {
                            var I = Br(g, d);
                            m.tables.meta = dt.parse(I.data, I.offset), m.metas = m.tables.meta;
                        }
                        return m;
                    }
                    t.Font = Cr, t.Glyph = xe, t.Path = A, t.BoundingBox = R, t._parse = le, t.parse = Fr, 
                    t.load = function(t, r) {
                        ("undefined" == typeof window ? function(t, r) {
                            e("fs").readFile(t, function(e, t) {
                                if (e) return r(e.message);
                                r(null, Lt(t));
                            });
                        } : function(e, t) {
                            var r = new XMLHttpRequest();
                            r.open("get", e, !0), r.responseType = "arraybuffer", r.onload = function() {
                                return r.response ? t(null, r.response) : t("Font could not be loaded: " + r.statusText);
                            }, r.onerror = function() {
                                t("Font could not be loaded");
                            }, r.send();
                        })(t, function(e, t) {
                            if (e) return r(e);
                            var i;
                            try {
                                i = Fr(t);
                            } catch (e) {
                                return r(e, null);
                            }
                            return r(null, i);
                        });
                    }, t.loadSync = function(t) {
                        return Fr(Lt(e("fs").readFileSync(t)));
                    }, Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                })("object" == typeof r && void 0 !== t ? r : this.opentype = {});
            }).call(this, e("buffer").Buffer);
        }, {
            buffer: 3,
            fs: 2
        } ],
        10: [ function(e, t, r) {
            var i, n, o = t.exports = {};
            function s() {
                throw new Error("setTimeout has not been defined");
            }
            function a() {
                throw new Error("clearTimeout has not been defined");
            }
            function h(e) {
                if (i === setTimeout) return setTimeout(e, 0);
                if ((i === s || !i) && setTimeout) return i = setTimeout, setTimeout(e, 0);
                try {
                    return i(e, 0);
                } catch (t) {
                    try {
                        return i.call(null, e, 0);
                    } catch (t) {
                        return i.call(this, e, 0);
                    }
                }
            }
            !function() {
                try {
                    i = "function" == typeof setTimeout ? setTimeout : s;
                } catch (e) {
                    i = s;
                }
                try {
                    n = "function" == typeof clearTimeout ? clearTimeout : a;
                } catch (e) {
                    n = a;
                }
            }();
            var l, u = [], c = !1, p = -1;
            function d() {
                c && l && (c = !1, l.length ? u = l.concat(u) : p = -1, u.length && f());
            }
            function f() {
                if (!c) {
                    var e = h(d);
                    c = !0;
                    for (var t = u.length; t; ) {
                        for (l = u, u = []; ++p < t; ) l && l[p].run();
                        p = -1, t = u.length;
                    }
                    l = null, c = !1, function(e) {
                        if (n === clearTimeout) return clearTimeout(e);
                        if ((n === a || !n) && clearTimeout) return n = clearTimeout, clearTimeout(e);
                        try {
                            n(e);
                        } catch (t) {
                            try {
                                return n.call(null, e);
                            } catch (t) {
                                return n.call(this, e);
                            }
                        }
                    }(e);
                }
            }
            function m(e, t) {
                this.fun = e, this.array = t;
            }
            function g() {}
            o.nextTick = function(e) {
                var t = new Array(arguments.length - 1);
                if (1 < arguments.length) for (var r = 1; r < arguments.length; r++) t[r - 1] = arguments[r];
                u.push(new m(e, t)), 1 !== u.length || c || h(f);
            }, m.prototype.run = function() {
                this.fun.apply(null, this.array);
            }, o.title = "browser", o.browser = !0, o.env = {}, o.argv = [], o.version = "", 
            o.versions = {}, o.on = g, o.addListener = g, o.once = g, o.off = g, o.removeListener = g, 
            o.removeAllListeners = g, o.emit = g, o.prependListener = g, o.prependOnceListener = g, 
            o.listeners = function(e) {
                return [];
            }, o.binding = function(e) {
                throw new Error("process.binding is not supported");
            }, o.cwd = function() {
                return "/";
            }, o.chdir = function(e) {
                throw new Error("process.chdir is not supported");
            }, o.umask = function() {
                return 0;
            };
        }, {} ],
        11: [ function(e, t, r) {
            !function(e) {
                "use strict";
                if (!e.fetch) {
                    var t = "URLSearchParams" in e, r = "Symbol" in e && "iterator" in Symbol, i = "FileReader" in e && "Blob" in e && function() {
                        try {
                            return new Blob(), !0;
                        } catch (e) {
                            return !1;
                        }
                    }(), n = "FormData" in e, o = "ArrayBuffer" in e;
                    if (o) var s = [ "[object Int8Array]", "[object Uint8Array]", "[object Uint8ClampedArray]", "[object Int16Array]", "[object Uint16Array]", "[object Int32Array]", "[object Uint32Array]", "[object Float32Array]", "[object Float64Array]" ], a = function(e) {
                        return e && DataView.prototype.isPrototypeOf(e);
                    }, h = ArrayBuffer.isView || function(e) {
                        return e && -1 < s.indexOf(Object.prototype.toString.call(e));
                    };
                    f.prototype.append = function(e, t) {
                        e = c(e), t = p(t);
                        var r = this.map[e];
                        this.map[e] = r ? r + "," + t : t;
                    }, f.prototype.delete = function(e) {
                        delete this.map[c(e)];
                    }, f.prototype.get = function(e) {
                        return e = c(e), this.has(e) ? this.map[e] : null;
                    }, f.prototype.has = function(e) {
                        return this.map.hasOwnProperty(c(e));
                    }, f.prototype.set = function(e, t) {
                        this.map[c(e)] = p(t);
                    }, f.prototype.forEach = function(e, t) {
                        for (var r in this.map) this.map.hasOwnProperty(r) && e.call(t, this.map[r], r, this);
                    }, f.prototype.keys = function() {
                        var e = [];
                        return this.forEach(function(t, r) {
                            e.push(r);
                        }), d(e);
                    }, f.prototype.values = function() {
                        var e = [];
                        return this.forEach(function(t) {
                            e.push(t);
                        }), d(e);
                    }, f.prototype.entries = function() {
                        var e = [];
                        return this.forEach(function(t, r) {
                            e.push([ r, t ]);
                        }), d(e);
                    }, r && (f.prototype[Symbol.iterator] = f.prototype.entries);
                    var l = [ "DELETE", "GET", "HEAD", "OPTIONS", "POST", "PUT" ];
                    x.prototype.clone = function() {
                        return new x(this, {
                            body: this._bodyInit
                        });
                    }, b.call(x.prototype), b.call(w.prototype), w.prototype.clone = function() {
                        return new w(this._bodyInit, {
                            status: this.status,
                            statusText: this.statusText,
                            headers: new f(this.headers),
                            url: this.url
                        });
                    }, w.error = function() {
                        var e = new w(null, {
                            status: 0,
                            statusText: ""
                        });
                        return e.type = "error", e;
                    };
                    var u = [ 301, 302, 303, 307, 308 ];
                    w.redirect = function(e, t) {
                        if (-1 === u.indexOf(t)) throw new RangeError("Invalid status code");
                        return new w(null, {
                            status: t,
                            headers: {
                                location: e
                            }
                        });
                    }, e.Headers = f, e.Request = x, e.Response = w, e.fetch = function(e, t) {
                        return new Promise(function(r, n) {
                            var o = new x(e, t), s = new XMLHttpRequest();
                            s.onload = function() {
                                var e, t, i = {
                                    status: s.status,
                                    statusText: s.statusText,
                                    headers: (e = s.getAllResponseHeaders() || "", t = new f(), e.replace(/\r?\n[\t ]+/g, " ").split(/\r?\n/).forEach(function(e) {
                                        var r = e.split(":"), i = r.shift().trim();
                                        if (i) {
                                            var n = r.join(":").trim();
                                            t.append(i, n);
                                        }
                                    }), t)
                                };
                                i.url = "responseURL" in s ? s.responseURL : i.headers.get("X-Request-URL");
                                var n = "response" in s ? s.response : s.responseText;
                                r(new w(n, i));
                            }, s.onerror = function() {
                                n(new TypeError("Network request failed"));
                            }, s.ontimeout = function() {
                                n(new TypeError("Network request failed"));
                            }, s.open(o.method, o.url, !0), "include" === o.credentials ? s.withCredentials = !0 : "omit" === o.credentials && (s.withCredentials = !1), 
                            "responseType" in s && i && (s.responseType = "blob"), o.headers.forEach(function(e, t) {
                                s.setRequestHeader(t, e);
                            }), s.send(void 0 === o._bodyInit ? null : o._bodyInit);
                        });
                    }, e.fetch.polyfill = !0;
                }
                function c(e) {
                    if ("string" != typeof e && (e = String(e)), /[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(e)) throw new TypeError("Invalid character in header field name");
                    return e.toLowerCase();
                }
                function p(e) {
                    return "string" != typeof e && (e = String(e)), e;
                }
                function d(e) {
                    var t = {
                        next: function() {
                            var t = e.shift();
                            return {
                                done: void 0 === t,
                                value: t
                            };
                        }
                    };
                    return r && (t[Symbol.iterator] = function() {
                        return t;
                    }), t;
                }
                function f(e) {
                    this.map = {}, e instanceof f ? e.forEach(function(e, t) {
                        this.append(t, e);
                    }, this) : Array.isArray(e) ? e.forEach(function(e) {
                        this.append(e[0], e[1]);
                    }, this) : e && Object.getOwnPropertyNames(e).forEach(function(t) {
                        this.append(t, e[t]);
                    }, this);
                }
                function m(e) {
                    if (e.bodyUsed) return Promise.reject(new TypeError("Already read"));
                    e.bodyUsed = !0;
                }
                function g(e) {
                    return new Promise(function(t, r) {
                        e.onload = function() {
                            t(e.result);
                        }, e.onerror = function() {
                            r(e.error);
                        };
                    });
                }
                function v(e) {
                    var t = new FileReader(), r = g(t);
                    return t.readAsArrayBuffer(e), r;
                }
                function y(e) {
                    if (e.slice) return e.slice(0);
                    var t = new Uint8Array(e.byteLength);
                    return t.set(new Uint8Array(e)), t.buffer;
                }
                function b() {
                    return this.bodyUsed = !1, this._initBody = function(e) {
                        if (this._bodyInit = e) if ("string" == typeof e) this._bodyText = e; else if (i && Blob.prototype.isPrototypeOf(e)) this._bodyBlob = e; else if (n && FormData.prototype.isPrototypeOf(e)) this._bodyFormData = e; else if (t && URLSearchParams.prototype.isPrototypeOf(e)) this._bodyText = e.toString(); else if (o && i && a(e)) this._bodyArrayBuffer = y(e.buffer), 
                        this._bodyInit = new Blob([ this._bodyArrayBuffer ]); else {
                            if (!o || !ArrayBuffer.prototype.isPrototypeOf(e) && !h(e)) throw new Error("unsupported BodyInit type");
                            this._bodyArrayBuffer = y(e);
                        } else this._bodyText = "";
                        this.headers.get("content-type") || ("string" == typeof e ? this.headers.set("content-type", "text/plain;charset=UTF-8") : this._bodyBlob && this._bodyBlob.type ? this.headers.set("content-type", this._bodyBlob.type) : t && URLSearchParams.prototype.isPrototypeOf(e) && this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8"));
                    }, i && (this.blob = function() {
                        var e = m(this);
                        if (e) return e;
                        if (this._bodyBlob) return Promise.resolve(this._bodyBlob);
                        if (this._bodyArrayBuffer) return Promise.resolve(new Blob([ this._bodyArrayBuffer ]));
                        if (this._bodyFormData) throw new Error("could not read FormData body as blob");
                        return Promise.resolve(new Blob([ this._bodyText ]));
                    }, this.arrayBuffer = function() {
                        return this._bodyArrayBuffer ? m(this) || Promise.resolve(this._bodyArrayBuffer) : this.blob().then(v);
                    }), this.text = function() {
                        var e, t, r, i = m(this);
                        if (i) return i;
                        if (this._bodyBlob) return e = this._bodyBlob, r = g(t = new FileReader()), t.readAsText(e), 
                        r;
                        if (this._bodyArrayBuffer) return Promise.resolve(function(e) {
                            for (var t = new Uint8Array(e), r = new Array(t.length), i = 0; i < t.length; i++) r[i] = String.fromCharCode(t[i]);
                            return r.join("");
                        }(this._bodyArrayBuffer));
                        if (this._bodyFormData) throw new Error("could not read FormData body as text");
                        return Promise.resolve(this._bodyText);
                    }, n && (this.formData = function() {
                        return this.text().then(_);
                    }), this.json = function() {
                        return this.text().then(JSON.parse);
                    }, this;
                }
                function x(e, t) {
                    var r, i, n = (t = t || {}).body;
                    if (e instanceof x) {
                        if (e.bodyUsed) throw new TypeError("Already read");
                        this.url = e.url, this.credentials = e.credentials, t.headers || (this.headers = new f(e.headers)), 
                        this.method = e.method, this.mode = e.mode, n || null == e._bodyInit || (n = e._bodyInit, 
                        e.bodyUsed = !0);
                    } else this.url = String(e);
                    if (this.credentials = t.credentials || this.credentials || "omit", !t.headers && this.headers || (this.headers = new f(t.headers)), 
                    this.method = (i = (r = t.method || this.method || "GET").toUpperCase(), -1 < l.indexOf(i) ? i : r), 
                    this.mode = t.mode || this.mode || null, this.referrer = null, ("GET" === this.method || "HEAD" === this.method) && n) throw new TypeError("Body not allowed for GET or HEAD requests");
                    this._initBody(n);
                }
                function _(e) {
                    var t = new FormData();
                    return e.trim().split("&").forEach(function(e) {
                        if (e) {
                            var r = e.split("="), i = r.shift().replace(/\+/g, " "), n = r.join("=").replace(/\+/g, " ");
                            t.append(decodeURIComponent(i), decodeURIComponent(n));
                        }
                    }), t;
                }
                function w(e, t) {
                    t || (t = {}), this.type = "default", this.status = void 0 === t.status ? 200 : t.status, 
                    this.ok = 200 <= this.status && this.status < 300, this.statusText = "statusText" in t ? t.statusText : "OK", 
                    this.headers = new f(t.headers), this.url = t.url || "", this._initBody(e);
                }
            }("undefined" != typeof self ? self : this);
        }, {} ],
        12: [ function(e, t, r) {
            "use strict";
            var i = e("./core/main");
            e("./core/constants"), e("./core/environment"), e("./core/error_helpers"), e("./core/helpers"), 
            e("./core/legacy"), e("./core/p5.Element"), e("./core/p5.Graphics"), e("./core/p5.Renderer"), 
            e("./core/p5.Renderer2D"), e("./core/rendering"), e("./core/shim"), e("./core/structure"), 
            e("./core/transform"), e("./core/shape/2d_primitives"), e("./core/shape/attributes"), 
            e("./core/shape/curves"), e("./core/shape/vertex"), e("./color/color_conversion"), 
            e("./color/creating_reading"), e("./color/p5.Color"), e("./color/setting"), e("./data/p5.TypedDict"), 
            e("./events/acceleration"), e("./events/keyboard"), e("./events/mouse"), e("./events/touch"), 
            e("./image/filters"), e("./image/image"), e("./image/loading_displaying"), e("./image/p5.Image"), 
            e("./image/pixels"), e("./io/files"), e("./io/p5.Table"), e("./io/p5.TableRow"), 
            e("./io/p5.XML"), e("./math/calculation"), e("./math/math"), e("./math/noise"), 
            e("./math/p5.Vector"), e("./math/random"), e("./math/trigonometry"), e("./typography/attributes"), 
            e("./typography/loading_displaying"), e("./typography/p5.Font"), e("./utilities/array_functions"), 
            e("./utilities/conversion"), e("./utilities/string_functions"), e("./utilities/time_date"), 
            e("./webgl/3d_primitives"), e("./webgl/interaction"), e("./webgl/light"), e("./webgl/loading"), 
            e("./webgl/material"), e("./webgl/p5.Camera"), e("./webgl/p5.Geometry"), e("./webgl/p5.Matrix"), 
            e("./webgl/p5.RendererGL.Immediate"), e("./webgl/p5.RendererGL"), e("./webgl/p5.RendererGL.Retained"), 
            e("./webgl/p5.Shader"), e("./webgl/p5.Texture"), e("./webgl/text"), e("./core/init"), 
            t.exports = i;
        }, {
            "./color/color_conversion": 13,
            "./color/creating_reading": 14,
            "./color/p5.Color": 15,
            "./color/setting": 16,
            "./core/constants": 17,
            "./core/environment": 18,
            "./core/error_helpers": 19,
            "./core/helpers": 20,
            "./core/init": 21,
            "./core/legacy": 22,
            "./core/main": 23,
            "./core/p5.Element": 24,
            "./core/p5.Graphics": 25,
            "./core/p5.Renderer": 26,
            "./core/p5.Renderer2D": 27,
            "./core/rendering": 28,
            "./core/shape/2d_primitives": 29,
            "./core/shape/attributes": 30,
            "./core/shape/curves": 31,
            "./core/shape/vertex": 32,
            "./core/shim": 33,
            "./core/structure": 34,
            "./core/transform": 35,
            "./data/p5.TypedDict": 36,
            "./events/acceleration": 37,
            "./events/keyboard": 38,
            "./events/mouse": 39,
            "./events/touch": 40,
            "./image/filters": 41,
            "./image/image": 42,
            "./image/loading_displaying": 43,
            "./image/p5.Image": 44,
            "./image/pixels": 45,
            "./io/files": 46,
            "./io/p5.Table": 47,
            "./io/p5.TableRow": 48,
            "./io/p5.XML": 49,
            "./math/calculation": 50,
            "./math/math": 51,
            "./math/noise": 52,
            "./math/p5.Vector": 53,
            "./math/random": 54,
            "./math/trigonometry": 55,
            "./typography/attributes": 56,
            "./typography/loading_displaying": 57,
            "./typography/p5.Font": 58,
            "./utilities/array_functions": 59,
            "./utilities/conversion": 60,
            "./utilities/string_functions": 61,
            "./utilities/time_date": 62,
            "./webgl/3d_primitives": 63,
            "./webgl/interaction": 64,
            "./webgl/light": 65,
            "./webgl/loading": 66,
            "./webgl/material": 67,
            "./webgl/p5.Camera": 68,
            "./webgl/p5.Geometry": 69,
            "./webgl/p5.Matrix": 70,
            "./webgl/p5.RendererGL": 73,
            "./webgl/p5.RendererGL.Immediate": 71,
            "./webgl/p5.RendererGL.Retained": 72,
            "./webgl/p5.Shader": 74,
            "./webgl/p5.Texture": 75,
            "./webgl/text": 76
        } ],
        13: [ function(e, t, r) {
            "use strict";
            var i = e("../core/main");
            i.ColorConversion = {}, i.ColorConversion._hsbaToHSLA = function(e) {
                var t = e[0], r = e[1], i = e[2], n = (2 - r) * i / 2;
                return 0 !== n && (1 === n ? r = 0 : n < .5 ? r /= 2 - r : r = r * i / (2 - 2 * n)), 
                [ t, r, n, e[3] ];
            }, i.ColorConversion._hsbaToRGBA = function(e) {
                var t = 6 * e[0], r = e[1], i = e[2], n = [];
                if (0 === r) n = [ i, i, i, e[3] ]; else {
                    var o, s, a, h = Math.floor(t), l = i * (1 - r), u = i * (1 - r * (t - h)), c = i * (1 - r * (1 + h - t));
                    a = 1 === h ? (o = u, s = i, l) : 2 === h ? (o = l, s = i, c) : 3 === h ? (o = l, 
                    s = u, i) : 4 === h ? (o = c, s = l, i) : 5 === h ? (o = i, s = l, u) : (o = i, 
                    s = c, l), n = [ o, s, a, e[3] ];
                }
                return n;
            }, i.ColorConversion._hslaToHSBA = function(e) {
                var t, r = e[0], i = e[1], n = e[2];
                return [ r, i = 2 * ((t = n < .5 ? (1 + i) * n : n + i - n * i) - n) / t, t, e[3] ];
            }, i.ColorConversion._hslaToRGBA = function(e) {
                var t = 6 * e[0], r = e[1], i = e[2], n = [];
                if (0 === r) n = [ i, i, i, e[3] ]; else {
                    var o, s = 2 * i - (o = i < .5 ? (1 + r) * i : i + r - i * r), a = function(e, t, r) {
                        return e < 0 ? e += 6 : 6 <= e && (e -= 6), e < 1 ? t + (r - t) * e : e < 3 ? r : e < 4 ? t + (r - t) * (4 - e) : t;
                    };
                    n = [ a(t + 2, s, o), a(t, s, o), a(t - 2, s, o), e[3] ];
                }
                return n;
            }, i.ColorConversion._rgbaToHSBA = function(e) {
                var t, r, i = e[0], n = e[1], o = e[2], s = Math.max(i, n, o), a = s - Math.min(i, n, o);
                return 0 === a ? r = t = 0 : (r = a / s, i === s ? t = (n - o) / a : n === s ? t = 2 + (o - i) / a : o === s && (t = 4 + (i - n) / a), 
                t < 0 ? t += 6 : 6 <= t && (t -= 6)), [ t / 6, r, s, e[3] ];
            }, i.ColorConversion._rgbaToHSLA = function(e) {
                var t, r, i = e[0], n = e[1], o = e[2], s = Math.max(i, n, o), a = Math.min(i, n, o), h = s + a, l = s - a;
                return 0 === l ? r = t = 0 : (r = h < 1 ? l / h : l / (2 - h), i === s ? t = (n - o) / l : n === s ? t = 2 + (o - i) / l : o === s && (t = 4 + (i - n) / l), 
                t < 0 ? t += 6 : 6 <= t && (t -= 6)), [ t / 6, r, h / 2, e[3] ];
            }, t.exports = i.ColorConversion;
        }, {
            "../core/main": 23
        } ],
        14: [ function(e, t, r) {
            "use strict";
            var i = e("../core/main"), n = e("../core/constants");
            e("./p5.Color"), e("../core/error_helpers"), i.prototype.alpha = function(e) {
                return i._validateParameters("alpha", arguments), this.color(e)._getAlpha();
            }, i.prototype.blue = function(e) {
                return i._validateParameters("blue", arguments), this.color(e)._getBlue();
            }, i.prototype.brightness = function(e) {
                return i._validateParameters("brightness", arguments), this.color(e)._getBrightness();
            }, i.prototype.color = function() {
                if (i._validateParameters("color", arguments), arguments[0] instanceof i.Color) return arguments[0];
                var e = arguments[0] instanceof Array ? arguments[0] : arguments;
                return new i.Color(this, e);
            }, i.prototype.green = function(e) {
                return i._validateParameters("green", arguments), this.color(e)._getGreen();
            }, i.prototype.hue = function(e) {
                return i._validateParameters("hue", arguments), this.color(e)._getHue();
            }, i.prototype.lerpColor = function(e, t, r) {
                i._validateParameters("lerpColor", arguments);
                var o, s, a, h, l, u, c = this._colorMode, p = this._colorMaxes;
                if (c === n.RGB) l = e.levels.map(function(e) {
                    return e / 255;
                }), u = t.levels.map(function(e) {
                    return e / 255;
                }); else if (c === n.HSB) e._getBrightness(), t._getBrightness(), l = e.hsba, u = t.hsba; else {
                    if (c !== n.HSL) throw new Error(c + "cannot be used for interpolation.");
                    e._getLightness(), t._getLightness(), l = e.hsla, u = t.hsla;
                }
                return r = Math.max(Math.min(r, 1), 0), void 0 === this.lerp && (this.lerp = function(e, t, r) {
                    return r * (t - e) + e;
                }), o = this.lerp(l[0], u[0], r), s = this.lerp(l[1], u[1], r), a = this.lerp(l[2], u[2], r), 
                h = this.lerp(l[3], u[3], r), o *= p[c][0], s *= p[c][1], a *= p[c][2], h *= p[c][3], 
                this.color(o, s, a, h);
            }, i.prototype.lightness = function(e) {
                return i._validateParameters("lightness", arguments), this.color(e)._getLightness();
            }, i.prototype.red = function(e) {
                return i._validateParameters("red", arguments), this.color(e)._getRed();
            }, i.prototype.saturation = function(e) {
                return i._validateParameters("saturation", arguments), this.color(e)._getSaturation();
            }, t.exports = i;
        }, {
            "../core/constants": 17,
            "../core/error_helpers": 19,
            "../core/main": 23,
            "./p5.Color": 15
        } ],
        15: [ function(e, t, r) {
            "use strict";
            var i = e("../core/main"), n = e("../core/constants"), o = e("./color_conversion");
            i.Color = function(e, t) {
                if (this._storeModeAndMaxes(e._colorMode, e._colorMaxes), this.mode !== n.RGB && this.mode !== n.HSL && this.mode !== n.HSB) throw new Error(this.mode + " is an invalid colorMode.");
                return this._array = i.Color._parseInputs.apply(this, t), this._calculateLevels(), 
                this;
            }, i.Color.prototype.toString = function(e) {
                var t = this.levels, r = this._array, i = r[3];
                switch (e) {
                  case "#rrggbb":
                    return "#".concat(t[0] < 16 ? "0".concat(t[0].toString(16)) : t[0].toString(16), t[1] < 16 ? "0".concat(t[1].toString(16)) : t[1].toString(16), t[2] < 16 ? "0".concat(t[2].toString(16)) : t[2].toString(16));

                  case "#rrggbbaa":
                    return "#".concat(t[0] < 16 ? "0".concat(t[0].toString(16)) : t[0].toString(16), t[1] < 16 ? "0".concat(t[1].toString(16)) : t[1].toString(16), t[2] < 16 ? "0".concat(t[2].toString(16)) : t[2].toString(16), t[3] < 16 ? "0".concat(t[2].toString(16)) : t[3].toString(16));

                  case "#rgb":
                    return "#".concat(Math.round(15 * r[0]).toString(16), Math.round(15 * r[1]).toString(16), Math.round(15 * r[2]).toString(16));

                  case "#rgba":
                    return "#".concat(Math.round(15 * r[0]).toString(16), Math.round(15 * r[1]).toString(16), Math.round(15 * r[2]).toString(16), Math.round(15 * r[3]).toString(16));

                  case "rgb":
                    return "rgb(".concat(t[0], ", ", t[1], ", ", t[2], ")");

                  case "rgb%":
                    return "rgb(".concat((100 * r[0]).toPrecision(3), "%, ", (100 * r[1]).toPrecision(3), "%, ", (100 * r[2]).toPrecision(3), "%)");

                  case "rgba%":
                    return "rgba(".concat((100 * r[0]).toPrecision(3), "%, ", (100 * r[1]).toPrecision(3), "%, ", (100 * r[2]).toPrecision(3), "%, ", (100 * r[3]).toPrecision(3), "%)");

                  case "hsb":
                  case "hsv":
                    return this.hsba || (this.hsba = o._rgbaToHSBA(this._array)), "hsb(".concat(this.hsba[0] * this.maxes[n.HSB][0], ", ", this.hsba[1] * this.maxes[n.HSB][1], ", ", this.hsba[2] * this.maxes[n.HSB][2], ")");

                  case "hsb%":
                  case "hsv%":
                    return this.hsba || (this.hsba = o._rgbaToHSBA(this._array)), "hsb(".concat((100 * this.hsba[0]).toPrecision(3), "%, ", (100 * this.hsba[1]).toPrecision(3), "%, ", (100 * this.hsba[2]).toPrecision(3), "%)");

                  case "hsba":
                  case "hsva":
                    return this.hsba || (this.hsba = o._rgbaToHSBA(this._array)), "hsba(".concat(this.hsba[0] * this.maxes[n.HSB][0], ", ", this.hsba[1] * this.maxes[n.HSB][1], ", ", this.hsba[2] * this.maxes[n.HSB][2], ", ", i, ")");

                  case "hsba%":
                  case "hsva%":
                    return this.hsba || (this.hsba = o._rgbaToHSBA(this._array)), "hsba(".concat((100 * this.hsba[0]).toPrecision(3), "%, ", (100 * this.hsba[1]).toPrecision(3), "%, ", (100 * this.hsba[2]).toPrecision(3), "%, ", (100 * i).toPrecision(3), "%)");

                  case "hsl":
                    return this.hsla || (this.hsla = o._rgbaToHSLA(this._array)), "hsl(".concat(this.hsla[0] * this.maxes[n.HSL][0], ", ", this.hsla[1] * this.maxes[n.HSL][1], ", ", this.hsla[2] * this.maxes[n.HSL][2], ")");

                  case "hsl%":
                    return this.hsla || (this.hsla = o._rgbaToHSLA(this._array)), "hsl(".concat((100 * this.hsla[0]).toPrecision(3), "%, ", (100 * this.hsla[1]).toPrecision(3), "%, ", (100 * this.hsla[2]).toPrecision(3), "%)");

                  case "hsla":
                    return this.hsla || (this.hsla = o._rgbaToHSLA(this._array)), "hsla(".concat(this.hsla[0] * this.maxes[n.HSL][0], ", ", this.hsla[1] * this.maxes[n.HSL][1], ", ", this.hsla[2] * this.maxes[n.HSL][2], ", ", i, ")");

                  case "hsla%":
                    return this.hsla || (this.hsla = o._rgbaToHSLA(this._array)), "hsl(".concat((100 * this.hsla[0]).toPrecision(3), "%, ", (100 * this.hsla[1]).toPrecision(3), "%, ", (100 * this.hsla[2]).toPrecision(3), "%, ", (100 * i).toPrecision(3), "%)");

                  case "rgba":
                  default:
                    return "rgba(".concat(t[0], ",", t[1], ",", t[2], ",", i, ")");
                }
            }, i.Color.prototype.setRed = function(e) {
                this._array[0] = e / this.maxes[n.RGB][0], this._calculateLevels();
            }, i.Color.prototype.setGreen = function(e) {
                this._array[1] = e / this.maxes[n.RGB][1], this._calculateLevels();
            }, i.Color.prototype.setBlue = function(e) {
                this._array[2] = e / this.maxes[n.RGB][2], this._calculateLevels();
            }, i.Color.prototype.setAlpha = function(e) {
                this._array[3] = e / this.maxes[this.mode][3], this._calculateLevels();
            }, i.Color.prototype._calculateLevels = function() {
                for (var e = this._array, t = this.levels = new Array(e.length), r = e.length - 1; 0 <= r; --r) t[r] = Math.round(255 * e[r]);
            }, i.Color.prototype._getAlpha = function() {
                return this._array[3] * this.maxes[this.mode][3];
            }, i.Color.prototype._storeModeAndMaxes = function(e, t) {
                this.mode = e, this.maxes = t;
            }, i.Color.prototype._getMode = function() {
                return this.mode;
            }, i.Color.prototype._getMaxes = function() {
                return this.maxes;
            }, i.Color.prototype._getBlue = function() {
                return this._array[2] * this.maxes[n.RGB][2];
            }, i.Color.prototype._getBrightness = function() {
                return this.hsba || (this.hsba = o._rgbaToHSBA(this._array)), this.hsba[2] * this.maxes[n.HSB][2];
            }, i.Color.prototype._getGreen = function() {
                return this._array[1] * this.maxes[n.RGB][1];
            }, i.Color.prototype._getHue = function() {
                return this.mode === n.HSB ? (this.hsba || (this.hsba = o._rgbaToHSBA(this._array)), 
                this.hsba[0] * this.maxes[n.HSB][0]) : (this.hsla || (this.hsla = o._rgbaToHSLA(this._array)), 
                this.hsla[0] * this.maxes[n.HSL][0]);
            }, i.Color.prototype._getLightness = function() {
                return this.hsla || (this.hsla = o._rgbaToHSLA(this._array)), this.hsla[2] * this.maxes[n.HSL][2];
            }, i.Color.prototype._getRed = function() {
                return this._array[0] * this.maxes[n.RGB][0];
            }, i.Color.prototype._getSaturation = function() {
                return this.mode === n.HSB ? (this.hsba || (this.hsba = o._rgbaToHSBA(this._array)), 
                this.hsba[1] * this.maxes[n.HSB][1]) : (this.hsla || (this.hsla = o._rgbaToHSLA(this._array)), 
                this.hsla[1] * this.maxes[n.HSL][1]);
            };
            var s = {
                aliceblue: "#f0f8ff",
                antiquewhite: "#faebd7",
                aqua: "#00ffff",
                aquamarine: "#7fffd4",
                azure: "#f0ffff",
                beige: "#f5f5dc",
                bisque: "#ffe4c4",
                black: "#000000",
                blanchedalmond: "#ffebcd",
                blue: "#0000ff",
                blueviolet: "#8a2be2",
                brown: "#a52a2a",
                burlywood: "#deb887",
                cadetblue: "#5f9ea0",
                chartreuse: "#7fff00",
                chocolate: "#d2691e",
                coral: "#ff7f50",
                cornflowerblue: "#6495ed",
                cornsilk: "#fff8dc",
                crimson: "#dc143c",
                cyan: "#00ffff",
                darkblue: "#00008b",
                darkcyan: "#008b8b",
                darkgoldenrod: "#b8860b",
                darkgray: "#a9a9a9",
                darkgreen: "#006400",
                darkgrey: "#a9a9a9",
                darkkhaki: "#bdb76b",
                darkmagenta: "#8b008b",
                darkolivegreen: "#556b2f",
                darkorange: "#ff8c00",
                darkorchid: "#9932cc",
                darkred: "#8b0000",
                darksalmon: "#e9967a",
                darkseagreen: "#8fbc8f",
                darkslateblue: "#483d8b",
                darkslategray: "#2f4f4f",
                darkslategrey: "#2f4f4f",
                darkturquoise: "#00ced1",
                darkviolet: "#9400d3",
                deeppink: "#ff1493",
                deepskyblue: "#00bfff",
                dimgray: "#696969",
                dimgrey: "#696969",
                dodgerblue: "#1e90ff",
                firebrick: "#b22222",
                floralwhite: "#fffaf0",
                forestgreen: "#228b22",
                fuchsia: "#ff00ff",
                gainsboro: "#dcdcdc",
                ghostwhite: "#f8f8ff",
                gold: "#ffd700",
                goldenrod: "#daa520",
                gray: "#808080",
                green: "#008000",
                greenyellow: "#adff2f",
                grey: "#808080",
                honeydew: "#f0fff0",
                hotpink: "#ff69b4",
                indianred: "#cd5c5c",
                indigo: "#4b0082",
                ivory: "#fffff0",
                khaki: "#f0e68c",
                lavender: "#e6e6fa",
                lavenderblush: "#fff0f5",
                lawngreen: "#7cfc00",
                lemonchiffon: "#fffacd",
                lightblue: "#add8e6",
                lightcoral: "#f08080",
                lightcyan: "#e0ffff",
                lightgoldenrodyellow: "#fafad2",
                lightgray: "#d3d3d3",
                lightgreen: "#90ee90",
                lightgrey: "#d3d3d3",
                lightpink: "#ffb6c1",
                lightsalmon: "#ffa07a",
                lightseagreen: "#20b2aa",
                lightskyblue: "#87cefa",
                lightslategray: "#778899",
                lightslategrey: "#778899",
                lightsteelblue: "#b0c4de",
                lightyellow: "#ffffe0",
                lime: "#00ff00",
                limegreen: "#32cd32",
                linen: "#faf0e6",
                magenta: "#ff00ff",
                maroon: "#800000",
                mediumaquamarine: "#66cdaa",
                mediumblue: "#0000cd",
                mediumorchid: "#ba55d3",
                mediumpurple: "#9370db",
                mediumseagreen: "#3cb371",
                mediumslateblue: "#7b68ee",
                mediumspringgreen: "#00fa9a",
                mediumturquoise: "#48d1cc",
                mediumvioletred: "#c71585",
                midnightblue: "#191970",
                mintcream: "#f5fffa",
                mistyrose: "#ffe4e1",
                moccasin: "#ffe4b5",
                navajowhite: "#ffdead",
                navy: "#000080",
                oldlace: "#fdf5e6",
                olive: "#808000",
                olivedrab: "#6b8e23",
                orange: "#ffa500",
                orangered: "#ff4500",
                orchid: "#da70d6",
                palegoldenrod: "#eee8aa",
                palegreen: "#98fb98",
                paleturquoise: "#afeeee",
                palevioletred: "#db7093",
                papayawhip: "#ffefd5",
                peachpuff: "#ffdab9",
                peru: "#cd853f",
                pink: "#ffc0cb",
                plum: "#dda0dd",
                powderblue: "#b0e0e6",
                purple: "#800080",
                red: "#ff0000",
                rosybrown: "#bc8f8f",
                royalblue: "#4169e1",
                saddlebrown: "#8b4513",
                salmon: "#fa8072",
                sandybrown: "#f4a460",
                seagreen: "#2e8b57",
                seashell: "#fff5ee",
                sienna: "#a0522d",
                silver: "#c0c0c0",
                skyblue: "#87ceeb",
                slateblue: "#6a5acd",
                slategray: "#708090",
                slategrey: "#708090",
                snow: "#fffafa",
                springgreen: "#00ff7f",
                steelblue: "#4682b4",
                tan: "#d2b48c",
                teal: "#008080",
                thistle: "#d8bfd8",
                tomato: "#ff6347",
                turquoise: "#40e0d0",
                violet: "#ee82ee",
                wheat: "#f5deb3",
                white: "#ffffff",
                whitesmoke: "#f5f5f5",
                yellow: "#ffff00",
                yellowgreen: "#9acd32"
            }, a = /\s*/, h = /(\d{1,3})/, l = /((?:\d+(?:\.\d+)?)|(?:\.\d+))/, u = new RegExp(l.source + "%"), c = {
                HEX3: /^#([a-f0-9])([a-f0-9])([a-f0-9])$/i,
                HEX4: /^#([a-f0-9])([a-f0-9])([a-f0-9])([a-f0-9])$/i,
                HEX6: /^#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/i,
                HEX8: /^#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/i,
                RGB: new RegExp([ "^rgb\\(", h.source, ",", h.source, ",", h.source, "\\)$" ].join(a.source), "i"),
                RGB_PERCENT: new RegExp([ "^rgb\\(", u.source, ",", u.source, ",", u.source, "\\)$" ].join(a.source), "i"),
                RGBA: new RegExp([ "^rgba\\(", h.source, ",", h.source, ",", h.source, ",", l.source, "\\)$" ].join(a.source), "i"),
                RGBA_PERCENT: new RegExp([ "^rgba\\(", u.source, ",", u.source, ",", u.source, ",", l.source, "\\)$" ].join(a.source), "i"),
                HSL: new RegExp([ "^hsl\\(", h.source, ",", u.source, ",", u.source, "\\)$" ].join(a.source), "i"),
                HSLA: new RegExp([ "^hsla\\(", h.source, ",", u.source, ",", u.source, ",", l.source, "\\)$" ].join(a.source), "i"),
                HSB: new RegExp([ "^hsb\\(", h.source, ",", u.source, ",", u.source, "\\)$" ].join(a.source), "i"),
                HSBA: new RegExp([ "^hsba\\(", h.source, ",", u.source, ",", u.source, ",", l.source, "\\)$" ].join(a.source), "i")
            };
            i.Color._parseInputs = function(e, t, r, a) {
                var h, l = arguments.length, u = this.mode, p = this.maxes[u], d = [];
                if (3 <= l) {
                    for (d[0] = e / p[0], d[1] = t / p[1], d[2] = r / p[2], d[3] = "number" == typeof a ? a / p[3] : 1, 
                    h = d.length - 1; 0 <= h; --h) {
                        var f = d[h];
                        f < 0 ? d[h] = 0 : 1 < f && (d[h] = 1);
                    }
                    return u === n.HSL ? o._hslaToRGBA(d) : u === n.HSB ? o._hsbaToRGBA(d) : d;
                }
                if (1 === l && "string" == typeof e) {
                    var m = e.trim().toLowerCase();
                    if (s[m]) return i.Color._parseInputs.call(this, s[m]);
                    if (c.HEX3.test(m)) return (d = c.HEX3.exec(m).slice(1).map(function(e) {
                        return parseInt(e + e, 16) / 255;
                    }))[3] = 1, d;
                    if (c.HEX6.test(m)) return (d = c.HEX6.exec(m).slice(1).map(function(e) {
                        return parseInt(e, 16) / 255;
                    }))[3] = 1, d;
                    if (c.HEX4.test(m)) return c.HEX4.exec(m).slice(1).map(function(e) {
                        return parseInt(e + e, 16) / 255;
                    });
                    if (c.HEX8.test(m)) return c.HEX8.exec(m).slice(1).map(function(e) {
                        return parseInt(e, 16) / 255;
                    });
                    if (c.RGB.test(m)) return (d = c.RGB.exec(m).slice(1).map(function(e) {
                        return e / 255;
                    }))[3] = 1, d;
                    if (c.RGB_PERCENT.test(m)) return (d = c.RGB_PERCENT.exec(m).slice(1).map(function(e) {
                        return parseFloat(e) / 100;
                    }))[3] = 1, d;
                    if (c.RGBA.test(m)) return c.RGBA.exec(m).slice(1).map(function(e, t) {
                        return 3 === t ? parseFloat(e) : e / 255;
                    });
                    if (c.RGBA_PERCENT.test(m)) return c.RGBA_PERCENT.exec(m).slice(1).map(function(e, t) {
                        return 3 === t ? parseFloat(e) : parseFloat(e) / 100;
                    });
                    if (c.HSL.test(m) ? (d = c.HSL.exec(m).slice(1).map(function(e, t) {
                        return 0 === t ? parseInt(e, 10) / 360 : parseInt(e, 10) / 100;
                    }))[3] = 1 : c.HSLA.test(m) && (d = c.HSLA.exec(m).slice(1).map(function(e, t) {
                        return 0 === t ? parseInt(e, 10) / 360 : 3 === t ? parseFloat(e) : parseInt(e, 10) / 100;
                    })), (d = d.map(function(e) {
                        return Math.max(Math.min(e, 1), 0);
                    })).length) return o._hslaToRGBA(d);
                    if (c.HSB.test(m) ? (d = c.HSB.exec(m).slice(1).map(function(e, t) {
                        return 0 === t ? parseInt(e, 10) / 360 : parseInt(e, 10) / 100;
                    }))[3] = 1 : c.HSBA.test(m) && (d = c.HSBA.exec(m).slice(1).map(function(e, t) {
                        return 0 === t ? parseInt(e, 10) / 360 : 3 === t ? parseFloat(e) : parseInt(e, 10) / 100;
                    })), d.length) {
                        for (h = d.length - 1; 0 <= h; --h) d[h] = Math.max(Math.min(d[h], 1), 0);
                        return o._hsbaToRGBA(d);
                    }
                    d = [ 1, 1, 1, 1 ];
                } else {
                    if (1 !== l && 2 !== l || "number" != typeof e) throw new Error(arguments + "is not a valid color representation.");
                    d[0] = e / p[2], d[1] = e / p[2], d[2] = e / p[2], d[3] = "number" == typeof t ? t / p[3] : 1, 
                    d = d.map(function(e) {
                        return Math.max(Math.min(e, 1), 0);
                    });
                }
                return d;
            }, t.exports = i.Color;
        }, {
            "../core/constants": 17,
            "../core/main": 23,
            "./color_conversion": 13
        } ],
        16: [ function(e, t, r) {
            "use strict";
            var i = e("../core/main"), n = e("../core/constants");
            e("./p5.Color"), i.prototype.background = function() {
                return this._renderer.background.apply(this._renderer, arguments), this;
            }, i.prototype.clear = function() {
                return this._renderer.clear(), this;
            }, i.prototype.colorMode = function(e, t, r, o, s) {
                if (i._validateParameters("colorMode", arguments), e === n.RGB || e === n.HSB || e === n.HSL) {
                    this._colorMode = e;
                    var a = this._colorMaxes[e];
                    2 === arguments.length ? (a[0] = t, a[1] = t, a[2] = t, a[3] = t) : 4 === arguments.length ? (a[0] = t, 
                    a[1] = r, a[2] = o) : 5 === arguments.length && (a[0] = t, a[1] = r, a[2] = o, a[3] = s);
                }
                return this;
            }, i.prototype.fill = function() {
                return this._renderer._setProperty("_fillSet", !0), this._renderer._setProperty("_doFill", !0), 
                this._renderer.fill.apply(this._renderer, arguments), this;
            }, i.prototype.noFill = function() {
                return this._renderer._setProperty("_doFill", !1), this;
            }, i.prototype.noStroke = function() {
                return this._renderer._setProperty("_doStroke", !1), this;
            }, i.prototype.stroke = function() {
                return this._renderer._setProperty("_strokeSet", !0), this._renderer._setProperty("_doStroke", !0), 
                this._renderer.stroke.apply(this._renderer, arguments), this;
            }, t.exports = i;
        }, {
            "../core/constants": 17,
            "../core/main": 23,
            "./p5.Color": 15
        } ],
        17: [ function(e, t, r) {
            "use strict";
            var i = Math.PI;
            t.exports = {
                P2D: "p2d",
                WEBGL: "webgl",
                ARROW: "default",
                CROSS: "crosshair",
                HAND: "pointer",
                MOVE: "move",
                TEXT: "text",
                WAIT: "wait",
                HALF_PI: i / 2,
                PI: i,
                QUARTER_PI: i / 4,
                TAU: 2 * i,
                TWO_PI: 2 * i,
                DEGREES: "degrees",
                RADIANS: "radians",
                DEG_TO_RAD: i / 180,
                RAD_TO_DEG: 180 / i,
                CORNER: "corner",
                CORNERS: "corners",
                RADIUS: "radius",
                RIGHT: "right",
                LEFT: "left",
                CENTER: "center",
                TOP: "top",
                BOTTOM: "bottom",
                BASELINE: "alphabetic",
                POINTS: 0,
                LINES: 1,
                LINE_STRIP: 3,
                LINE_LOOP: 2,
                TRIANGLES: 4,
                TRIANGLE_FAN: 6,
                TRIANGLE_STRIP: 5,
                QUADS: "quads",
                QUAD_STRIP: "quad_strip",
                CLOSE: "close",
                OPEN: "open",
                CHORD: "chord",
                PIE: "pie",
                PROJECT: "square",
                SQUARE: "butt",
                ROUND: "round",
                BEVEL: "bevel",
                MITER: "miter",
                RGB: "rgb",
                HSB: "hsb",
                HSL: "hsl",
                AUTO: "auto",
                ALT: 18,
                BACKSPACE: 8,
                CONTROL: 17,
                DELETE: 46,
                DOWN_ARROW: 40,
                ENTER: 13,
                ESCAPE: 27,
                LEFT_ARROW: 37,
                OPTION: 18,
                RETURN: 13,
                RIGHT_ARROW: 39,
                SHIFT: 16,
                TAB: 9,
                UP_ARROW: 38,
                BLEND: "source-over",
                ADD: "lighter",
                DARKEST: "darken",
                LIGHTEST: "lighten",
                DIFFERENCE: "difference",
                SUBTRACT: "subtract",
                EXCLUSION: "exclusion",
                MULTIPLY: "multiply",
                SCREEN: "screen",
                REPLACE: "copy",
                OVERLAY: "overlay",
                HARD_LIGHT: "hard-light",
                SOFT_LIGHT: "soft-light",
                DODGE: "color-dodge",
                BURN: "color-burn",
                THRESHOLD: "threshold",
                GRAY: "gray",
                OPAQUE: "opaque",
                INVERT: "invert",
                POSTERIZE: "posterize",
                DILATE: "dilate",
                ERODE: "erode",
                BLUR: "blur",
                NORMAL: "normal",
                ITALIC: "italic",
                BOLD: "bold",
                BOLDITALIC: "bold italic",
                _DEFAULT_TEXT_FILL: "#000000",
                _DEFAULT_LEADMULT: 1.25,
                _CTX_MIDDLE: "middle",
                LINEAR: "linear",
                QUADRATIC: "quadratic",
                BEZIER: "bezier",
                CURVE: "curve",
                STROKE: "stroke",
                FILL: "fill",
                TEXTURE: "texture",
                IMMEDIATE: "immediate",
                IMAGE: "image",
                NEAREST: "nearest",
                REPEAT: "repeat",
                CLAMP: "clamp",
                MIRROR: "mirror",
                LANDSCAPE: "landscape",
                PORTRAIT: "portrait",
                _DEFAULT_STROKE: "#000000",
                _DEFAULT_FILL: "#FFFFFF",
                GRID: "grid",
                AXES: "axes"
            };
        }, {} ],
        18: [ function(e, t, r) {
            "use strict";
            var i = e("./main"), n = e("./constants"), o = [ n.ARROW, n.CROSS, n.HAND, n.MOVE, n.TEXT, n.WAIT ];
            i.prototype._frameRate = 0, i.prototype._lastFrameTime = window.performance.now(), 
            i.prototype._targetFrameRate = 60;
            var s = window.print;
            function a() {
                return window.innerWidth || document.documentElement && document.documentElement.clientWidth || document.body && document.body.clientWidth || 0;
            }
            function h() {
                return window.innerHeight || document.documentElement && document.documentElement.clientHeight || document.body && document.body.clientHeight || 0;
            }
            i.prototype.print = function() {
                arguments.length ? console.log.apply(console, arguments) : s();
            }, i.prototype.frameCount = 0, i.prototype.focused = document.hasFocus(), i.prototype.cursor = function(e, t, r) {
                var i = "auto", n = this._curElement.elt;
                if (-1 < o.indexOf(e)) i = e; else if ("string" == typeof e) {
                    var s = "";
                    t && r && "number" == typeof t && "number" == typeof r && (s = t + " " + r), i = "http://" === e.substring(0, 7) || "https://" === e.substring(0, 8) ? "url(" + e + ") " + s + ", auto" : /\.(cur|jpg|jpeg|gif|png|CUR|JPG|JPEG|GIF|PNG)$/.test(e) ? "url(" + e + ") " + s + ", auto" : e;
                }
                n.style.cursor = i;
            }, i.prototype.frameRate = function(e) {
                return i._validateParameters("frameRate", arguments), "number" != typeof e || e < 0 ? this._frameRate : (this._setProperty("_targetFrameRate", e), 
                this);
            }, i.prototype.getFrameRate = function() {
                return this.frameRate();
            }, i.prototype.setFrameRate = function(e) {
                return this.frameRate(e);
            }, i.prototype.noCursor = function() {
                this._curElement.elt.style.cursor = "none";
            }, i.prototype.displayWidth = screen.width, i.prototype.displayHeight = screen.height, 
            i.prototype.windowWidth = a(), i.prototype.windowHeight = h(), i.prototype._onresize = function(e) {
                this._setProperty("windowWidth", a()), this._setProperty("windowHeight", h());
                var t, r = this._isGlobal ? window : this;
                "function" == typeof r.windowResized && (void 0 === (t = r.windowResized(e)) || t || e.preventDefault());
            }, i.prototype.width = 0, i.prototype.height = 0, i.prototype.fullscreen = function(e) {
                if (i._validateParameters("fullscreen", arguments), void 0 === e) return document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;
                e ? function(e) {
                    if (!(document.fullscreenEnabled || document.webkitFullscreenEnabled || document.mozFullScreenEnabled || document.msFullscreenEnabled)) throw new Error("Fullscreen not enabled in this browser.");
                    e.requestFullscreen ? e.requestFullscreen() : e.mozRequestFullScreen ? e.mozRequestFullScreen() : e.webkitRequestFullscreen ? e.webkitRequestFullscreen() : e.msRequestFullscreen && e.msRequestFullscreen();
                }(document.documentElement) : document.exitFullscreen ? document.exitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitExitFullscreen ? document.webkitExitFullscreen() : document.msExitFullscreen && document.msExitFullscreen();
            }, i.prototype.pixelDensity = function(e) {
                var t;
                return i._validateParameters("pixelDensity", arguments), "number" == typeof e ? (e !== this._pixelDensity && (this._pixelDensity = e, 
                this._pixelsDirty = !0), (t = this).resizeCanvas(this.width, this.height, !0)) : t = this._pixelDensity, 
                t;
            }, i.prototype.displayDensity = function() {
                return window.devicePixelRatio;
            }, i.prototype.getURL = function() {
                return location.href;
            }, i.prototype.getURLPath = function() {
                return location.pathname.split("/").filter(function(e) {
                    return "" !== e;
                });
            }, i.prototype.getURLParams = function() {
                for (var e, t = /[?&]([^&=]+)(?:[&=])([^&=]+)/gim, r = {}; null != (e = t.exec(location.search)); ) e.index === t.lastIndex && t.lastIndex++, 
                r[e[1]] = e[2];
                return r;
            }, t.exports = i;
        }, {
            "./constants": 17,
            "./main": 23
        } ],
        19: [ function(e, t, r) {
            "use strict";
            var i = e("./main");
            e("./constants"), i._validateParameters = i._friendlyFileLoadError = i._friendlyError = function() {};
            var n = null, o = function(t, r) {
                var o, s;
                r || (r = console.log.bind(console)), n || (o = {}, (n = [].concat((s = function(e) {
                    return Object.getOwnPropertyNames(e).filter(function(e) {
                        return "_" !== e[0] && !(e in o) && (o[e] = !0);
                    }).map(function(t) {
                        var r;
                        return r = "function" == typeof e[t] ? "function" : t === t.toUpperCase() ? "constant" : "variable", 
                        {
                            name: t,
                            type: r
                        };
                    });
                })(i.prototype), s(e("./constants")))).sort(function(e, t) {
                    return t.name.length - e.name.length;
                })), n.some(function(e) {
                    if (t.message && null !== t.message.match("\\W?" + e.name + "\\W")) return r("Did you just try to use p5.js's " + e.name + ("function" === e.type ? "() " : " ") + e.type + "? If so, you may want to move it into your sketch's setup() function.\n\nFor more details, see: https://github.com/processing/p5.js/wiki/p5.js-overview#why-cant-i-assign-variables-using-p5-functions-and-variables-before-setup"), 
                    !0;
                });
            };
            i.prototype._helpForMisusedAtTopLevelCode = o, "complete" !== document.readyState && (window.addEventListener("error", o, !1), 
            window.addEventListener("load", function() {
                window.removeEventListener("error", o, !1);
            })), t.exports = i;
        }, {
            "../../docs/reference/data.json": void 0,
            "./constants": 17,
            "./main": 23
        } ],
        20: [ function(e, t, r) {
            "use strict";
            var i = e("./constants");
            t.exports = {
                modeAdjust: function(e, t, r, n, o) {
                    return o === i.CORNER ? {
                        x: e,
                        y: t,
                        w: r,
                        h: n
                    } : o === i.CORNERS ? {
                        x: e,
                        y: t,
                        w: r - e,
                        h: n - t
                    } : o === i.RADIUS ? {
                        x: e - r,
                        y: t - n,
                        w: 2 * r,
                        h: 2 * n
                    } : o === i.CENTER ? {
                        x: e - .5 * r,
                        y: t - .5 * n,
                        w: r,
                        h: n
                    } : void 0;
                }
            };
        }, {
            "./constants": 17
        } ],
        21: [ function(e, t, r) {
            "use strict";
            var i = e("../core/main"), n = function() {
                window.mocha || (window.setup && "function" == typeof window.setup || window.draw && "function" == typeof window.draw) && !i.instance && new i();
            };
            "complete" === document.readyState ? n() : window.addEventListener("load", n, !1);
        }, {
            "../core/main": 23
        } ],
        22: [ function(e, t, r) {
            "use strict";
            var i = e("./main");
            i.prototype.pushStyle = function() {
                throw new Error("pushStyle() not used, see push()");
            }, i.prototype.popStyle = function() {
                throw new Error("popStyle() not used, see pop()");
            }, i.prototype.popMatrix = function() {
                throw new Error("popMatrix() not used, see pop()");
            }, i.prototype.printMatrix = function() {
                throw new Error("printMatrix() is not implemented in p5.js, refer to [https://simonsarris.com/a-transformation-class-for-canvas-to-keep-track-of-the-transformation-matrix/] to add your own implementation.");
            }, i.prototype.pushMatrix = function() {
                throw new Error("pushMatrix() not used, see push()");
            }, t.exports = i;
        }, {
            "./main": 23
        } ],
        23: [ function(e, t, r) {
            "use strict";
            e("./shim");
            var i = e("./constants"), n = function(e, t, r) {
                "boolean" == typeof t && void 0 === r && (r = t, t = void 0), this._setupDone = !1, 
                this._pixelDensity = Math.ceil(window.devicePixelRatio) || 1, this._userNode = t, 
                this._curElement = null, this._elements = [], this._glAttributes = null, this._requestAnimId = 0, 
                this._preloadCount = 0, this._isGlobal = !1, this._loop = !0, this._initializeInstanceVariables(), 
                this._defaultCanvasSize = {
                    width: 100,
                    height: 100
                }, this._events = {
                    mousemove: null,
                    mousedown: null,
                    mouseup: null,
                    dragend: null,
                    dragover: null,
                    click: null,
                    dblclick: null,
                    mouseover: null,
                    mouseout: null,
                    keydown: null,
                    keyup: null,
                    keypress: null,
                    touchstart: null,
                    touchmove: null,
                    touchend: null,
                    resize: null,
                    blur: null
                }, this._events.wheel = null, this._loadingScreenId = "p5_loading", this._registeredMethods = {};
                for (var i = Object.getOwnPropertyNames(n.prototype._registeredMethods), o = 0; o < i.length; o++) {
                    var s = i[o];
                    this._registeredMethods[s] = n.prototype._registeredMethods[s].slice();
                }
                window.DeviceOrientationEvent && (this._events.deviceorientation = null), window.DeviceMotionEvent && !window._isNodeWebkit && (this._events.devicemotion = null), 
                this._start = function() {
                    this._userNode && "string" == typeof this._userNode && (this._userNode = document.getElementById(this._userNode));
                    var e = (this._isGlobal ? window : this).preload;
                    if (e) {
                        var t = document.getElementById(this._loadingScreenId);
                        t || ((t = document.createElement("div")).innerHTML = "Loading...", t.style.position = "absolute", 
                        t.id = this._loadingScreenId, (this._userNode || document.body).appendChild(t));
                        var r = this._preloadMethods;
                        for (var i in r) {
                            r[i] = r[i] || n;
                            var o = r[i];
                            o !== n.prototype && o !== n || (this._isGlobal && (window[i] = this._wrapPreload(this, i)), 
                            o = this), this._registeredPreloadMethods[i] = o[i], o[i] = this._wrapPreload(o, i);
                        }
                        e(), this._runIfPreloadsAreDone();
                    } else this._setup(), this._draw();
                }.bind(this), this._runIfPreloadsAreDone = function() {
                    var e = this._isGlobal ? window : this;
                    if (0 === e._preloadCount) {
                        var t = document.getElementById(e._loadingScreenId);
                        t && t.parentNode.removeChild(t), e._setup(), e._draw();
                    }
                }, this._decrementPreload = function() {
                    var e = this._isGlobal ? window : this;
                    "function" == typeof e.preload && (e._setProperty("_preloadCount", e._preloadCount - 1), 
                    e._runIfPreloadsAreDone());
                }, this._wrapPreload = function(e, t) {
                    return function() {
                        return this._incrementPreload(), this._registeredPreloadMethods[t].apply(e, arguments);
                    }.bind(this);
                }, this._incrementPreload = function() {
                    var e = this._isGlobal ? window : this;
                    e._setProperty("_preloadCount", e._preloadCount + 1);
                }, this._setup = function() {
                    this.createCanvas(this._defaultCanvasSize.width, this._defaultCanvasSize.height, "p2d");
                    var e = this._isGlobal ? window : this;
                    if ("function" == typeof e.preload) for (var t in this._preloadMethods) e[t] = this._preloadMethods[t][t], 
                    e[t] && this && (e[t] = e[t].bind(this));
                    "function" == typeof e.setup && e.setup();
                    for (var r = document.getElementsByTagName("canvas"), i = 0; i < r.length; i++) {
                        var n = r[i];
                        "true" === n.dataset.hidden && (n.style.visibility = "", delete n.dataset.hidden);
                    }
                    this._setupDone = !0;
                }.bind(this), this._draw = function() {
                    var e = window.performance.now(), t = e - this._lastFrameTime, r = 1e3 / this._targetFrameRate;
                    (!this._loop || r - 5 <= t) && (this.redraw(), this._frameRate = 1e3 / (e - this._lastFrameTime), 
                    this._lastFrameTime = e, void 0 !== this._updateMouseCoords && this._updateMouseCoords()), 
                    this._loop && (this._requestAnimId = window.requestAnimationFrame(this._draw));
                }.bind(this), this._setProperty = function(e, t) {
                    this[e] = t, this._isGlobal && (window[e] = t);
                }.bind(this), this.remove = function() {
                    var e = document.getElementById(this._loadingScreenId);
                    if (e && (e.parentNode.removeChild(e), this._incrementPreload()), this._curElement) {
                        for (var t in this._loop = !1, this._requestAnimId && window.cancelAnimationFrame(this._requestAnimId), 
                        this._events) window.removeEventListener(t, this._events[t]);
                        for (var r = 0; r < this._elements.length; r++) {
                            var i = this._elements[r];
                            for (var o in i.elt.parentNode && i.elt.parentNode.removeChild(i.elt), i._events) i.elt.removeEventListener(o, i._events[o]);
                        }
                        var s = this;
                        this._registeredMethods.remove.forEach(function(e) {
                            void 0 !== e && e.call(s);
                        });
                    }
                    if (this._isGlobal) {
                        for (var a in n.prototype) try {
                            delete window[a];
                        } catch (e) {
                            window[a] = void 0;
                        }
                        for (var h in this) if (this.hasOwnProperty(h)) try {
                            delete window[h];
                        } catch (e) {
                            window[h] = void 0;
                        }
                        n.instance = null;
                    }
                }.bind(this), this._registeredMethods.init.forEach(function(e) {
                    void 0 !== e && e.call(this);
                }, this);
                var a = this._createFriendlyGlobalFunctionBinder();
                if (e) e(this); else {
                    for (var h in this._isGlobal = !0, n.instance = this, n.prototype) if ("function" == typeof n.prototype[h]) {
                        var l = h.substring(2);
                        this._events.hasOwnProperty(l) || (Math.hasOwnProperty(h) && Math[h] === n.prototype[h] ? a(h, n.prototype[h]) : a(h, n.prototype[h].bind(this)));
                    } else a(h, n.prototype[h]);
                    for (var u in this) this.hasOwnProperty(u) && a(u, this[u]);
                }
                for (var c in this._events) {
                    var p = this["_on" + c];
                    if (p) {
                        var d = p.bind(this);
                        window.addEventListener(c, d, {
                            passive: !1
                        }), this._events[c] = d;
                    }
                }
                var f = function() {
                    this._setProperty("focused", !0);
                }.bind(this), m = function() {
                    this._setProperty("focused", !1);
                }.bind(this);
                window.addEventListener("focus", f), window.addEventListener("blur", m), this.registerMethod("remove", function() {
                    window.removeEventListener("focus", f), window.removeEventListener("blur", m);
                }), r ? this._start() : "complete" === document.readyState ? this._start() : window.addEventListener("load", this._start.bind(this), !1);
            };
            for (var o in n.prototype._initializeInstanceVariables = function() {
                this._styles = [], this._bezierDetail = 20, this._curveDetail = 20, this._colorMode = i.RGB, 
                this._colorMaxes = {
                    rgb: [ 255, 255, 255, 255 ],
                    hsb: [ 360, 100, 100, 1 ],
                    hsl: [ 360, 100, 100, 1 ]
                }, this._pixelsDirty = !0, this._downKeys = {};
            }, n.instance = null, n.disableFriendlyErrors = !1, i) n.prototype[o] = i[o];
            n.prototype._preloadMethods = {
                loadJSON: n.prototype,
                loadImage: n.prototype,
                loadStrings: n.prototype,
                loadXML: n.prototype,
                loadBytes: n.prototype,
                loadTable: n.prototype,
                loadFont: n.prototype,
                loadModel: n.prototype,
                loadShader: n.prototype
            }, n.prototype._registeredMethods = {
                init: [],
                pre: [],
                post: [],
                remove: []
            }, n.prototype._registeredPreloadMethods = {}, n.prototype.registerPreloadMethod = function(e, t) {
                n.prototype._preloadMethods.hasOwnProperty(e) || (n.prototype._preloadMethods[e] = t);
            }, n.prototype.registerMethod = function(e, t) {
                var r = this || n.prototype;
                r._registeredMethods.hasOwnProperty(e) || (r._registeredMethods[e] = []), r._registeredMethods[e].push(t);
            }, n.prototype._createFriendlyGlobalFunctionBinder = function(e) {
                var t = (e = e || {}).globalObject || window;
                return e.log || console.log.bind(console), function(e, r) {
                    n.disableFriendlyErrors, t[e] = r;
                };
            }, t.exports = n;
        }, {
            "./constants": 17,
            "./shim": 33
        } ],
        24: [ function(e, t, r) {
            "use strict";
            var i = e("./main");
            i.Element = function(e, t) {
                this.elt = e, this._pInst = this._pixelsState = t, this._events = {}, this.width = this.elt.offsetWidth, 
                this.height = this.elt.offsetHeight;
            }, i.Element.prototype.parent = function(e) {
                return void 0 === e ? this.elt.parentNode : ("string" == typeof e ? ("#" === e[0] && (e = e.substring(1)), 
                e = document.getElementById(e)) : e instanceof i.Element && (e = e.elt), e.appendChild(this.elt), 
                this);
            }, i.Element.prototype.id = function(e) {
                return void 0 === e ? this.elt.id : (this.elt.id = e, this.width = this.elt.offsetWidth, 
                this.height = this.elt.offsetHeight, this);
            }, i.Element.prototype.class = function(e) {
                return void 0 === e ? this.elt.className : (this.elt.className = e, this);
            }, i.Element.prototype.mousePressed = function(e) {
                return i.Element._adjustListener("mousedown", function(t) {
                    return this._pInst._setProperty("mouseIsPressed", !0), this._pInst._setMouseButton(t), 
                    e.call(this);
                }, this), this;
            }, i.Element.prototype.doubleClicked = function(e) {
                return i.Element._adjustListener("dblclick", e, this), this;
            }, i.Element.prototype.mouseWheel = function(e) {
                return i.Element._adjustListener("wheel", e, this), this;
            }, i.Element.prototype.mouseReleased = function(e) {
                return i.Element._adjustListener("mouseup", e, this), this;
            }, i.Element.prototype.mouseClicked = function(e) {
                return i.Element._adjustListener("click", e, this), this;
            }, i.Element.prototype.mouseMoved = function(e) {
                return i.Element._adjustListener("mousemove", e, this), this;
            }, i.Element.prototype.mouseOver = function(e) {
                return i.Element._adjustListener("mouseover", e, this), this;
            }, i.Element.prototype.mouseOut = function(e) {
                return i.Element._adjustListener("mouseout", e, this), this;
            }, i.Element.prototype.touchStarted = function(e) {
                return i.Element._adjustListener("touchstart", e, this), this;
            }, i.Element.prototype.touchMoved = function(e) {
                return i.Element._adjustListener("touchmove", e, this), this;
            }, i.Element.prototype.touchEnded = function(e) {
                return i.Element._adjustListener("touchend", e, this), this;
            }, i.Element.prototype.dragOver = function(e) {
                return i.Element._adjustListener("dragover", e, this), this;
            }, i.Element.prototype.dragLeave = function(e) {
                return i.Element._adjustListener("dragleave", e, this), this;
            }, i.Element._adjustListener = function(e, t, r) {
                return !1 === t ? i.Element._detachListener(e, r) : i.Element._attachListener(e, t, r), 
                this;
            }, i.Element._attachListener = function(e, t, r) {
                r._events[e] && i.Element._detachListener(e, r);
                var n = t.bind(r);
                r.elt.addEventListener(e, n, !1), r._events[e] = n;
            }, i.Element._detachListener = function(e, t) {
                var r = t._events[e];
                t.elt.removeEventListener(e, r, !1), t._events[e] = null;
            }, i.Element.prototype._setProperty = function(e, t) {
                this[e] = t;
            }, t.exports = i.Element;
        }, {
            "./main": 23
        } ],
        25: [ function(e, t, r) {
            "use strict";
            var i = e("./main"), n = e("./constants");
            i.Graphics = function(e, t, r, o) {
                var s = r || n.P2D;
                this.canvas = document.createElement("canvas");
                var a = o._userNode || document.body;
                for (var h in a.appendChild(this.canvas), i.Element.call(this, this.canvas, o), 
                i.prototype) this[h] || ("function" == typeof i.prototype[h] ? this[h] = i.prototype[h].bind(this) : this[h] = i.prototype[h]);
                return i.prototype._initializeInstanceVariables.apply(this), this.width = e, this.height = t, 
                this._pixelDensity = o._pixelDensity, s === n.WEBGL ? this._renderer = new i.RendererGL(this.canvas, this, !1) : this._renderer = new i.Renderer2D(this.canvas, this, !1), 
                o._elements.push(this), this._renderer.resize(e, t), this._renderer._applyDefaults(), 
                this;
            }, i.Graphics.prototype = Object.create(i.Element.prototype), i.Graphics.prototype.reset = function() {
                this._renderer.resetMatrix(), this._renderer.isP3D && this._renderer._update();
            }, i.Graphics.prototype.remove = function() {
                this.elt.parentNode && this.elt.parentNode.removeChild(this.elt);
                var e = this._pInst._elements.indexOf(this);
                for (var t in -1 !== e && this._pInst._elements.splice(e, 1), this._events) this.elt.removeEventListener(t, this._events[t]);
            }, t.exports = i.Graphics;
        }, {
            "./constants": 17,
            "./main": 23
        } ],
        26: [ function(e, t, r) {
            "use strict";
            var i = e("./main"), n = e("../core/constants");
            function o(e) {
                var t = 0, r = 0;
                if (e.offsetParent) for (;t += e.offsetLeft, r += e.offsetTop, e = e.offsetParent; ) ; else t += e.offsetLeft, 
                r += e.offsetTop;
                return [ t, r ];
            }
            i.Renderer = function(e, t, r) {
                i.Element.call(this, e, t), this.canvas = e, this._pixelsState = t, r ? (this._isMainCanvas = !0, 
                this._pInst._setProperty("_curElement", this), this._pInst._setProperty("canvas", this.canvas), 
                this._pInst._setProperty("width", this.width), this._pInst._setProperty("height", this.height)) : (this.canvas.style.display = "none", 
                this._styles = []), this._textSize = 12, this._textLeading = 15, this._textFont = "sans-serif", 
                this._textStyle = n.NORMAL, this._textAscent = null, this._textDescent = null, this._textAlign = n.LEFT, 
                this._textBaseline = n.BASELINE, this._rectMode = n.CORNER, this._ellipseMode = n.CENTER, 
                this._curveTightness = 0, this._imageMode = n.CORNER, this._tint = null, this._doStroke = !0, 
                this._doFill = !0, this._strokeSet = !1, this._fillSet = !1;
            }, i.Renderer.prototype = Object.create(i.Element.prototype), i.Renderer.prototype.push = function() {
                return {
                    properties: {
                        _doStroke: this._doStroke,
                        _strokeSet: this._strokeSet,
                        _doFill: this._doFill,
                        _fillSet: this._fillSet,
                        _tint: this._tint,
                        _imageMode: this._imageMode,
                        _rectMode: this._rectMode,
                        _ellipseMode: this._ellipseMode,
                        _textFont: this._textFont,
                        _textLeading: this._textLeading,
                        _textSize: this._textSize,
                        _textAlign: this._textAlign,
                        _textBaseline: this._textBaseline,
                        _textStyle: this._textStyle
                    }
                };
            }, i.Renderer.prototype.pop = function(e) {
                e.properties && Object.assign(this, e.properties);
            }, i.Renderer.prototype.resize = function(e, t) {
                this.width = e, this.height = t, this.elt.width = e * this._pInst._pixelDensity, 
                this.elt.height = t * this._pInst._pixelDensity, this.elt.style.width = e + "px", 
                this.elt.style.height = t + "px", this._isMainCanvas && (this._pInst._setProperty("width", this.width), 
                this._pInst._setProperty("height", this.height));
            }, i.Renderer.prototype.get = function(e, t, r, n) {
                var o = this._pixelsState, s = o._pixelDensity, a = this.canvas;
                if (void 0 === e && void 0 === t) e = t = 0, r = o.width, n = o.height; else if (e *= s, 
                t *= s, void 0 === r && void 0 === n) return e < 0 || t < 0 || e >= a.width || t >= a.height ? [ 0, 0, 0, 0 ] : this._getPixel(e, t);
                var h = new i.Image(r, n);
                return h.canvas.getContext("2d").drawImage(a, e, t, r * s, n * s, 0, 0, r, n), h;
            }, i.Renderer.prototype.textLeading = function(e) {
                return "number" == typeof e ? (this._setProperty("_textLeading", e), this._pInst) : this._textLeading;
            }, i.Renderer.prototype.textSize = function(e) {
                return "number" == typeof e ? (this._setProperty("_textSize", e), this._setProperty("_textLeading", e * n._DEFAULT_LEADMULT), 
                this._applyTextProperties()) : this._textSize;
            }, i.Renderer.prototype.textStyle = function(e) {
                return e ? (e !== n.NORMAL && e !== n.ITALIC && e !== n.BOLD && e !== n.BOLDITALIC || this._setProperty("_textStyle", e), 
                this._applyTextProperties()) : this._textStyle;
            }, i.Renderer.prototype.textAscent = function() {
                return null === this._textAscent && this._updateTextMetrics(), this._textAscent;
            }, i.Renderer.prototype.textDescent = function() {
                return null === this._textDescent && this._updateTextMetrics(), this._textDescent;
            }, i.Renderer.prototype.textAlign = function(e, t) {
                return void 0 !== e ? (this._setProperty("_textAlign", e), void 0 !== t && this._setProperty("_textBaseline", t), 
                this._applyTextProperties()) : {
                    horizontal: this._textAlign,
                    vertical: this._textBaseline
                };
            }, i.Renderer.prototype.text = function(e, t, r, i, o) {
                var s, a, h, l, u, c, p, d, f = this._pInst, m = Number.MAX_VALUE;
                if ((this._doFill || this._doStroke) && void 0 !== e) {
                    if ("string" != typeof e && (e = e.toString()), s = (e = e.replace(/(\t)/g, "  ")).split("\n"), 
                    void 0 !== i) {
                        for (h = d = 0; h < s.length; h++) for (u = "", p = s[h].split(" "), a = 0; a < p.length; a++) c = u + p[a] + " ", 
                        i < this.textWidth(c) ? (u = p[a] + " ", d += f.textLeading()) : u = c;
                        switch (this._rectMode === n.CENTER && (t -= i / 2, r -= o / 2), this._textAlign) {
                          case n.CENTER:
                            t += i / 2;
                            break;

                          case n.RIGHT:
                            t += i;
                        }
                        var g = !1;
                        if (void 0 !== o) {
                            switch (this._textBaseline) {
                              case n.BOTTOM:
                                r += o - d;
                                break;

                              case n.CENTER:
                                r += (o - d) / 2;
                                break;

                              case n.BASELINE:
                                g = !0, this._textBaseline = n.TOP;
                            }
                            m = r + o - f.textAscent();
                        }
                        for (h = 0; h < s.length; h++) {
                            for (u = "", p = s[h].split(" "), a = 0; a < p.length; a++) c = u + p[a] + " ", 
                            i < this.textWidth(c) && 0 < u.length ? (this._renderText(f, u, t, r, m), u = p[a] + " ", 
                            r += f.textLeading()) : u = c;
                            this._renderText(f, u, t, r, m), r += f.textLeading(), g && (this._textBaseline = n.BASELINE);
                        }
                    } else {
                        var v = 0, y = f.textAlign().vertical;
                        for (y === n.CENTER ? v = (s.length - 1) * f.textLeading() / 2 : y === n.BOTTOM && (v = (s.length - 1) * f.textLeading()), 
                        l = 0; l < s.length; l++) this._renderText(f, s[l], t, r - v, m), r += f.textLeading();
                    }
                    return f;
                }
            }, i.Renderer.prototype._applyDefaults = function() {
                return this;
            }, i.Renderer.prototype._isOpenType = function(e) {
                return "object" == typeof (e = e || this._textFont) && e.font && e.font.supported;
            }, i.Renderer.prototype._updateTextMetrics = function() {
                if (this._isOpenType()) return this._setProperty("_textAscent", this._textFont._textAscent()), 
                this._setProperty("_textDescent", this._textFont._textDescent()), this;
                var e = document.createElement("span");
                e.style.fontFamily = this._textFont, e.style.fontSize = this._textSize + "px", e.innerHTML = "ABCjgq|";
                var t = document.createElement("div");
                t.style.display = "inline-block", t.style.width = "1px", t.style.height = "0px";
                var r = document.createElement("div");
                r.appendChild(e), r.appendChild(t), r.style.height = "0px", r.style.overflow = "hidden", 
                document.body.appendChild(r), t.style.verticalAlign = "baseline";
                var i = o(t), n = o(e), s = i[1] - n[1];
                t.style.verticalAlign = "bottom", i = o(t), n = o(e);
                var a = i[1] - n[1] - s;
                return document.body.removeChild(r), this._setProperty("_textAscent", s), this._setProperty("_textDescent", a), 
                this;
            }, t.exports = i.Renderer;
        }, {
            "../core/constants": 17,
            "./main": 23
        } ],
        27: [ function(e, t, r) {
            "use strict";
            var i = e("./main"), n = e("./constants"), o = e("../image/filters");
            e("./p5.Renderer");
            var s = "rgba(0,0,0,0)";
            i.Renderer2D = function(e, t, r) {
                return i.Renderer.call(this, e, t, r), this.drawingContext = this.canvas.getContext("2d"), 
                this._pInst._setProperty("drawingContext", this.drawingContext), this;
            }, i.Renderer2D.prototype = Object.create(i.Renderer.prototype), i.Renderer2D.prototype._applyDefaults = function() {
                this._cachedFillStyle = this._cachedStrokeStyle = void 0, this._setFill(n._DEFAULT_FILL), 
                this._setStroke(n._DEFAULT_STROKE), this.drawingContext.lineCap = n.ROUND, this.drawingContext.font = "normal 12px sans-serif";
            }, i.Renderer2D.prototype.resize = function(e, t) {
                i.Renderer.prototype.resize.call(this, e, t), this.drawingContext.scale(this._pInst._pixelDensity, this._pInst._pixelDensity);
            }, i.Renderer2D.prototype.background = function() {
                if (this.drawingContext.save(), this.resetMatrix(), arguments[0] instanceof i.Image) this._pInst.image(arguments[0], 0, 0, this.width, this.height); else {
                    var e = this._getFill(), t = this._pInst.color.apply(this._pInst, arguments).toString();
                    this._setFill(t), this.drawingContext.fillRect(0, 0, this.width, this.height), this._setFill(e);
                }
                this.drawingContext.restore(), this._pixelsState._pixelsDirty = !0;
            }, i.Renderer2D.prototype.clear = function() {
                this.drawingContext.save(), this.resetMatrix(), this.drawingContext.clearRect(0, 0, this.width, this.height), 
                this.drawingContext.restore(), this._pixelsState._pixelsDirty = !0;
            }, i.Renderer2D.prototype.fill = function() {
                var e = this._pInst.color.apply(this._pInst, arguments);
                this._setFill(e.toString());
            }, i.Renderer2D.prototype.stroke = function() {
                var e = this._pInst.color.apply(this._pInst, arguments);
                this._setStroke(e.toString());
            }, i.Renderer2D.prototype.image = function(e, t, r, n, o, s, a, h, l) {
                var u;
                try {
                    this._tint && (i.MediaElement && e instanceof i.MediaElement && e.loadPixels(), 
                    e.canvas && (u = this._getTintedImageCanvas(e))), u || (u = e.canvas || e.elt);
                    var c = 1;
                    e.width && 0 < e.width && (c = u.width / e.width), this.drawingContext.drawImage(u, c * t, c * r, c * n, c * o, s, a, h, l);
                } catch (e) {
                    if ("NS_ERROR_NOT_AVAILABLE" !== e.name) throw e;
                }
                this._pixelsState._pixelsDirty = !0;
            }, i.Renderer2D.prototype._getTintedImageCanvas = function(e) {
                if (!e.canvas) return e;
                var t = o._toPixels(e.canvas), r = document.createElement("canvas");
                r.width = e.canvas.width, r.height = e.canvas.height;
                for (var i = r.getContext("2d"), n = i.createImageData(e.canvas.width, e.canvas.height), s = n.data, a = 0; a < t.length; a += 4) {
                    var h = t[a], l = t[a + 1], u = t[a + 2], c = t[a + 3];
                    s[a] = h * this._tint[0] / 255, s[a + 1] = l * this._tint[1] / 255, s[a + 2] = u * this._tint[2] / 255, 
                    s[a + 3] = c * this._tint[3] / 255;
                }
                return i.putImageData(n, 0, 0), r;
            }, i.Renderer2D.prototype.blendMode = function(e) {
                if (e === n.SUBTRACT) console.warn("blendMode(SUBTRACT) only works in WEBGL mode."); else {
                    if (e !== n.BLEND && e !== n.DARKEST && e !== n.LIGHTEST && e !== n.DIFFERENCE && e !== n.MULTIPLY && e !== n.EXCLUSION && e !== n.SCREEN && e !== n.REPLACE && e !== n.OVERLAY && e !== n.HARD_LIGHT && e !== n.SOFT_LIGHT && e !== n.DODGE && e !== n.BURN && e !== n.ADD) throw new Error("Mode " + e + " not recognized.");
                    this.drawingContext.globalCompositeOperation = e;
                }
            }, i.Renderer2D.prototype.blend = function() {
                var e = this.drawingContext.globalCompositeOperation, t = arguments[arguments.length - 1], r = Array.prototype.slice.call(arguments, 0, arguments.length - 1);
                this.drawingContext.globalCompositeOperation = t, this._pInst ? this._pInst.copy.apply(this._pInst, r) : this.copy.apply(this, r), 
                this.drawingContext.globalCompositeOperation = e;
            }, i.Renderer2D.prototype.copy = function() {
                var e, t, r, n, o, s, a, h, l;
                if (9 === arguments.length) e = arguments[0], t = arguments[1], r = arguments[2], 
                n = arguments[3], o = arguments[4], s = arguments[5], a = arguments[6], h = arguments[7], 
                l = arguments[8]; else {
                    if (8 !== arguments.length) throw new Error("Signature not supported");
                    e = this._pInst, t = arguments[0], r = arguments[1], n = arguments[2], o = arguments[3], 
                    s = arguments[4], a = arguments[5], h = arguments[6], l = arguments[7];
                }
                i.Renderer2D._copyHelper(this, e, t, r, n, o, s, a, h, l), this._pixelsState._pixelsDirty = !0;
            }, i.Renderer2D._copyHelper = function(e, t, r, i, n, o, s, a, h, l) {
                t.loadPixels();
                var u = t.canvas.width / t.width;
                e.drawingContext.drawImage(t.canvas, u * r, u * i, u * n, u * o, s, a, h, l);
            }, i.Renderer2D.prototype._getPixel = function(e, t) {
                var r, i, n = this._pixelsState;
                return i = n._pixelsDirty ? (r = this.drawingContext.getImageData(e, t, 1, 1).data, 
                0) : (r = n.pixels, 4 * (Math.floor(e) + Math.floor(t) * this.canvas.width)), [ r[i + 0], r[i + 1], r[i + 2], r[i + 3] ];
            }, i.Renderer2D.prototype.loadPixels = function() {
                var e = this._pixelsState;
                if (e._pixelsDirty) {
                    e._pixelsDirty = !1;
                    var t = e._pixelDensity, r = this.width * t, i = this.height * t, n = this.drawingContext.getImageData(0, 0, r, i);
                    e._setProperty("imageData", n), e._setProperty("pixels", n.data);
                }
            }, i.Renderer2D.prototype.set = function(e, t, r) {
                e = Math.floor(e), t = Math.floor(t);
                var n = this._pixelsState;
                if (r instanceof i.Image) this.drawingContext.save(), this.drawingContext.setTransform(1, 0, 0, 1, 0, 0), 
                this.drawingContext.scale(n._pixelDensity, n._pixelDensity), this.drawingContext.drawImage(r.canvas, e, t), 
                this.drawingContext.restore(), n._pixelsDirty = !0; else {
                    var o = 0, s = 0, a = 0, h = 0, l = 4 * (t * n._pixelDensity * (this.width * n._pixelDensity) + e * n._pixelDensity);
                    if (n.imageData && !n._pixelsDirty || n.loadPixels.call(n), "number" == typeof r) l < n.pixels.length && (a = s = o = r, 
                    h = 255); else if (r instanceof Array) {
                        if (r.length < 4) throw new Error("pixel array must be of the form [R, G, B, A]");
                        l < n.pixels.length && (o = r[0], s = r[1], a = r[2], h = r[3]);
                    } else r instanceof i.Color && l < n.pixels.length && (o = r.levels[0], s = r.levels[1], 
                    a = r.levels[2], h = r.levels[3]);
                    for (var u = 0; u < n._pixelDensity; u++) for (var c = 0; c < n._pixelDensity; c++) l = 4 * ((t * n._pixelDensity + c) * this.width * n._pixelDensity + (e * n._pixelDensity + u)), 
                    n.pixels[l] = o, n.pixels[l + 1] = s, n.pixels[l + 2] = a, n.pixels[l + 3] = h;
                }
            }, i.Renderer2D.prototype.updatePixels = function(e, t, r, i) {
                var n = this._pixelsState, o = n._pixelDensity;
                void 0 === e && void 0 === t && void 0 === r && void 0 === i && (t = e = 0, r = this.width, 
                i = this.height), r *= o, i *= o, this.drawingContext.putImageData(n.imageData, e, t, 0, 0, r, i), 
                0 === e && 0 === t && r === this.width && i === this.height || (n._pixelsDirty = !0);
            }, i.Renderer2D.prototype._acuteArcToBezier = function(e, t) {
                var r = t / 2, i = Math.cos(r), n = Math.sin(r), o = 1 / Math.tan(r), s = e + r, a = Math.cos(s), h = Math.sin(s), l = (4 - i) / 3, u = n + (i - l) * o;
                return {
                    ax: Math.cos(e).toFixed(7),
                    ay: Math.sin(e).toFixed(7),
                    bx: (l * a + u * h).toFixed(7),
                    by: (l * h - u * a).toFixed(7),
                    cx: (l * a - u * h).toFixed(7),
                    cy: (l * h + u * a).toFixed(7),
                    dx: Math.cos(e + t).toFixed(7),
                    dy: Math.sin(e + t).toFixed(7)
                };
            }, i.Renderer2D.prototype.arc = function(e, t, r, i, o, s, a) {
                var h = this.drawingContext, l = r / 2, u = i / 2, c = 0, p = [];
                for (e += l, t += u; 1e-5 <= s - o; ) c = Math.min(s - o, n.HALF_PI), p.push(this._acuteArcToBezier(o, c)), 
                o += c;
                return this._doFill && (h.beginPath(), p.forEach(function(r, i) {
                    0 === i && h.moveTo(e + r.ax * l, t + r.ay * u), h.bezierCurveTo(e + r.bx * l, t + r.by * u, e + r.cx * l, t + r.cy * u, e + r.dx * l, t + r.dy * u);
                }), a !== n.PIE && null != a || h.lineTo(e, t), h.closePath(), h.fill(), this._pixelsState._pixelsDirty = !0), 
                this._doStroke && (h.beginPath(), p.forEach(function(r, i) {
                    0 === i && h.moveTo(e + r.ax * l, t + r.ay * u), h.bezierCurveTo(e + r.bx * l, t + r.by * u, e + r.cx * l, t + r.cy * u, e + r.dx * l, t + r.dy * u);
                }), a === n.PIE ? (h.lineTo(e, t), h.closePath()) : a === n.CHORD && h.closePath(), 
                h.stroke(), this._pixelsState._pixelsDirty = !0), this;
            }, i.Renderer2D.prototype.ellipse = function(e) {
                var t = this.drawingContext, r = this._doFill, i = this._doStroke, n = e[0], o = e[1], a = e[2], h = e[3];
                if (r && !i) {
                    if (this._getFill() === s) return this;
                } else if (!r && i && this._getStroke() === s) return this;
                var l = a / 2 * .5522847498, u = h / 2 * .5522847498, c = n + a, p = o + h, d = n + a / 2, f = o + h / 2;
                t.beginPath(), t.moveTo(n, f), t.bezierCurveTo(n, f - u, d - l, o, d, o), t.bezierCurveTo(d + l, o, c, f - u, c, f), 
                t.bezierCurveTo(c, f + u, d + l, p, d, p), t.bezierCurveTo(d - l, p, n, f + u, n, f), 
                t.closePath(), r && (t.fill(), this._pixelsState._pixelsDirty = !0), i && (t.stroke(), 
                this._pixelsState._pixelsDirty = !0);
            }, i.Renderer2D.prototype.line = function(e, t, r, i) {
                var n = this.drawingContext;
                return this._doStroke && (this._getStroke() === s || (n.beginPath(), n.moveTo(e, t), 
                n.lineTo(r, i), n.stroke(), this._pixelsState._pixelsDirty = !0)), this;
            }, i.Renderer2D.prototype.point = function(e, t) {
                var r = this.drawingContext;
                if (!this._doStroke) return this;
                if (this._getStroke() === s) return this;
                var i = this._getStroke(), o = this._getFill();
                e = Math.round(e), t = Math.round(t), this._setFill(i), 1 < r.lineWidth ? (r.beginPath(), 
                r.arc(e, t, r.lineWidth / 2, 0, n.TWO_PI, !1), r.fill()) : r.fillRect(e, t, 1, 1), 
                this._setFill(o), this._pixelsState._pixelsDirty = !0;
            }, i.Renderer2D.prototype.quad = function(e, t, r, i, n, o, a, h) {
                var l = this.drawingContext, u = this._doFill, c = this._doStroke;
                if (u && !c) {
                    if (this._getFill() === s) return this;
                } else if (!u && c && this._getStroke() === s) return this;
                return l.beginPath(), l.moveTo(e, t), l.lineTo(r, i), l.lineTo(n, o), l.lineTo(a, h), 
                l.closePath(), u && l.fill(), c && l.stroke(), this._pixelsState._pixelsDirty = !0, 
                this;
            }, i.Renderer2D.prototype.rect = function(e) {
                var t = e[0], r = e[1], i = e[2], n = e[3], o = e[4], a = e[5], h = e[6], l = e[7], u = this.drawingContext, c = this._doFill, p = this._doStroke;
                if (c && !p) {
                    if (this._getFill() === s) return this;
                } else if (!c && p && this._getStroke() === s) return this;
                if (u.beginPath(), void 0 === o) u.rect(t, r, i, n); else {
                    void 0 === a && (a = o), void 0 === h && (h = a), void 0 === l && (l = h);
                    var d = i / 2, f = n / 2;
                    i < 2 * o && (o = d), n < 2 * o && (o = f), i < 2 * a && (a = d), n < 2 * a && (a = f), 
                    i < 2 * h && (h = d), n < 2 * h && (h = f), i < 2 * l && (l = d), n < 2 * l && (l = f), 
                    u.beginPath(), u.moveTo(t + o, r), u.arcTo(t + i, r, t + i, r + n, a), u.arcTo(t + i, r + n, t, r + n, h), 
                    u.arcTo(t, r + n, t, r, l), u.arcTo(t, r, t + i, r, o), u.closePath();
                }
                return this._doFill && u.fill(), this._doStroke && u.stroke(), this._pixelsState._pixelsDirty = !0, 
                this;
            }, i.Renderer2D.prototype.triangle = function(e) {
                var t = this.drawingContext, r = this._doFill, i = this._doStroke, n = e[0], o = e[1], a = e[2], h = e[3], l = e[4], u = e[5];
                if (r && !i) {
                    if (this._getFill() === s) return this;
                } else if (!r && i && this._getStroke() === s) return this;
                t.beginPath(), t.moveTo(n, o), t.lineTo(a, h), t.lineTo(l, u), t.closePath(), r && (t.fill(), 
                this._pixelsState._pixelsDirty = !0), i && (t.stroke(), this._pixelsState._pixelsDirty = !0);
            }, i.Renderer2D.prototype.endShape = function(e, t, r, i, o, s, a) {
                if (0 === t.length) return this;
                if (!this._doStroke && !this._doFill) return this;
                var h, l, u, c = e === n.CLOSE;
                c && !s && t.push(t[0]);
                var p = t.length;
                if (!r || a !== n.POLYGON && null !== a) if (!i || a !== n.POLYGON && null !== a) if (!o || a !== n.POLYGON && null !== a) if (a === n.POINTS) for (l = 0; l < p; l++) h = t[l], 
                this._doStroke && this._pInst.stroke(h[6]), this._pInst.point(h[0], h[1]); else if (a === n.LINES) for (l = 0; l + 1 < p; l += 2) h = t[l], 
                this._doStroke && this._pInst.stroke(t[l + 1][6]), this._pInst.line(h[0], h[1], t[l + 1][0], t[l + 1][1]); else if (a === n.TRIANGLES) for (l = 0; l + 2 < p; l += 3) h = t[l], 
                this.drawingContext.beginPath(), this.drawingContext.moveTo(h[0], h[1]), this.drawingContext.lineTo(t[l + 1][0], t[l + 1][1]), 
                this.drawingContext.lineTo(t[l + 2][0], t[l + 2][1]), this.drawingContext.closePath(), 
                this._doFill && (this._pInst.fill(t[l + 2][5]), this.drawingContext.fill()), this._doStroke && (this._pInst.stroke(t[l + 2][6]), 
                this.drawingContext.stroke()); else if (a === n.TRIANGLE_STRIP) for (l = 0; l + 1 < p; l++) h = t[l], 
                this.drawingContext.beginPath(), this.drawingContext.moveTo(t[l + 1][0], t[l + 1][1]), 
                this.drawingContext.lineTo(h[0], h[1]), this._doStroke && this._pInst.stroke(t[l + 1][6]), 
                this._doFill && this._pInst.fill(t[l + 1][5]), l + 2 < p && (this.drawingContext.lineTo(t[l + 2][0], t[l + 2][1]), 
                this._doStroke && this._pInst.stroke(t[l + 2][6]), this._doFill && this._pInst.fill(t[l + 2][5])), 
                this._doFillStrokeClose(c); else if (a === n.TRIANGLE_FAN) {
                    if (2 < p) {
                        for (this.drawingContext.beginPath(), l = 2; l < p; l++) h = t[l], this.drawingContext.moveTo(t[0][0], t[0][1]), 
                        this.drawingContext.lineTo(t[l - 1][0], t[l - 1][1]), this.drawingContext.lineTo(h[0], h[1]), 
                        this.drawingContext.lineTo(t[0][0], t[0][1]), l < p - 1 && (this._doFill && h[5] !== t[l + 1][5] || this._doStroke && h[6] !== t[l + 1][6]) && (this._doFill && (this._pInst.fill(h[5]), 
                        this.drawingContext.fill(), this._pInst.fill(t[l + 1][5])), this._doStroke && (this._pInst.stroke(h[6]), 
                        this.drawingContext.stroke(), this._pInst.stroke(t[l + 1][6])), this.drawingContext.closePath(), 
                        this.drawingContext.beginPath());
                        this._doFillStrokeClose(c);
                    }
                } else if (a === n.QUADS) for (l = 0; l + 3 < p; l += 4) {
                    for (h = t[l], this.drawingContext.beginPath(), this.drawingContext.moveTo(h[0], h[1]), 
                    u = 1; u < 4; u++) this.drawingContext.lineTo(t[l + u][0], t[l + u][1]);
                    this.drawingContext.lineTo(h[0], h[1]), this._doFill && this._pInst.fill(t[l + 3][5]), 
                    this._doStroke && this._pInst.stroke(t[l + 3][6]), this._doFillStrokeClose(c);
                } else if (a === n.QUAD_STRIP) {
                    if (3 < p) for (l = 0; l + 1 < p; l += 2) h = t[l], this.drawingContext.beginPath(), 
                    l + 3 < p ? (this.drawingContext.moveTo(t[l + 2][0], t[l + 2][1]), this.drawingContext.lineTo(h[0], h[1]), 
                    this.drawingContext.lineTo(t[l + 1][0], t[l + 1][1]), this.drawingContext.lineTo(t[l + 3][0], t[l + 3][1]), 
                    this._doFill && this._pInst.fill(t[l + 3][5]), this._doStroke && this._pInst.stroke(t[l + 3][6])) : (this.drawingContext.moveTo(h[0], h[1]), 
                    this.drawingContext.lineTo(t[l + 1][0], t[l + 1][1])), this._doFillStrokeClose(c);
                } else {
                    for (this.drawingContext.beginPath(), this.drawingContext.moveTo(t[0][0], t[0][1]), 
                    l = 1; l < p; l++) (h = t[l]).isVert && (h.moveTo ? this.drawingContext.moveTo(h[0], h[1]) : this.drawingContext.lineTo(h[0], h[1]));
                    this._doFillStrokeClose(c);
                } else {
                    for (this.drawingContext.beginPath(), l = 0; l < p; l++) t[l].isVert ? t[l].moveTo ? this.drawingContext.moveTo(t[l][0], t[l][1]) : this.drawingContext.lineTo(t[l][0], t[l][1]) : this.drawingContext.quadraticCurveTo(t[l][0], t[l][1], t[l][2], t[l][3]);
                    this._doFillStrokeClose(c);
                } else {
                    for (this.drawingContext.beginPath(), l = 0; l < p; l++) t[l].isVert ? t[l].moveTo ? this.drawingContext.moveTo(t[l][0], t[l][1]) : this.drawingContext.lineTo(t[l][0], t[l][1]) : this.drawingContext.bezierCurveTo(t[l][0], t[l][1], t[l][2], t[l][3], t[l][4], t[l][5]);
                    this._doFillStrokeClose(c);
                } else if (3 < p) {
                    var d = [], f = 1 - this._curveTightness;
                    for (this.drawingContext.beginPath(), this.drawingContext.moveTo(t[1][0], t[1][1]), 
                    l = 1; l + 2 < p; l++) h = t[l], d[0] = [ h[0], h[1] ], d[1] = [ h[0] + (f * t[l + 1][0] - f * t[l - 1][0]) / 6, h[1] + (f * t[l + 1][1] - f * t[l - 1][1]) / 6 ], 
                    d[2] = [ t[l + 1][0] + (f * t[l][0] - f * t[l + 2][0]) / 6, t[l + 1][1] + (f * t[l][1] - f * t[l + 2][1]) / 6 ], 
                    d[3] = [ t[l + 1][0], t[l + 1][1] ], this.drawingContext.bezierCurveTo(d[1][0], d[1][1], d[2][0], d[2][1], d[3][0], d[3][1]);
                    c && this.drawingContext.lineTo(t[l + 1][0], t[l + 1][1]), this._doFillStrokeClose(c);
                }
                return s = o = i = r = !1, c && t.pop(), this._pixelsState._pixelsDirty = !0, this;
            }, i.Renderer2D.prototype.strokeCap = function(e) {
                return e !== n.ROUND && e !== n.SQUARE && e !== n.PROJECT || (this.drawingContext.lineCap = e), 
                this;
            }, i.Renderer2D.prototype.strokeJoin = function(e) {
                return e !== n.ROUND && e !== n.BEVEL && e !== n.MITER || (this.drawingContext.lineJoin = e), 
                this;
            }, i.Renderer2D.prototype.strokeWeight = function(e) {
                return this.drawingContext.lineWidth = void 0 === e || 0 === e ? 1e-4 : e, this;
            }, i.Renderer2D.prototype._getFill = function() {
                return this._cachedFillStyle || (this._cachedFillStyle = this.drawingContext.fillStyle), 
                this._cachedFillStyle;
            }, i.Renderer2D.prototype._setFill = function(e) {
                e !== this._cachedFillStyle && (this.drawingContext.fillStyle = e, this._cachedFillStyle = e);
            }, i.Renderer2D.prototype._getStroke = function() {
                return this._cachedStrokeStyle || (this._cachedStrokeStyle = this.drawingContext.strokeStyle), 
                this._cachedStrokeStyle;
            }, i.Renderer2D.prototype._setStroke = function(e) {
                e !== this._cachedStrokeStyle && (this.drawingContext.strokeStyle = e, this._cachedStrokeStyle = e);
            }, i.Renderer2D.prototype.bezier = function(e, t, r, i, n, o, s, a) {
                return this._pInst.beginShape(), this._pInst.vertex(e, t), this._pInst.bezierVertex(r, i, n, o, s, a), 
                this._pInst.endShape(), this;
            }, i.Renderer2D.prototype.curve = function(e, t, r, i, n, o, s, a) {
                return this._pInst.beginShape(), this._pInst.curveVertex(e, t), this._pInst.curveVertex(r, i), 
                this._pInst.curveVertex(n, o), this._pInst.curveVertex(s, a), this._pInst.endShape(), 
                this;
            }, i.Renderer2D.prototype._doFillStrokeClose = function(e) {
                e && this.drawingContext.closePath(), this._doFill && this.drawingContext.fill(), 
                this._doStroke && this.drawingContext.stroke(), this._pixelsState._pixelsDirty = !0;
            }, i.Renderer2D.prototype.applyMatrix = function(e, t, r, i, n, o) {
                this.drawingContext.transform(e, t, r, i, n, o);
            }, i.Renderer2D.prototype.resetMatrix = function() {
                return this.drawingContext.setTransform(1, 0, 0, 1, 0, 0), this.drawingContext.scale(this._pInst._pixelDensity, this._pInst._pixelDensity), 
                this;
            }, i.Renderer2D.prototype.rotate = function(e) {
                this.drawingContext.rotate(e);
            }, i.Renderer2D.prototype.scale = function(e, t) {
                return this.drawingContext.scale(e, t), this;
            }, i.Renderer2D.prototype.translate = function(e, t) {
                return e instanceof i.Vector && (t = e.y, e = e.x), this.drawingContext.translate(e, t), 
                this;
            }, i.Renderer2D.prototype.text = function(e, t, r, o, s) {
                var a;
                void 0 !== o && void 0 !== s && this.drawingContext.textBaseline === n.BASELINE && (a = !0, 
                this.drawingContext.textBaseline = n.TOP);
                var h = i.Renderer.prototype.text.apply(this, arguments);
                return a && (this.drawingContext.textBaseline = n.BASELINE), h;
            }, i.Renderer2D.prototype._renderText = function(e, t, r, i, o) {
                if (!(o <= i)) return e.push(), this._isOpenType() ? this._textFont._renderPath(t, r, i, {
                    renderer: this
                }) : (this._doStroke && this._strokeSet && this.drawingContext.strokeText(t, r, i), 
                this._doFill && (this._fillSet || this._setFill(n._DEFAULT_TEXT_FILL), this.drawingContext.fillText(t, r, i))), 
                e.pop(), this._pixelsState._pixelsDirty = !0, e;
            }, i.Renderer2D.prototype.textWidth = function(e) {
                return this._isOpenType() ? this._textFont._textWidth(e, this._textSize) : this.drawingContext.measureText(e).width;
            }, i.Renderer2D.prototype._applyTextProperties = function() {
                var e, t = this._pInst;
                return this._setProperty("_textAscent", null), this._setProperty("_textDescent", null), 
                e = this._textFont, this._isOpenType() && (e = this._textFont.font.familyName, this._setProperty("_textStyle", this._textFont.font.styleName)), 
                this.drawingContext.font = (this._textStyle || "normal") + " " + (this._textSize || 12) + "px " + (e || "sans-serif"), 
                this.drawingContext.textAlign = this._textAlign, this._textBaseline === n.CENTER ? this.drawingContext.textBaseline = n._CTX_MIDDLE : this.drawingContext.textBaseline = this._textBaseline, 
                t;
            }, i.Renderer2D.prototype.push = function() {
                return this.drawingContext.save(), i.Renderer.prototype.push.apply(this);
            }, i.Renderer2D.prototype.pop = function(e) {
                this.drawingContext.restore(), this._cachedFillStyle = this.drawingContext.fillStyle, 
                this._cachedStrokeStyle = this.drawingContext.strokeStyle, i.Renderer.prototype.pop.call(this, e);
            }, t.exports = i.Renderer2D;
        }, {
            "../image/filters": 41,
            "./constants": 17,
            "./main": 23,
            "./p5.Renderer": 26
        } ],
        28: [ function(e, t, r) {
            "use strict";
            var i = e("./main"), n = e("./constants");
            e("./p5.Graphics"), e("./p5.Renderer2D"), e("../webgl/p5.RendererGL");
            var o = "defaultCanvas0";
            i.prototype.createCanvas = function(e, t, r) {
                i._validateParameters("createCanvas", arguments);
                var s, a = r || n.P2D;
                if (a === n.WEBGL) {
                    if (s = document.getElementById(o)) {
                        s.parentNode.removeChild(s);
                        var h = this._renderer;
                        this._elements = this._elements.filter(function(e) {
                            return e !== h;
                        });
                    }
                    (s = document.createElement("canvas")).id = o, s.classList.add("p5Canvas");
                } else if (this._defaultGraphicsCreated) s = this.canvas; else {
                    s = document.createElement("canvas");
                    for (var l = 0; document.getElementById("defaultCanvas" + l); ) l++;
                    o = "defaultCanvas" + l, s.id = o, s.classList.add("p5Canvas");
                }
                return this._setupDone || (s.dataset.hidden = !0, s.style.visibility = "hidden"), 
                this._userNode ? this._userNode.appendChild(s) : document.body.appendChild(s), a === n.WEBGL ? (this._setProperty("_renderer", new i.RendererGL(s, this, !0)), 
                this._elements.push(this._renderer)) : this._defaultGraphicsCreated || (this._setProperty("_renderer", new i.Renderer2D(s, this, !0)), 
                this._defaultGraphicsCreated = !0, this._elements.push(this._renderer)), this._renderer.resize(e, t), 
                this._renderer._applyDefaults(), this._renderer;
            }, i.prototype.resizeCanvas = function(e, t, r) {
                if (i._validateParameters("resizeCanvas", arguments), this._renderer) {
                    var n = {};
                    for (var o in this.drawingContext) {
                        var s = this.drawingContext[o];
                        "object" != typeof s && "function" != typeof s && (n[o] = s);
                    }
                    for (var a in this._renderer.resize(e, t), this.width = e, this.height = t, n) try {
                        this.drawingContext[a] = n[a];
                    } catch (e) {}
                    r || this.redraw();
                }
            }, i.prototype.noCanvas = function() {
                this.canvas && this.canvas.parentNode.removeChild(this.canvas);
            }, i.prototype.createGraphics = function(e, t, r) {
                return i._validateParameters("createGraphics", arguments), new i.Graphics(e, t, r, this);
            }, i.prototype.blendMode = function(e) {
                i._validateParameters("blendMode", arguments), e === n.NORMAL && (console.warn("NORMAL has been deprecated for use in blendMode. defaulting to BLEND instead."), 
                e = n.BLEND), this._renderer.blendMode(e);
            }, t.exports = i;
        }, {
            "../webgl/p5.RendererGL": 73,
            "./constants": 17,
            "./main": 23,
            "./p5.Graphics": 25,
            "./p5.Renderer2D": 27
        } ],
        29: [ function(e, t, r) {
            "use strict";
            var i = e("../main"), n = e("../constants"), o = e("../helpers");
            e("../error_helpers"), i.prototype._normalizeArcAngles = function(e, t, r, i, o) {
                var s;
                return e -= n.TWO_PI * Math.floor(e / n.TWO_PI), t -= n.TWO_PI * Math.floor(t / n.TWO_PI), 
                s = Math.min(Math.abs(e - t), n.TWO_PI - Math.abs(e - t)), o && (e = e <= n.HALF_PI ? Math.atan(r / i * Math.tan(e)) : e > n.HALF_PI && e <= 3 * n.HALF_PI ? Math.atan(r / i * Math.tan(e)) + n.PI : Math.atan(r / i * Math.tan(e)) + n.TWO_PI, 
                t = t <= n.HALF_PI ? Math.atan(r / i * Math.tan(t)) : t > n.HALF_PI && t <= 3 * n.HALF_PI ? Math.atan(r / i * Math.tan(t)) + n.PI : Math.atan(r / i * Math.tan(t)) + n.TWO_PI), 
                t < e && (t += n.TWO_PI), {
                    start: e,
                    stop: t,
                    correspondToSamePoint: s < 1e-5
                };
            }, i.prototype.arc = function(e, t, r, n, s, a, h, l) {
                if (i._validateParameters("arc", arguments), !this._renderer._doStroke && !this._renderer._doFill) return this;
                s = this._toRadians(s), a = this._toRadians(a), r = Math.abs(r), n = Math.abs(n);
                var u = o.modeAdjust(e, t, r, n, this._renderer._ellipseMode), c = this._normalizeArcAngles(s, a, u.w, u.h, !0);
                return c.correspondToSamePoint ? this._renderer.ellipse([ u.x, u.y, u.w, u.h, l ]) : this._renderer.arc(u.x, u.y, u.w, u.h, c.start, c.stop, h, l), 
                this;
            }, i.prototype.ellipse = function(e, t, r, n, s) {
                if (i._validateParameters("ellipse", arguments), !this._renderer._doStroke && !this._renderer._doFill) return this;
                r < 0 && (r = Math.abs(r)), void 0 === n ? n = r : n < 0 && (n = Math.abs(n));
                var a = o.modeAdjust(e, t, r, n, this._renderer._ellipseMode);
                return this._renderer.ellipse([ a.x, a.y, a.w, a.h, s ]), this;
            }, i.prototype.circle = function() {
                var e = Array.prototype.slice.call(arguments, 0, 2);
                return e.push(arguments[2]), e.push(arguments[2]), this.ellipse.apply(this, e);
            }, i.prototype.line = function() {
                return i._validateParameters("line", arguments), this._renderer._doStroke && this._renderer.line.apply(this._renderer, arguments), 
                this;
            }, i.prototype.point = function() {
                return i._validateParameters("point", arguments), this._renderer._doStroke && this._renderer.point.apply(this._renderer, arguments), 
                this;
            }, i.prototype.quad = function() {
                return i._validateParameters("quad", arguments), (this._renderer._doStroke || this._renderer._doFill) && (this._renderer.isP3D && 12 !== arguments.length ? this._renderer.quad.call(this._renderer, arguments[0], arguments[1], 0, arguments[2], arguments[3], 0, arguments[4], arguments[5], 0, arguments[6], arguments[7], 0) : this._renderer.quad.apply(this._renderer, arguments)), 
                this;
            }, i.prototype.rect = function() {
                if (i._validateParameters("rect", arguments), this._renderer._doStroke || this._renderer._doFill) {
                    for (var e = o.modeAdjust(arguments[0], arguments[1], arguments[2], arguments[3], this._renderer._rectMode), t = [ e.x, e.y, e.w, e.h ], r = 4; r < arguments.length; r++) t[r] = arguments[r];
                    this._renderer.rect(t);
                }
                return this;
            }, i.prototype.square = function(e, t, r, i, n, o, s) {
                return this.rect(e, t, r, r, i, n, o, s);
            }, i.prototype.triangle = function() {
                return i._validateParameters("triangle", arguments), (this._renderer._doStroke || this._renderer._doFill) && this._renderer.triangle(arguments), 
                this;
            }, t.exports = i;
        }, {
            "../constants": 17,
            "../error_helpers": 19,
            "../helpers": 20,
            "../main": 23
        } ],
        30: [ function(e, t, r) {
            "use strict";
            var i = e("../main"), n = e("../constants");
            i.prototype.ellipseMode = function(e) {
                return i._validateParameters("ellipseMode", arguments), e !== n.CORNER && e !== n.CORNERS && e !== n.RADIUS && e !== n.CENTER || (this._renderer._ellipseMode = e), 
                this;
            }, i.prototype.noSmooth = function() {
                return this.setAttributes("antialias", !1), "imageSmoothingEnabled" in this.drawingContext && (this.drawingContext.imageSmoothingEnabled = !1), 
                this;
            }, i.prototype.rectMode = function(e) {
                return i._validateParameters("rectMode", arguments), e !== n.CORNER && e !== n.CORNERS && e !== n.RADIUS && e !== n.CENTER || (this._renderer._rectMode = e), 
                this;
            }, i.prototype.smooth = function() {
                return this.setAttributes("antialias", !0), "imageSmoothingEnabled" in this.drawingContext && (this.drawingContext.imageSmoothingEnabled = !0), 
                this;
            }, i.prototype.strokeCap = function(e) {
                return i._validateParameters("strokeCap", arguments), e !== n.ROUND && e !== n.SQUARE && e !== n.PROJECT || this._renderer.strokeCap(e), 
                this;
            }, i.prototype.strokeJoin = function(e) {
                return i._validateParameters("strokeJoin", arguments), e !== n.ROUND && e !== n.BEVEL && e !== n.MITER || this._renderer.strokeJoin(e), 
                this;
            }, i.prototype.strokeWeight = function(e) {
                return i._validateParameters("strokeWeight", arguments), this._renderer.strokeWeight(e), 
                this;
            }, t.exports = i;
        }, {
            "../constants": 17,
            "../main": 23
        } ],
        31: [ function(e, t, r) {
            "use strict";
            var i = e("../main");
            e("../error_helpers"), i.prototype.bezier = function() {
                return i._validateParameters("bezier", arguments), (this._renderer._doStroke || this._renderer._doFill) && this._renderer.bezier.apply(this._renderer, arguments), 
                this;
            }, i.prototype.bezierDetail = function(e) {
                return i._validateParameters("bezierDetail", arguments), this._bezierDetail = e, 
                this;
            }, i.prototype.bezierPoint = function(e, t, r, n, o) {
                i._validateParameters("bezierPoint", arguments);
                var s = 1 - o;
                return Math.pow(s, 3) * e + 3 * Math.pow(s, 2) * o * t + 3 * s * Math.pow(o, 2) * r + Math.pow(o, 3) * n;
            }, i.prototype.bezierTangent = function(e, t, r, n, o) {
                i._validateParameters("bezierTangent", arguments);
                var s = 1 - o;
                return 3 * n * Math.pow(o, 2) - 3 * r * Math.pow(o, 2) + 6 * r * s * o - 6 * t * s * o + 3 * t * Math.pow(s, 2) - 3 * e * Math.pow(s, 2);
            }, i.prototype.curve = function() {
                return i._validateParameters("curve", arguments), this._renderer._doStroke && this._renderer.curve.apply(this._renderer, arguments), 
                this;
            }, i.prototype.curveDetail = function(e) {
                return i._validateParameters("curveDetail", arguments), this._curveDetail = e < 3 ? 3 : e, 
                this;
            }, i.prototype.curveTightness = function(e) {
                return i._validateParameters("curveTightness", arguments), this._renderer._curveTightness = e, 
                this;
            }, i.prototype.curvePoint = function(e, t, r, n, o) {
                i._validateParameters("curvePoint", arguments);
                var s = o * o * o, a = o * o;
                return e * (-.5 * s + a - .5 * o) + t * (1.5 * s - 2.5 * a + 1) + r * (-1.5 * s + 2 * a + .5 * o) + n * (.5 * s - .5 * a);
            }, i.prototype.curveTangent = function(e, t, r, n, o) {
                i._validateParameters("curveTangent", arguments);
                var s = o * o;
                return e * (-3 * s / 2 + 2 * o - .5) + t * (9 * s / 2 - 5 * o) + r * (-9 * s / 2 + 4 * o + .5) + n * (3 * s / 2 - o);
            }, t.exports = i;
        }, {
            "../error_helpers": 19,
            "../main": 23
        } ],
        32: [ function(e, t, r) {
            "use strict";
            var i = e("../main"), n = e("../constants"), o = null, s = [], a = [], h = !1, l = !1, u = !1, c = !1, p = !0;
            i.prototype.beginContour = function() {
                return a = [], c = !0, this;
            }, i.prototype.beginShape = function(e) {
                return i._validateParameters("beginShape", arguments), this._renderer.isP3D ? this._renderer.beginShape.apply(this._renderer, arguments) : (o = e === n.POINTS || e === n.LINES || e === n.TRIANGLES || e === n.TRIANGLE_FAN || e === n.TRIANGLE_STRIP || e === n.QUADS || e === n.QUAD_STRIP ? e : null, 
                s = [], a = []), this;
            }, i.prototype.bezierVertex = function() {
                if (i._validateParameters("bezierVertex", arguments), this._renderer.isP3D) this._renderer.bezierVertex.apply(this._renderer, arguments); else if (0 === s.length) i._friendlyError("vertex() must be used once before calling bezierVertex()", "bezierVertex"); else {
                    h = !0;
                    for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                    e.isVert = !1, c ? a.push(e) : s.push(e);
                }
                return this;
            }, i.prototype.curveVertex = function() {
                return i._validateParameters("curveVertex", arguments), this._renderer.isP3D ? this._renderer.curveVertex.apply(this._renderer, arguments) : (l = !0, 
                this.vertex(arguments[0], arguments[1])), this;
            }, i.prototype.endContour = function() {
                var e = a[0].slice();
                e.isVert = a[0].isVert, e.moveTo = !1, a.push(e), p && (s.push(s[0]), p = !1);
                for (var t = 0; t < a.length; t++) s.push(a[t]);
                return this;
            }, i.prototype.endShape = function(e) {
                if (i._validateParameters("endShape", arguments), this._renderer.isP3D) this._renderer.endShape(e, l, h, u, c, o); else {
                    if (0 === s.length) return this;
                    if (!this._renderer._doStroke && !this._renderer._doFill) return this;
                    var t = e === n.CLOSE;
                    t && !c && s.push(s[0]), this._renderer.endShape(e, s, l, h, u, c, o), p = !(c = u = h = l = !1), 
                    t && s.pop();
                }
                return this;
            }, i.prototype.quadraticVertex = function() {
                if (i._validateParameters("quadraticVertex", arguments), this._renderer.isP3D) this._renderer.quadraticVertex.apply(this._renderer, arguments); else {
                    if (this._contourInited) {
                        var e = {};
                        return e.x = arguments[0], e.y = arguments[1], e.x3 = arguments[2], e.y3 = arguments[3], 
                        e.type = n.QUADRATIC, this._contourVertices.push(e), this;
                    }
                    if (0 < s.length) {
                        u = !0;
                        for (var t = [], r = 0; r < arguments.length; r++) t[r] = arguments[r];
                        t.isVert = !1, c ? a.push(t) : s.push(t);
                    } else i._friendlyError("vertex() must be used once before calling quadraticVertex()", "quadraticVertex");
                }
                return this;
            }, i.prototype.vertex = function(e, t, r, i, n) {
                if (this._renderer.isP3D) this._renderer.vertex.apply(this._renderer, arguments); else {
                    var o = [];
                    o.isVert = !0, o[0] = e, o[1] = t, o[2] = 0, o[3] = 0, o[4] = 0, o[5] = this._renderer._getFill(), 
                    o[6] = this._renderer._getStroke(), r && (o.moveTo = r), c ? (0 === a.length && (o.moveTo = !0), 
                    a.push(o)) : s.push(o);
                }
                return this;
            }, t.exports = i;
        }, {
            "../constants": 17,
            "../main": 23
        } ],
        33: [ function(e, t, r) {
            "use strict";
            window.requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(e, t) {
                window.setTimeout(e, 1e3 / 60);
            }, "undefined" == typeof Uint8ClampedArray || Uint8ClampedArray.prototype.slice || Object.defineProperty(Uint8ClampedArray.prototype, "slice", {
                value: Array.prototype.slice,
                writable: !0,
                configurable: !0,
                enumerable: !1
            }), function() {
                if (!Object.assign) {
                    var e = Object.keys, t = Object.defineProperty, r = "function" == typeof Symbol && "symbol" == typeof Symbol(), i = Object.prototype.propertyIsEnumerable, n = function(e) {
                        return function(t) {
                            return i.call(e, t);
                        };
                    };
                    t(Object, "assign", {
                        value: function(t, i) {
                            if (null == t) throw new TypeError("target must be an object");
                            var o, s, a, h, l = Object(t);
                            for (o = 1; o < arguments.length; ++o) for (s = Object(arguments[o]), h = e(s), 
                            r && Object.getOwnPropertySymbols && h.push.apply(h, Object.getOwnPropertySymbols(s).filter(n(s))), 
                            a = 0; a < h.length; ++a) l[h[a]] = s[h[a]];
                            return l;
                        },
                        configurable: !0,
                        enumerable: !1,
                        writable: !0
                    });
                }
            }();
        }, {} ],
        34: [ function(e, t, r) {
            "use strict";
            var i = e("./main");
            i.prototype.noLoop = function() {
                this._loop = !1;
            }, i.prototype.loop = function() {
                this._loop || (this._loop = !0, this._setupDone && this._draw());
            }, i.prototype.push = function() {
                this._styles.push({
                    props: {
                        _colorMode: this._colorMode
                    },
                    renderer: this._renderer.push()
                });
            }, i.prototype.pop = function() {
                var e = this._styles.pop();
                e ? (this._renderer.pop(e.renderer), Object.assign(this, e.props)) : console.warn("pop() was called without matching push()");
            }, i.prototype.redraw = function(e) {
                if (!this._inUserDraw && this._setupDone) {
                    var t = parseInt(e);
                    (isNaN(t) || t < 1) && (t = 1);
                    var r = this._isGlobal ? window : this, i = r.setup, n = r.draw;
                    if ("function" == typeof n) {
                        void 0 === i && r.scale(r._pixelDensity, r._pixelDensity);
                        for (var o = function(e) {
                            e.call(r);
                        }, s = 0; s < t; s++) {
                            r.resetMatrix(), r._renderer.isP3D && r._renderer._update(), r._setProperty("frameCount", r.frameCount + 1), 
                            r._registeredMethods.pre.forEach(o), this._inUserDraw = !0;
                            try {
                                n();
                            } finally {
                                this._inUserDraw = !1;
                            }
                            r._registeredMethods.post.forEach(o);
                        }
                    }
                }
            }, t.exports = i;
        }, {
            "./main": 23
        } ],
        35: [ function(e, t, r) {
            "use strict";
            var i = e("./main");
            i.prototype.applyMatrix = function(e, t, r, i, n, o) {
                return this._renderer.applyMatrix.apply(this._renderer, arguments), this;
            }, i.prototype.resetMatrix = function() {
                return this._renderer.resetMatrix(), this;
            }, i.prototype.rotate = function(e, t) {
                return i._validateParameters("rotate", arguments), this._renderer.rotate(this._toRadians(e), t), 
                this;
            }, i.prototype.rotateX = function(e) {
                return this._assert3d("rotateX"), i._validateParameters("rotateX", arguments), this._renderer.rotateX(this._toRadians(e)), 
                this;
            }, i.prototype.rotateY = function(e) {
                return this._assert3d("rotateY"), i._validateParameters("rotateY", arguments), this._renderer.rotateY(this._toRadians(e)), 
                this;
            }, i.prototype.rotateZ = function(e) {
                return this._assert3d("rotateZ"), i._validateParameters("rotateZ", arguments), this._renderer.rotateZ(this._toRadians(e)), 
                this;
            }, i.prototype.scale = function(e, t, r) {
                if (i._validateParameters("scale", arguments), e instanceof i.Vector) {
                    var n = e;
                    e = n.x, t = n.y, r = n.z;
                } else if (e instanceof Array) {
                    var o = e;
                    e = o[0], t = o[1], r = o[2] || 1;
                }
                return isNaN(t) ? t = r = e : isNaN(r) && (r = 1), this._renderer.scale.call(this._renderer, e, t, r), 
                this;
            }, i.prototype.shearX = function(e) {
                i._validateParameters("shearX", arguments);
                var t = this._toRadians(e);
                return this._renderer.applyMatrix(1, 0, Math.tan(t), 1, 0, 0), this;
            }, i.prototype.shearY = function(e) {
                i._validateParameters("shearY", arguments);
                var t = this._toRadians(e);
                return this._renderer.applyMatrix(1, Math.tan(t), 0, 1, 0, 0), this;
            }, i.prototype.translate = function(e, t, r) {
                return i._validateParameters("translate", arguments), this._renderer.isP3D ? this._renderer.translate(e, t, r) : this._renderer.translate(e, t), 
                this;
            }, t.exports = i;
        }, {
            "./main": 23
        } ],
        36: [ function(e, t, r) {
            "use strict";
            var i = e("../core/main");
            i.prototype.createStringDict = function(e, t) {
                return i._validateParameters("createStringDict", arguments), new i.StringDict(e, t);
            }, i.prototype.createNumberDict = function(e, t) {
                return i._validateParameters("createNumberDict", arguments), new i.NumberDict(e, t);
            }, i.TypedDict = function(e, t) {
                return e instanceof Object ? this.data = e : (this.data = {}, this.data[e] = t), 
                this;
            }, i.TypedDict.prototype.size = function() {
                return Object.keys(this.data).length;
            }, i.TypedDict.prototype.hasKey = function(e) {
                return this.data.hasOwnProperty(e);
            }, i.TypedDict.prototype.get = function(e) {
                if (this.data.hasOwnProperty(e)) return this.data[e];
                console.log(e + " does not exist in this Dictionary");
            }, i.TypedDict.prototype.set = function(e, t) {
                this._validate(t) ? this.data[e] = t : console.log("Those values dont work for this dictionary type.");
            }, i.TypedDict.prototype._addObj = function(e) {
                for (var t in e) this.set(t, e[t]);
            }, i.TypedDict.prototype.create = function(e, t) {
                e instanceof Object && void 0 === t ? this._addObj(e) : void 0 !== e ? this.set(e, t) : console.log("In order to create a new Dictionary entry you must pass an object or a key, value pair");
            }, i.TypedDict.prototype.clear = function() {
                this.data = {};
            }, i.TypedDict.prototype.remove = function(e) {
                if (!this.data.hasOwnProperty(e)) throw new Error(e + " does not exist in this Dictionary");
                delete this.data[e];
            }, i.TypedDict.prototype.print = function() {
                for (var e in this.data) console.log("key:" + e + " value:" + this.data[e]);
            }, i.TypedDict.prototype.saveTable = function(e) {
                var t = "";
                for (var r in this.data) t += r + "," + this.data[r] + "\n";
                var n = new Blob([ t ], {
                    type: "text/csv"
                });
                i.prototype.downloadFile(n, e || "mycsv", "csv");
            }, i.TypedDict.prototype.saveJSON = function(e, t) {
                i.prototype.saveJSON(this.data, e, t);
            }, i.TypedDict.prototype._validate = function(e) {
                return !0;
            }, i.StringDict = function() {
                i.TypedDict.apply(this, arguments);
            }, i.StringDict.prototype = Object.create(i.TypedDict.prototype), i.StringDict.prototype._validate = function(e) {
                return "string" == typeof e;
            }, i.NumberDict = function() {
                i.TypedDict.apply(this, arguments);
            }, i.NumberDict.prototype = Object.create(i.TypedDict.prototype), i.NumberDict.prototype._validate = function(e) {
                return "number" == typeof e;
            }, i.NumberDict.prototype.add = function(e, t) {
                this.data.hasOwnProperty(e) ? this.data[e] += t : console.log("The key - " + e + " does not exist in this dictionary.");
            }, i.NumberDict.prototype.sub = function(e, t) {
                this.add(e, -t);
            }, i.NumberDict.prototype.mult = function(e, t) {
                this.data.hasOwnProperty(e) ? this.data[e] *= t : console.log("The key - " + e + " does not exist in this dictionary.");
            }, i.NumberDict.prototype.div = function(e, t) {
                this.data.hasOwnProperty(e) ? this.data[e] /= t : console.log("The key - " + e + " does not exist in this dictionary.");
            }, i.NumberDict.prototype._valueTest = function(e) {
                if (0 === Object.keys(this.data).length) throw new Error("Unable to search for a minimum or maximum value on an empty NumberDict");
                if (1 === Object.keys(this.data).length) return this.data[Object.keys(this.data)[0]];
                var t = this.data[Object.keys(this.data)[0]];
                for (var r in this.data) this.data[r] * e < t * e && (t = this.data[r]);
                return t;
            }, i.NumberDict.prototype.minValue = function() {
                return this._valueTest(1);
            }, i.NumberDict.prototype.maxValue = function() {
                return this._valueTest(-1);
            }, i.NumberDict.prototype._keyTest = function(e) {
                if (0 === Object.keys(this.data).length) throw new Error("Unable to use minValue on an empty NumberDict");
                if (1 === Object.keys(this.data).length) return Object.keys(this.data)[0];
                for (var t = Object.keys(this.data)[0], r = 1; r < Object.keys(this.data).length; r++) Object.keys(this.data)[r] * e < t * e && (t = Object.keys(this.data)[r]);
                return t;
            }, i.NumberDict.prototype.minKey = function() {
                return this._keyTest(1);
            }, i.NumberDict.prototype.maxKey = function() {
                return this._keyTest(-1);
            }, t.exports = i.TypedDict;
        }, {
            "../core/main": 23
        } ],
        37: [ function(e, t, r) {
            "use strict";
            var i = e("../core/main");
            i.prototype.deviceOrientation = void 0, i.prototype.accelerationX = 0, i.prototype.accelerationY = 0, 
            i.prototype.accelerationZ = 0, i.prototype.pAccelerationX = 0, i.prototype.pAccelerationY = 0, 
            i.prototype.pAccelerationZ = 0, i.prototype._updatePAccelerations = function() {
                this._setProperty("pAccelerationX", this.accelerationX), this._setProperty("pAccelerationY", this.accelerationY), 
                this._setProperty("pAccelerationZ", this.accelerationZ);
            }, i.prototype.rotationX = 0, i.prototype.rotationY = 0, i.prototype.rotationZ = 0, 
            i.prototype.pRotationX = 0, i.prototype.pRotationY = 0;
            var n, o, s, a = i.prototype.pRotationZ = 0, h = 0, l = 0, u = "clockwise", c = "clockwise", p = "clockwise";
            i.prototype._updatePRotations = function() {
                this._setProperty("pRotationX", this.rotationX), this._setProperty("pRotationY", this.rotationY), 
                this._setProperty("pRotationZ", this.rotationZ);
            }, i.prototype.turnAxis = void 0;
            var d = .5, f = 30;
            i.prototype.setMoveThreshold = function(e) {
                i._validateParameters("setMoveThreshold", arguments), d = e;
            }, i.prototype.setShakeThreshold = function(e) {
                i._validateParameters("setShakeThreshold", arguments), f = e;
            }, i.prototype._ondeviceorientation = function(e) {
                this._updatePRotations(), this._setProperty("rotationX", e.beta), this._setProperty("rotationY", e.gamma), 
                this._setProperty("rotationZ", e.alpha), this._handleMotion();
            }, i.prototype._ondevicemotion = function(e) {
                this._updatePAccelerations(), this._setProperty("accelerationX", 2 * e.acceleration.x), 
                this._setProperty("accelerationY", 2 * e.acceleration.y), this._setProperty("accelerationZ", 2 * e.acceleration.z), 
                this._handleMotion();
            }, i.prototype._handleMotion = function() {
                90 === window.orientation || -90 === window.orientation ? this._setProperty("deviceOrientation", "landscape") : 0 === window.orientation ? this._setProperty("deviceOrientation", "portrait") : void 0 === window.orientation && this._setProperty("deviceOrientation", "undefined");
                var e = this.deviceMoved || window.deviceMoved;
                "function" == typeof e && (Math.abs(this.accelerationX - this.pAccelerationX) > d || Math.abs(this.accelerationY - this.pAccelerationY) > d || Math.abs(this.accelerationZ - this.pAccelerationZ) > d) && e();
                var t = this.deviceTurned || window.deviceTurned;
                if ("function" == typeof t) {
                    var r = this.rotationX + 180, i = this.pRotationX + 180, m = a + 180;
                    0 < r - i && r - i < 270 || r - i < -270 ? u = "clockwise" : (r - i < 0 || 270 < r - i) && (u = "counter-clockwise"), 
                    u !== n && (m = r), 90 < Math.abs(r - m) && Math.abs(r - m) < 270 && (m = r, this._setProperty("turnAxis", "X"), 
                    t()), n = u, a = m - 180;
                    var g = this.rotationY + 180, v = this.pRotationY + 180, y = h + 180;
                    0 < g - v && g - v < 270 || g - v < -270 ? c = "clockwise" : (g - v < 0 || 270 < g - this.pRotationY) && (c = "counter-clockwise"), 
                    c !== o && (y = g), 90 < Math.abs(g - y) && Math.abs(g - y) < 270 && (y = g, this._setProperty("turnAxis", "Y"), 
                    t()), o = c, h = y - 180, 0 < this.rotationZ - this.pRotationZ && this.rotationZ - this.pRotationZ < 270 || this.rotationZ - this.pRotationZ < -270 ? p = "clockwise" : (this.rotationZ - this.pRotationZ < 0 || 270 < this.rotationZ - this.pRotationZ) && (p = "counter-clockwise"), 
                    p !== s && (l = this.rotationZ), 90 < Math.abs(this.rotationZ - l) && Math.abs(this.rotationZ - l) < 270 && (l = this.rotationZ, 
                    this._setProperty("turnAxis", "Z"), t()), s = p, this._setProperty("turnAxis", void 0);
                }
                var b, x, _ = this.deviceShaken || window.deviceShaken;
                "function" == typeof _ && (null !== this.pAccelerationX && (b = Math.abs(this.accelerationX - this.pAccelerationX), 
                x = Math.abs(this.accelerationY - this.pAccelerationY)), f < b + x && _());
            }, t.exports = i;
        }, {
            "../core/main": 23
        } ],
        38: [ function(e, t, r) {
            "use strict";
            var i = e("../core/main");
            i.prototype.isKeyPressed = !1, i.prototype.keyIsPressed = !1, i.prototype.key = "", 
            i.prototype.keyCode = 0, i.prototype._onkeydown = function(e) {
                if (!this._downKeys[e.which]) {
                    this._setProperty("isKeyPressed", !0), this._setProperty("keyIsPressed", !0), this._setProperty("keyCode", e.which), 
                    this._downKeys[e.which] = !0, this._setProperty("key", e.key || String.fromCharCode(e.which) || e.which);
                    var t = this.keyPressed || window.keyPressed;
                    "function" != typeof t || e.charCode || !1 === t(e) && e.preventDefault();
                }
            }, i.prototype._onkeyup = function(e) {
                var t = this.keyReleased || window.keyReleased;
                this._downKeys[e.which] = !1, this._areDownKeys() || (this._setProperty("isKeyPressed", !1), 
                this._setProperty("keyIsPressed", !1)), this._setProperty("_lastKeyCodeTyped", null), 
                this._setProperty("key", e.key || String.fromCharCode(e.which) || e.which), this._setProperty("keyCode", e.which), 
                "function" == typeof t && !1 === t(e) && e.preventDefault();
            }, i.prototype._onkeypress = function(e) {
                if (e.which !== this._lastKeyCodeTyped) {
                    this._setProperty("keyCode", e.which), this._setProperty("_lastKeyCodeTyped", e.which), 
                    this._setProperty("key", String.fromCharCode(e.which));
                    var t = this.keyTyped || window.keyTyped;
                    "function" == typeof t && !1 === t(e) && e.preventDefault();
                }
            }, i.prototype._onblur = function(e) {
                this._downKeys = {};
            }, i.prototype.keyIsDown = function(e) {
                return i._validateParameters("keyIsDown", arguments), this._downKeys[e];
            }, i.prototype._areDownKeys = function() {
                for (var e in this._downKeys) if (this._downKeys.hasOwnProperty(e) && !0 === this._downKeys[e]) return !0;
                return !1;
            }, t.exports = i;
        }, {
            "../core/main": 23
        } ],
        39: [ function(e, t, r) {
            "use strict";
            var i = e("../core/main"), n = e("../core/constants");
            i.prototype._hasMouseInteracted = !1, i.prototype.mouseX = 0, i.prototype.mouseY = 0, 
            i.prototype.pmouseX = 0, i.prototype.pmouseY = 0, i.prototype.winMouseX = 0, i.prototype.winMouseY = 0, 
            i.prototype.pwinMouseX = 0, i.prototype.pwinMouseY = 0, i.prototype.mouseButton = 0, 
            i.prototype.mouseIsPressed = !1, i.prototype._updateNextMouseCoords = function(e) {
                if (null !== this._curElement && (!e.touches || 0 < e.touches.length)) {
                    var t = function(e, t, r, i) {
                        i && !i.clientX && (i.touches ? i = i.touches[0] : i.changedTouches && (i = i.changedTouches[0]));
                        var n = e.getBoundingClientRect(), o = e.scrollWidth / t, s = e.scrollHeight / r;
                        return {
                            x: (i.clientX - n.left) / o,
                            y: (i.clientY - n.top) / s,
                            winX: i.clientX,
                            winY: i.clientY,
                            id: i.identifier
                        };
                    }(this._curElement.elt, this.width, this.height, e);
                    this._setProperty("mouseX", t.x), this._setProperty("mouseY", t.y), this._setProperty("winMouseX", t.winX), 
                    this._setProperty("winMouseY", t.winY);
                }
                this._hasMouseInteracted || (this._updateMouseCoords(), this._setProperty("_hasMouseInteracted", !0));
            }, i.prototype._updateMouseCoords = function() {
                this._setProperty("pmouseX", this.mouseX), this._setProperty("pmouseY", this.mouseY), 
                this._setProperty("pwinMouseX", this.winMouseX), this._setProperty("pwinMouseY", this.winMouseY), 
                this._setProperty("_pmouseWheelDeltaY", this._mouseWheelDeltaY);
            }, i.prototype._setMouseButton = function(e) {
                1 === e.button ? this._setProperty("mouseButton", n.CENTER) : 2 === e.button ? this._setProperty("mouseButton", n.RIGHT) : this._setProperty("mouseButton", n.LEFT);
            }, i.prototype._onmousemove = function(e) {
                var t = this._isGlobal ? window : this;
                this._updateNextMouseCoords(e), this.mouseIsPressed ? "function" == typeof t.mouseDragged ? !1 === t.mouseDragged(e) && e.preventDefault() : "function" == typeof t.touchMoved && !1 === t.touchMoved(e) && e.preventDefault() : "function" == typeof t.mouseMoved && !1 === t.mouseMoved(e) && e.preventDefault();
            }, i.prototype._onmousedown = function(e) {
                var t = this._isGlobal ? window : this;
                this._setProperty("mouseIsPressed", !0), this._setMouseButton(e), this._updateNextMouseCoords(e), 
                "function" == typeof t.mousePressed ? !1 === t.mousePressed(e) && e.preventDefault() : "function" == typeof t.touchStarted && !1 === t.touchStarted(e) && e.preventDefault();
            }, i.prototype._onmouseup = function(e) {
                var t = this._isGlobal ? window : this;
                this._setProperty("mouseIsPressed", !1), "function" == typeof t.mouseReleased ? !1 === t.mouseReleased(e) && e.preventDefault() : "function" == typeof t.touchEnded && !1 === t.touchEnded(e) && e.preventDefault();
            }, i.prototype._ondragend = i.prototype._onmouseup, i.prototype._ondragover = i.prototype._onmousemove, 
            i.prototype._onclick = function(e) {
                var t = this._isGlobal ? window : this;
                "function" == typeof t.mouseClicked && !1 === t.mouseClicked(e) && e.preventDefault();
            }, i.prototype._ondblclick = function(e) {
                var t = this._isGlobal ? window : this;
                "function" == typeof t.doubleClicked && !1 === t.doubleClicked(e) && e.preventDefault();
            }, i.prototype._mouseWheelDeltaY = 0, i.prototype._pmouseWheelDeltaY = 0, i.prototype._onwheel = function(e) {
                var t = this._isGlobal ? window : this;
                this._setProperty("_mouseWheelDeltaY", e.deltaY), "function" == typeof t.mouseWheel && (e.delta = e.deltaY, 
                !1 === t.mouseWheel(e) && e.preventDefault());
            }, t.exports = i;
        }, {
            "../core/constants": 17,
            "../core/main": 23
        } ],
        40: [ function(e, t, r) {
            "use strict";
            var i = e("../core/main");
            function n(e, t, r, i, n) {
                n = n || 0;
                var o = e.getBoundingClientRect(), s = e.scrollWidth / t, a = e.scrollHeight / r, h = i.touches[n] || i.changedTouches[n];
                return {
                    x: (h.clientX - o.left) / s,
                    y: (h.clientY - o.top) / a,
                    winX: h.clientX,
                    winY: h.clientY,
                    id: h.identifier
                };
            }
            i.prototype.touches = [], i.prototype._updateTouchCoords = function(e) {
                if (null !== this._curElement) {
                    for (var t = [], r = 0; r < e.touches.length; r++) t[r] = n(this._curElement.elt, this.width, this.height, e, r);
                    this._setProperty("touches", t);
                }
            }, i.prototype._ontouchstart = function(e) {
                var t = this._isGlobal ? window : this;
                this._setProperty("mouseIsPressed", !0), this._updateTouchCoords(e), this._updateNextMouseCoords(e), 
                this._updateMouseCoords(), "function" == typeof t.touchStarted ? !1 === t.touchStarted(e) && e.preventDefault() : "function" == typeof t.mousePressed && !1 === t.mousePressed(e) && e.preventDefault();
            }, i.prototype._ontouchmove = function(e) {
                var t = this._isGlobal ? window : this;
                this._updateTouchCoords(e), this._updateNextMouseCoords(e), "function" == typeof t.touchMoved ? !1 === t.touchMoved(e) && e.preventDefault() : "function" == typeof t.mouseDragged && !1 === t.mouseDragged(e) && e.preventDefault();
            }, i.prototype._ontouchend = function(e) {
                this._setProperty("mouseIsPressed", !1), this._updateTouchCoords(e), this._updateNextMouseCoords(e);
                var t = this._isGlobal ? window : this;
                "function" == typeof t.touchEnded ? !1 === t.touchEnded(e) && e.preventDefault() : "function" == typeof t.mouseReleased && !1 === t.mouseReleased(e) && e.preventDefault();
            }, t.exports = i;
        }, {
            "../core/main": 23
        } ],
        41: [ function(e, t, r) {
            "use strict";
            var i, n, o, s, a = {};
            a._toPixels = function(e) {
                return e instanceof ImageData ? e.data : e.getContext("2d").getImageData(0, 0, e.width, e.height).data;
            }, a._getARGB = function(e, t) {
                var r = 4 * t;
                return e[r + 3] << 24 & 4278190080 | e[r] << 16 & 16711680 | e[r + 1] << 8 & 65280 | 255 & e[r + 2];
            }, a._setPixels = function(e, t) {
                for (var r = 0, i = 0, n = e.length; i < n; i++) e[0 + (r = 4 * i)] = (16711680 & t[i]) >>> 16, 
                e[r + 1] = (65280 & t[i]) >>> 8, e[r + 2] = 255 & t[i], e[r + 3] = (4278190080 & t[i]) >>> 24;
            }, a._toImageData = function(e) {
                return e instanceof ImageData ? e : e.getContext("2d").getImageData(0, 0, e.width, e.height);
            }, a._createImageData = function(e, t) {
                return a._tmpCanvas = document.createElement("canvas"), a._tmpCtx = a._tmpCanvas.getContext("2d"), 
                this._tmpCtx.createImageData(e, t);
            }, a.apply = function(e, t, r) {
                var i = e.getContext("2d"), n = i.getImageData(0, 0, e.width, e.height), o = t(n, r);
                o instanceof ImageData ? i.putImageData(o, 0, 0, 0, 0, e.width, e.height) : i.putImageData(n, 0, 0, 0, 0, e.width, e.height);
            }, a.threshold = function(e, t) {
                var r = a._toPixels(e);
                void 0 === t && (t = .5);
                for (var i = Math.floor(255 * t), n = 0; n < r.length; n += 4) {
                    var o;
                    o = i <= .2126 * r[n] + .7152 * r[n + 1] + .0722 * r[n + 2] ? 255 : 0, r[n] = r[n + 1] = r[n + 2] = o;
                }
            }, a.gray = function(e) {
                for (var t = a._toPixels(e), r = 0; r < t.length; r += 4) {
                    var i = .2126 * t[r] + .7152 * t[r + 1] + .0722 * t[r + 2];
                    t[r] = t[r + 1] = t[r + 2] = i;
                }
            }, a.opaque = function(e) {
                for (var t = a._toPixels(e), r = 0; r < t.length; r += 4) t[r + 3] = 255;
                return t;
            }, a.invert = function(e) {
                for (var t = a._toPixels(e), r = 0; r < t.length; r += 4) t[r] = 255 - t[r], t[r + 1] = 255 - t[r + 1], 
                t[r + 2] = 255 - t[r + 2];
            }, a.posterize = function(e, t) {
                var r = a._toPixels(e);
                if (t < 2 || 255 < t) throw new Error("Level must be greater than 2 and less than 255 for posterize");
                for (var i = t - 1, n = 0; n < r.length; n += 4) {
                    var o = r[n], s = r[n + 1], h = r[n + 2];
                    r[n] = 255 * (o * t >> 8) / i, r[n + 1] = 255 * (s * t >> 8) / i, r[n + 2] = 255 * (h * t >> 8) / i;
                }
            }, a.dilate = function(e) {
                for (var t, r, i, n, o, s, h, l, u, c, p, d, f, m, g, v, y, b = a._toPixels(e), x = 0, _ = b.length ? b.length / 4 : 0, w = new Int32Array(_); x < _; ) for (r = (t = x) + e.width; x < r; ) i = n = a._getARGB(b, x), 
                (h = x - 1) < t && (h = x), r <= (s = x + 1) && (s = x), (l = x - e.width) < 0 && (l = 0), 
                _ <= (u = x + e.width) && (u = x), d = a._getARGB(b, l), p = a._getARGB(b, h), f = a._getARGB(b, u), 
                (o = 77 * (i >> 16 & 255) + 151 * (i >> 8 & 255) + 28 * (255 & i)) < (g = 77 * (p >> 16 & 255) + 151 * (p >> 8 & 255) + 28 * (255 & p)) && (n = p, 
                o = g), o < (m = 77 * ((c = a._getARGB(b, s)) >> 16 & 255) + 151 * (c >> 8 & 255) + 28 * (255 & c)) && (n = c, 
                o = m), o < (v = 77 * (d >> 16 & 255) + 151 * (d >> 8 & 255) + 28 * (255 & d)) && (n = d, 
                o = v), o < (y = 77 * (f >> 16 & 255) + 151 * (f >> 8 & 255) + 28 * (255 & f)) && (n = f, 
                o = y), w[x++] = n;
                a._setPixels(b, w);
            }, a.erode = function(e) {
                for (var t, r, i, n, o, s, h, l, u, c, p, d, f, m, g, v, y, b = a._toPixels(e), x = 0, _ = b.length ? b.length / 4 : 0, w = new Int32Array(_); x < _; ) for (r = (t = x) + e.width; x < r; ) i = n = a._getARGB(b, x), 
                (h = x - 1) < t && (h = x), r <= (s = x + 1) && (s = x), (l = x - e.width) < 0 && (l = 0), 
                _ <= (u = x + e.width) && (u = x), d = a._getARGB(b, l), p = a._getARGB(b, h), f = a._getARGB(b, u), 
                (g = 77 * (p >> 16 & 255) + 151 * (p >> 8 & 255) + 28 * (255 & p)) < (o = 77 * (i >> 16 & 255) + 151 * (i >> 8 & 255) + 28 * (255 & i)) && (n = p, 
                o = g), (m = 77 * ((c = a._getARGB(b, s)) >> 16 & 255) + 151 * (c >> 8 & 255) + 28 * (255 & c)) < o && (n = c, 
                o = m), (v = 77 * (d >> 16 & 255) + 151 * (d >> 8 & 255) + 28 * (255 & d)) < o && (n = d, 
                o = v), (y = 77 * (f >> 16 & 255) + 151 * (f >> 8 & 255) + 28 * (255 & f)) < o && (n = f, 
                o = y), w[x++] = n;
                a._setPixels(b, w);
            }, a.blur = function(e, t) {
                !function(e, t) {
                    for (var r, h, l, u, c, p, d, f, m, g, v = a._toPixels(e), y = e.width, b = e.height, x = y * b, _ = new Int32Array(x), w = 0; w < x; w++) _[w] = a._getARGB(v, w);
                    var S, T, E, M, C = new Int32Array(x), L = new Int32Array(x), R = new Int32Array(x), A = new Int32Array(x), D = 0;
                    for (function(e) {
                        var t = 3.5 * e | 0;
                        if (i !== (t = t < 1 ? 1 : t < 248 ? t : 248)) {
                            n = 1 + (i = t) << 1, o = new Int32Array(n), s = new Array(n);
                            for (var r = 0; r < n; r++) s[r] = new Int32Array(256);
                            for (var a, h, l, u, c = 1, p = t - 1; c < t; c++) {
                                o[t + c] = o[p] = h = p * p, l = s[t + c], u = s[p--];
                                for (var d = 0; d < 256; d++) l[d] = u[d] = h * d;
                            }
                            a = o[t] = t * t, l = s[t];
                            for (var f = 0; f < 256; f++) l[f] = a * f;
                        }
                    }(t), T = 0; T < b; T++) {
                        for (S = 0; S < y; S++) {
                            if (u = l = h = c = r = 0, (p = S - i) < 0) g = -p, p = 0; else {
                                if (y <= p) break;
                                g = 0;
                            }
                            for (E = g; E < n && !(y <= p); E++) {
                                var P = _[p + D];
                                c += (M = s[E])[(-16777216 & P) >>> 24], h += M[(16711680 & P) >> 16], l += M[(65280 & P) >> 8], 
                                u += M[255 & P], r += o[E], p++;
                            }
                            C[d = D + S] = c / r, L[d] = h / r, R[d] = l / r, A[d] = u / r;
                        }
                        D += y;
                    }
                    for (m = (f = -i) * y, T = D = 0; T < b; T++) {
                        for (S = 0; S < y; S++) {
                            if (u = l = h = c = r = 0, f < 0) g = d = -f, p = S; else {
                                if (b <= f) break;
                                g = 0, d = f, p = S + m;
                            }
                            for (E = g; E < n && !(b <= d); E++) c += (M = s[E])[C[p]], h += M[L[p]], l += M[R[p]], 
                            u += M[A[p]], r += o[E], d++, p += y;
                            _[S + D] = c / r << 24 | h / r << 16 | l / r << 8 | u / r;
                        }
                        D += y, m += y, f++;
                    }
                    a._setPixels(v, _);
                }(e, t);
            }, t.exports = a;
        }, {} ],
        42: [ function(e, t, r) {
            "use strict";
            var i = e("../core/main"), n = [];
            i.prototype.createImage = function(e, t) {
                return i._validateParameters("createImage", arguments), new i.Image(e, t);
            }, i.prototype.saveCanvas = function() {
                i._validateParameters("saveCanvas", arguments);
                var e, t, r, n, o = [].slice.call(arguments);
                switch (arguments[0] instanceof HTMLCanvasElement ? (e = arguments[0], o.shift()) : arguments[0] instanceof i.Element ? (e = arguments[0].elt, 
                o.shift()) : e = this._curElement && this._curElement.elt, 1 <= o.length && (t = o[0]), 
                2 <= o.length && (r = o[1]), r = r || i.prototype._checkFileExtension(t, r)[1] || "png") {
                  default:
                    n = "image/png";
                    break;

                  case "jpeg":
                  case "jpg":
                    n = "image/jpeg";
                }
                e.toBlob(function(e) {
                    i.prototype.downloadFile(e, t, r);
                }, n);
            }, i.prototype.saveFrames = function(e, t, r, o, s) {
                i._validateParameters("saveFrames", arguments);
                var a = r || 3;
                a = i.prototype.constrain(a, 0, 15), a *= 1e3;
                var h = o || 15;
                h = i.prototype.constrain(h, 0, 22);
                var l = 0, u = i.prototype._makeFrame, c = this._curElement.elt, p = setInterval(function() {
                    u(e + l, t, c), l++;
                }, 1e3 / h);
                setTimeout(function() {
                    if (clearInterval(p), s) s(n); else for (var e = 0; e < n.length; e++) {
                        var t = n[e];
                        i.prototype.downloadFile(t.imageData, t.filename, t.ext);
                    }
                    n = [];
                }, a + .01);
            }, i.prototype._makeFrame = function(e, t, r) {
                var i, o;
                if (i = this ? this._curElement.elt : r, t) switch (t.toLowerCase()) {
                  case "png":
                    o = "image/png";
                    break;

                  case "jpeg":
                  case "jpg":
                    o = "image/jpeg";
                    break;

                  default:
                    o = "image/png";
                } else t = "png", o = "image/png";
                var s = i.toDataURL(o);
                s = s.replace(o, "image/octet-stream");
                var a = {};
                a.imageData = s, a.filename = e, a.ext = t, n.push(a);
            }, t.exports = i;
        }, {
            "../core/main": 23
        } ],
        43: [ function(e, t, r) {
            "use strict";
            var i = e("../core/main"), n = e("./filters"), o = e("../core/helpers"), s = e("../core/constants");
            function a(e, t) {
                return 0 < e && e < t ? e : t;
            }
            e("../core/error_helpers"), i.prototype.loadImage = function(e, t, r) {
                i._validateParameters("loadImage", arguments);
                var n = new Image(), o = new i.Image(1, 1, this), s = this;
                return n.onload = function() {
                    o.width = o.canvas.width = n.width, o.height = o.canvas.height = n.height, o.drawingContext.drawImage(n, 0, 0), 
                    o.modified = !0, "function" == typeof t && t(o), s._decrementPreload();
                }, n.onerror = function(e) {
                    i._friendlyFileLoadError(0, n.src), "function" == typeof r ? r(e) : console.error(e);
                }, 0 !== e.indexOf("data:image/") && (n.crossOrigin = "Anonymous"), n.src = e, o;
            }, i.prototype.image = function(e, t, r, n, s, h, l, u, c) {
                i._validateParameters("image", arguments);
                var p = e.width, d = e.height;
                e.elt && e.elt.videoWidth && !e.canvas && (p = e.elt.videoWidth, d = e.elt.videoHeight);
                var f = t, m = r, g = n || p, v = s || d, y = h || 0, b = l || 0, x = u || p, _ = c || d;
                x = a(x, p), _ = a(_, d);
                var w = 1;
                e.elt && !e.canvas && e.elt.style.width && (w = e.elt.videoWidth && !n ? e.elt.videoWidth : e.elt.width, 
                w /= parseInt(e.elt.style.width, 10)), y *= w, b *= w, _ *= w, x *= w;
                var S = o.modeAdjust(f, m, g, v, this._renderer._imageMode);
                this._renderer.image(e, y, b, x, _, S.x, S.y, S.w, S.h);
            }, i.prototype.tint = function() {
                i._validateParameters("tint", arguments);
                var e = this.color.apply(this, arguments);
                this._renderer._tint = e.levels;
            }, i.prototype.noTint = function() {
                this._renderer._tint = null;
            }, i.prototype._getTintedImageCanvas = function(e) {
                if (!e.canvas) return e;
                var t = n._toPixels(e.canvas), r = document.createElement("canvas");
                r.width = e.canvas.width, r.height = e.canvas.height;
                for (var i = r.getContext("2d"), o = i.createImageData(e.canvas.width, e.canvas.height), s = o.data, a = 0; a < t.length; a += 4) {
                    var h = t[a], l = t[a + 1], u = t[a + 2], c = t[a + 3];
                    s[a] = h * this._renderer._tint[0] / 255, s[a + 1] = l * this._renderer._tint[1] / 255, 
                    s[a + 2] = u * this._renderer._tint[2] / 255, s[a + 3] = c * this._renderer._tint[3] / 255;
                }
                return i.putImageData(o, 0, 0), r;
            }, i.prototype.imageMode = function(e) {
                i._validateParameters("imageMode", arguments), e !== s.CORNER && e !== s.CORNERS && e !== s.CENTER || (this._renderer._imageMode = e);
            }, t.exports = i;
        }, {
            "../core/constants": 17,
            "../core/error_helpers": 19,
            "../core/helpers": 20,
            "../core/main": 23,
            "./filters": 41
        } ],
        44: [ function(e, t, r) {
            "use strict";
            var i = e("../core/main"), n = e("./filters");
            i.Image = function(e, t) {
                this.width = e, this.height = t, this.canvas = document.createElement("canvas"), 
                this.canvas.width = this.width, this.canvas.height = this.height, this.drawingContext = this.canvas.getContext("2d"), 
                (this._pixelsState = this)._pixelDensity = 1, this._modified = !1, this._pixelsDirty = !0, 
                this.pixels = [];
            }, i.Image.prototype._setProperty = function(e, t) {
                this[e] = t, this.setModified(!0);
            }, i.Image.prototype.loadPixels = function() {
                i.Renderer2D.prototype.loadPixels.call(this), this.setModified(!0);
            }, i.Image.prototype.updatePixels = function(e, t, r, n) {
                i.Renderer2D.prototype.updatePixels.call(this, e, t, r, n), this.setModified(!0);
            }, i.Image.prototype.get = function(e, t, r, n) {
                return i._validateParameters("p5.Image.get", arguments), i.Renderer2D.prototype.get.apply(this, arguments);
            }, i.Image.prototype._getPixel = i.Renderer2D.prototype._getPixel, i.Image.prototype.set = function(e, t, r) {
                i.Renderer2D.prototype.set.call(this, e, t, r), this.setModified(!0);
            }, i.Image.prototype.resize = function(e, t) {
                0 === e && 0 === t ? (e = this.canvas.width, t = this.canvas.height) : 0 === e ? e = this.canvas.width * t / this.canvas.height : 0 === t && (t = this.canvas.height * e / this.canvas.width), 
                e = Math.floor(e), t = Math.floor(t);
                var r = document.createElement("canvas");
                r.width = e, r.height = t, r.getContext("2d").drawImage(this.canvas, 0, 0, this.canvas.width, this.canvas.height, 0, 0, r.width, r.height), 
                this.canvas.width = this.width = e, this.canvas.height = this.height = t, this.drawingContext.drawImage(r, 0, 0, e, t, 0, 0, e, t), 
                0 < this.pixels.length && this.loadPixels(), this.setModified(!0), this._pixelsDirty = !0;
            }, i.Image.prototype.copy = function() {
                var e, t, r, n, o, s, a, h, l;
                if (9 === arguments.length) e = arguments[0], t = arguments[1], r = arguments[2], 
                n = arguments[3], o = arguments[4], s = arguments[5], a = arguments[6], h = arguments[7], 
                l = arguments[8]; else {
                    if (8 !== arguments.length) throw new Error("Signature not supported");
                    e = this, t = arguments[0], r = arguments[1], n = arguments[2], o = arguments[3], 
                    s = arguments[4], a = arguments[5], h = arguments[6], l = arguments[7];
                }
                i.Renderer2D._copyHelper(this, e, t, r, n, o, s, a, h, l), this._pixelsDirty = !0;
            }, i.Image.prototype.mask = function(e) {
                void 0 === e && (e = this);
                var t = this.drawingContext.globalCompositeOperation, r = 1;
                e instanceof i.Renderer && (r = e._pInst._pixelDensity);
                var n = [ e, 0, 0, r * e.width, r * e.height, 0, 0, this.width, this.height ];
                this.drawingContext.globalCompositeOperation = "destination-in", i.Image.prototype.copy.apply(this, n), 
                this.drawingContext.globalCompositeOperation = t, this.setModified(!0);
            }, i.Image.prototype.filter = function(e, t) {
                n.apply(this.canvas, n[e], t), this.setModified(!0);
            }, i.Image.prototype.blend = function() {
                i.prototype.blend.apply(this, arguments), this.setModified(!0);
            }, i.Image.prototype.setModified = function(e) {
                this._modified = e;
            }, i.Image.prototype.isModified = function() {
                return this._modified;
            }, i.Image.prototype.save = function(e, t) {
                i.prototype.saveCanvas(this.canvas, e, t);
            }, t.exports = i.Image;
        }, {
            "../core/main": 23,
            "./filters": 41
        } ],
        45: [ function(e, t, r) {
            "use strict";
            var i = e("../core/main"), n = e("./filters");
            e("../color/p5.Color"), i.prototype.pixels = [], i.prototype.blend = function() {
                i._validateParameters("blend", arguments), this._renderer ? this._renderer.blend.apply(this._renderer, arguments) : i.Renderer2D.prototype.blend.apply(this, arguments);
            }, i.prototype.copy = function() {
                i._validateParameters("copy", arguments), i.Renderer2D.prototype.copy.apply(this._renderer, arguments);
            }, i.prototype.filter = function(e, t) {
                i._validateParameters("filter", arguments), void 0 !== this.canvas ? n.apply(this.canvas, n[e], t) : n.apply(this.elt, n[e], t);
            }, i.prototype.get = function(e, t, r, n) {
                return i._validateParameters("get", arguments), this._renderer.get.apply(this._renderer, arguments);
            }, i.prototype.loadPixels = function() {
                i._validateParameters("loadPixels", arguments), this._renderer.loadPixels();
            }, i.prototype.set = function(e, t, r) {
                this._renderer.set(e, t, r);
            }, i.prototype.updatePixels = function(e, t, r, n) {
                i._validateParameters("updatePixels", arguments), 0 !== this.pixels.length && this._renderer.updatePixels(e, t, r, n);
            }, t.exports = i;
        }, {
            "../color/p5.Color": 15,
            "../core/main": 23,
            "./filters": 41
        } ],
        46: [ function(e, t, r) {
            "use strict";
            var i = e("../core/main");
            e("whatwg-fetch"), e("es6-promise").polyfill();
            var n = e("fetch-jsonp");
            function o(e, t) {
                var r = {};
                if (void 0 === (t = t || [])) for (var i = 0; i < e.length; i++) t[i.toString()] = i;
                for (var n = 0; n < t.length; n++) {
                    var o = t[n], s = e[n];
                    r[o] = s;
                }
                return r;
            }
            function s(e) {
                return e.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#039;");
            }
            function a(e, t) {
                t && !0 !== t && "true" !== t || (t = ""), e || (e = "untitled");
                var r = "";
                return e && -1 < e.indexOf(".") && (r = e.split(".").pop()), t && r !== t && (e = e + "." + (r = t)), 
                [ e, r ];
            }
            e("../core/error_helpers"), i.prototype.loadJSON = function() {
                i._validateParameters("loadJSON", arguments);
                for (var e, t, r, n = arguments[0], o = {}, s = "json", a = 1; a < arguments.length; a++) {
                    var h = arguments[a];
                    "string" == typeof h ? "jsonp" !== h && "json" !== h || (s = h) : "function" == typeof h ? e ? t = h : e = h : "object" == typeof h && h.hasOwnProperty("jsonpCallback") && (s = "jsonp", 
                    r = h);
                }
                var l = this;
                return this.httpDo(n, "GET", r, s, function(t) {
                    for (var r in t) o[r] = t[r];
                    void 0 !== e && e(t), l._decrementPreload();
                }, function(e) {
                    if (i._friendlyFileLoadError(5, n), !t) throw e;
                    t(e);
                }), o;
            }, i.prototype.loadStrings = function() {
                i._validateParameters("loadStrings", arguments);
                for (var e, t, r = [], n = 1; n < arguments.length; n++) {
                    var o = arguments[n];
                    "function" == typeof o && (void 0 === e ? e = o : void 0 === t && (t = o));
                }
                var s = this;
                return i.prototype.httpDo.call(this, arguments[0], "GET", "text", function(t) {
                    var i = t.replace(/\r\n/g, "\r").replace(/\n/g, "\r").split(/\r/);
                    Array.prototype.push.apply(r, i), void 0 !== e && e(r), s._decrementPreload();
                }, function(e) {
                    if (i._friendlyFileLoadError(3, e), !t) throw e;
                    t(e);
                }), r;
            }, i.prototype.loadTable = function(e) {
                var t, r, n = [], s = !1, a = e.substring(e.lastIndexOf(".") + 1, e.length), h = ",", l = !1;
                "tsv" === a && (h = "\t");
                for (var u = 1; u < arguments.length; u++) if ("function" == typeof arguments[u]) void 0 === t ? t = arguments[u] : void 0 === r && (r = arguments[u]); else if ("string" == typeof arguments[u]) if (n.push(arguments[u]), 
                "header" === arguments[u] && (s = !0), "csv" === arguments[u]) {
                    if (l) throw new Error("Cannot set multiple separator types.");
                    h = ",", l = !0;
                } else if ("tsv" === arguments[u]) {
                    if (l) throw new Error("Cannot set multiple separator types.");
                    h = "\t", l = !0;
                }
                var c = new i.Table(), p = this;
                return this.httpDo(e, "GET", "table", function(e) {
                    for (var r, n, a = {}, l = [], d = 0, f = null, m = function() {
                        a.currentState = 0, a.token = "";
                    }, g = function() {
                        f.push(a.token), m();
                    }, v = function() {
                        a.currentState = 4, l.push(f), f = null;
                    }; ;) {
                        if (null == (r = e[d++])) {
                            if (a.escaped) throw new Error("Unclosed quote in file.");
                            if (f) {
                                g(), v();
                                break;
                            }
                        }
                        if (null === f && (a.escaped = !1, f = [], m()), 0 === a.currentState) {
                            if ('"' === r) {
                                a.escaped = !0, a.currentState = 1;
                                continue;
                            }
                            a.currentState = 1;
                        }
                        if (1 === a.currentState && a.escaped) if ('"' === r) '"' === e[d] ? (a.token += '"', 
                        d++) : (a.escaped = !1, a.currentState = 2); else {
                            if ("\r" === r) continue;
                            a.token += r;
                        } else "\r" === r ? ("\n" === e[d] && d++, g(), v()) : "\n" === r ? (g(), v()) : r === h ? g() : 1 === a.currentState && (a.token += r);
                    }
                    if (s) c.columns = l.shift(); else for (u = 0; u < l[0].length; u++) c.columns[u] = "null";
                    for (u = 0; u < l.length; u++) (1 !== l[u].length || "undefined" !== l[u][0] && "" !== l[u][0]) && ((n = new i.TableRow()).arr = l[u], 
                    n.obj = o(l[u], c.columns), c.addRow(n));
                    "function" == typeof t && t(c), p._decrementPreload();
                }, function(t) {
                    i._friendlyFileLoadError(2, e), r ? r(t) : console.error(t);
                }), c;
            }, i.prototype.loadXML = function() {
                for (var e, t, r = new i.XML(), n = 1; n < arguments.length; n++) {
                    var o = arguments[n];
                    "function" == typeof o && (void 0 === e ? e = o : void 0 === t && (t = o));
                }
                var s = this;
                return this.httpDo(arguments[0], "GET", "xml", function(t) {
                    for (var i in t) r[i] = t[i];
                    void 0 !== e && e(r), s._decrementPreload();
                }, function(e) {
                    if (i._friendlyFileLoadError(1, e), !t) throw e;
                    t(e);
                }), r;
            }, i.prototype.loadBytes = function(e, t, r) {
                var n = {}, o = this;
                return this.httpDo(e, "GET", "arrayBuffer", function(e) {
                    n.bytes = new Uint8Array(e), "function" == typeof t && t(n), o._decrementPreload();
                }, function(t) {
                    if (i._friendlyFileLoadError(6, e), !r) throw t;
                    r(t);
                }), n;
            }, i.prototype.httpGet = function() {
                i._validateParameters("httpGet", arguments);
                var e = Array.prototype.slice.call(arguments);
                return e.splice(1, 0, "GET"), i.prototype.httpDo.apply(this, e);
            }, i.prototype.httpPost = function() {
                i._validateParameters("httpPost", arguments);
                var e = Array.prototype.slice.call(arguments);
                return e.splice(1, 0, "POST"), i.prototype.httpDo.apply(this, e);
            }, i.prototype.httpDo = function() {
                for (var e, t, r, o, s, a = {}, h = 0, l = "text/plain", u = arguments.length - 1; 0 < u && "function" == typeof arguments[u]; u--) h++;
                var c = arguments.length - h, p = arguments[0];
                if (2 === c && "string" == typeof p && "object" == typeof arguments[1]) o = new Request(p, arguments[1]), 
                t = arguments[2], r = arguments[3]; else {
                    for (var d, f = "GET", m = 1; m < arguments.length; m++) {
                        var g = arguments[m];
                        if ("string" == typeof g) "GET" === g || "POST" === g || "PUT" === g || "DELETE" === g ? f = g : "json" === g || "jsonp" === g || "binary" === g || "arrayBuffer" === g || "xml" === g || "text" === g || "table" === g ? e = g : d = g; else if ("number" == typeof g) d = g.toString(); else if ("object" == typeof g) if (g.hasOwnProperty("jsonpCallback")) for (var v in g) a[v] = g[v]; else l = g instanceof i.XML ? (d = g.serialize(), 
                        "application/xml") : (d = JSON.stringify(g), "application/json"); else "function" == typeof g && (t ? r = g : t = g);
                    }
                    o = new Request(p, {
                        method: f,
                        mode: "cors",
                        body: d,
                        headers: new Headers({
                            "Content-Type": l
                        })
                    });
                }
                return e || (e = -1 !== p.indexOf("json") ? "json" : -1 !== p.indexOf("xml") ? "xml" : "text"), 
                (s = (s = "jsonp" === e ? n(p, a) : fetch(o)).then(function(t) {
                    if (!t.ok) {
                        var r = new Error(t.body);
                        throw r.status = t.status, r.ok = !1, r;
                    }
                    var n = 0;
                    switch ("jsonp" !== e && (n = t.headers.get("content-length")), n && 64e6 < n && i._friendlyFileLoadError(7, p), 
                    e) {
                      case "json":
                      case "jsonp":
                        return t.json();

                      case "binary":
                        return t.blob();

                      case "arrayBuffer":
                        return t.arrayBuffer();

                      case "xml":
                        return t.text().then(function(e) {
                            var t = new DOMParser().parseFromString(e, "text/xml");
                            return new i.XML(t.documentElement);
                        });

                      default:
                        return t.text();
                    }
                })).then(t || function() {}), s.catch(r || console.error), s;
            }, window.URL = window.URL || window.webkitURL, i.prototype._pWriters = [], i.prototype.createWriter = function(e, t) {
                var r;
                for (var n in i.prototype._pWriters) if (i.prototype._pWriters[n].name === e) return r = new i.PrintWriter(e + this.millis(), t), 
                i.prototype._pWriters.push(r), r;
                return r = new i.PrintWriter(e, t), i.prototype._pWriters.push(r), r;
            }, i.PrintWriter = function(e, t) {
                var r = this;
                this.name = e, this.content = "", this.write = function(e) {
                    this.content += e;
                }, this.print = function(e) {
                    this.content += e + "\n";
                }, this.clear = function() {
                    this.content = "";
                }, this.close = function() {
                    var n = [];
                    for (var o in n.push(this.content), i.prototype.writeFile(n, e, t), i.prototype._pWriters) i.prototype._pWriters[o].name === this.name && i.prototype._pWriters.splice(o, 1);
                    r.clear(), r = {};
                };
            }, i.prototype.save = function(e, t, r) {
                var n = arguments, o = this._curElement ? this._curElement.elt : this.elt;
                if (0 !== n.length) if (n[0] instanceof i.Renderer || n[0] instanceof i.Graphics) i.prototype.saveCanvas(n[0].elt, n[1], n[2]); else if (1 === n.length && "string" == typeof n[0]) i.prototype.saveCanvas(o, n[0]); else switch (a(n[1], n[2])[1]) {
                  case "json":
                    return void i.prototype.saveJSON(n[0], n[1], n[2]);

                  case "txt":
                    return void i.prototype.saveStrings(n[0], n[1], n[2]);

                  default:
                    n[0] instanceof Array ? i.prototype.saveStrings(n[0], n[1], n[2]) : n[0] instanceof i.Table ? i.prototype.saveTable(n[0], n[1], n[2]) : n[0] instanceof i.Image ? i.prototype.saveCanvas(n[0].canvas, n[1]) : n[0] instanceof i.SoundFile && i.prototype.saveSound(n[0], n[1], n[2], n[3]);
                } else i.prototype.saveCanvas(o);
            }, i.prototype.saveJSON = function(e, t, r) {
                var n;
                i._validateParameters("saveJSON", arguments), n = r ? JSON.stringify(e) : JSON.stringify(e, void 0, 2), 
                this.saveStrings(n.split("\n"), t, "json");
            }, i.prototype.saveJSONObject = i.prototype.saveJSON, i.prototype.saveJSONArray = i.prototype.saveJSON, 
            i.prototype.saveStrings = function(e, t, r) {
                i._validateParameters("saveStrings", arguments);
                for (var n = r || "txt", o = this.createWriter(t, n), s = 0; s < e.length; s++) e.length, 
                o.print(e[s]);
                o.close(), o.clear();
            }, i.prototype.saveTable = function(e, t, r) {
                var n;
                i._validateParameters("saveTable", arguments), n = void 0 === r ? t.substring(t.lastIndexOf(".") + 1, t.length) : r;
                var o = this.createWriter(t, n), a = e.columns, h = ",";
                if ("tsv" === n && (h = "\t"), "html" !== n) {
                    if ("0" !== a[0]) {
                        for (var l = 0; l < a.length; l++) l < a.length - 1 ? o.write(a[l] + h) : o.write(a[l]);
                        o.write("\n");
                    }
                    for (var u = 0; u < e.rows.length; u++) {
                        var c;
                        for (c = 0; c < e.rows[u].arr.length; c++) c < e.rows[u].arr.length - 1 ? o.write(e.rows[u].arr[c] + h) : (e.rows.length, 
                        o.write(e.rows[u].arr[c]));
                        o.write("\n");
                    }
                } else {
                    if (o.print("<html>"), o.print("<head>"), o.print('  <meta http-equiv="content-type" content="text/html;charset=utf-8" />'), 
                    o.print("</head>"), o.print("<body>"), o.print("  <table>"), "0" !== a[0]) {
                        o.print("    <tr>");
                        for (var p = 0; p < a.length; p++) {
                            var d = s(a[p]);
                            o.print("      <td>" + d), o.print("      </td>");
                        }
                        o.print("    </tr>");
                    }
                    for (var f = 0; f < e.rows.length; f++) {
                        o.print("    <tr>");
                        for (var m = 0; m < e.columns.length; m++) {
                            var g = s(e.rows[f].getString(m));
                            o.print("      <td>" + g), o.print("      </td>");
                        }
                        o.print("    </tr>");
                    }
                    o.print("  </table>"), o.print("</body>"), o.print("</html>");
                }
                o.close(), o.clear();
            }, i.prototype.writeFile = function(e, t, r) {
                var n = "application/octet-stream";
                i.prototype._isSafari() && (n = "text/plain");
                var o = new Blob(e, {
                    type: n
                });
                i.prototype.downloadFile(o, t, r);
            }, i.prototype.downloadFile = function(t, r, n) {
                var o = a(r, n), s = o[0];
                if (t instanceof Blob) e("file-saver").saveAs(t, s); else {
                    var h = document.createElement("a");
                    if (h.href = t, h.download = s, h.onclick = function(e) {
                        var t;
                        t = e, document.body.removeChild(t.target), e.stopPropagation();
                    }, h.style.display = "none", document.body.appendChild(h), i.prototype._isSafari()) {
                        var l = "Hello, Safari user! To download this file...\n";
                        l += "1. Go to File --\x3e Save As.\n", l += '2. Choose "Page Source" as the Format.\n', 
                        l += '3. Name it with this extension: ."' + o[1] + '"', alert(l);
                    }
                    h.click();
                }
            }, i.prototype._checkFileExtension = a, i.prototype._isSafari = function() {
                return 0 < Object.prototype.toString.call(window.HTMLElement).indexOf("Constructor");
            }, t.exports = i;
        }, {
            "../core/error_helpers": 19,
            "../core/main": 23,
            "es6-promise": 4,
            "fetch-jsonp": 5,
            "file-saver": 6,
            "whatwg-fetch": 11
        } ],
        47: [ function(e, t, r) {
            "use strict";
            var i = e("../core/main");
            i.Table = function(e) {
                this.columns = [], this.rows = [];
            }, i.Table.prototype.addRow = function(e) {
                var t = e || new i.TableRow();
                if (void 0 === t.arr || void 0 === t.obj) throw new Error("invalid TableRow: " + t);
                return (t.table = this).rows.push(t), t;
            }, i.Table.prototype.removeRow = function(e) {
                this.rows[e].table = null;
                var t = this.rows.splice(e + 1, this.rows.length);
                this.rows.pop(), this.rows = this.rows.concat(t);
            }, i.Table.prototype.getRow = function(e) {
                return this.rows[e];
            }, i.Table.prototype.getRows = function() {
                return this.rows;
            }, i.Table.prototype.findRow = function(e, t) {
                if ("string" == typeof t) {
                    for (var r = 0; r < this.rows.length; r++) if (this.rows[r].obj[t] === e) return this.rows[r];
                } else for (var i = 0; i < this.rows.length; i++) if (this.rows[i].arr[t] === e) return this.rows[i];
                return null;
            }, i.Table.prototype.findRows = function(e, t) {
                var r = [];
                if ("string" == typeof t) for (var i = 0; i < this.rows.length; i++) this.rows[i].obj[t] === e && r.push(this.rows[i]); else for (var n = 0; n < this.rows.length; n++) this.rows[n].arr[t] === e && r.push(this.rows[n]);
                return r;
            }, i.Table.prototype.matchRow = function(e, t) {
                if ("number" == typeof t) {
                    for (var r = 0; r < this.rows.length; r++) if (this.rows[r].arr[t].match(e)) return this.rows[r];
                } else for (var i = 0; i < this.rows.length; i++) if (this.rows[i].obj[t].match(e)) return this.rows[i];
                return null;
            }, i.Table.prototype.matchRows = function(e, t) {
                var r = [];
                if ("number" == typeof t) for (var i = 0; i < this.rows.length; i++) this.rows[i].arr[t].match(e) && r.push(this.rows[i]); else for (var n = 0; n < this.rows.length; n++) this.rows[n].obj[t].match(e) && r.push(this.rows[n]);
                return r;
            }, i.Table.prototype.getColumn = function(e) {
                var t = [];
                if ("string" == typeof e) for (var r = 0; r < this.rows.length; r++) t.push(this.rows[r].obj[e]); else for (var i = 0; i < this.rows.length; i++) t.push(this.rows[i].arr[e]);
                return t;
            }, i.Table.prototype.clearRows = function() {
                delete this.rows, this.rows = [];
            }, i.Table.prototype.addColumn = function(e) {
                var t = e || null;
                this.columns.push(t);
            }, i.Table.prototype.getColumnCount = function() {
                return this.columns.length;
            }, i.Table.prototype.getRowCount = function() {
                return this.rows.length;
            }, i.Table.prototype.removeTokens = function(e, t) {
                for (var r = [], i = 0; i < e.length; i++) r.push(e.charAt(i).replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&"));
                var n = new RegExp(r.join("|"), "g");
                if (void 0 === t) for (var o = 0; o < this.columns.length; o++) for (var s = 0; s < this.rows.length; s++) {
                    var a = this.rows[s].arr[o];
                    a = a.replace(n, ""), this.rows[s].arr[o] = a, this.rows[s].obj[this.columns[o]] = a;
                } else if ("string" == typeof t) for (var h = 0; h < this.rows.length; h++) {
                    var l = this.rows[h].obj[t];
                    l = l.replace(n, ""), this.rows[h].obj[t] = l;
                    var u = this.columns.indexOf(t);
                    this.rows[h].arr[u] = l;
                } else for (var c = 0; c < this.rows.length; c++) {
                    var p = this.rows[c].arr[t];
                    p = p.replace(n, ""), this.rows[c].arr[t] = p, this.rows[c].obj[this.columns[t]] = p;
                }
            }, i.Table.prototype.trim = function(e) {
                var t = new RegExp(" ", "g");
                if (void 0 === e) for (var r = 0; r < this.columns.length; r++) for (var i = 0; i < this.rows.length; i++) {
                    var n = this.rows[i].arr[r];
                    n = n.replace(t, ""), this.rows[i].arr[r] = n, this.rows[i].obj[this.columns[r]] = n;
                } else if ("string" == typeof e) for (var o = 0; o < this.rows.length; o++) {
                    var s = this.rows[o].obj[e];
                    s = s.replace(t, ""), this.rows[o].obj[e] = s;
                    var a = this.columns.indexOf(e);
                    this.rows[o].arr[a] = s;
                } else for (var h = 0; h < this.rows.length; h++) {
                    var l = this.rows[h].arr[e];
                    l = l.replace(t, ""), this.rows[h].arr[e] = l, this.rows[h].obj[this.columns[e]] = l;
                }
            }, i.Table.prototype.removeColumn = function(e) {
                var t, r;
                "string" == typeof e ? (t = e, r = this.columns.indexOf(e)) : (r = e, t = this.columns[e]);
                var i = this.columns.splice(r + 1, this.columns.length);
                this.columns.pop(), this.columns = this.columns.concat(i);
                for (var n = 0; n < this.rows.length; n++) {
                    var o = this.rows[n].arr, s = o.splice(r + 1, o.length);
                    o.pop(), this.rows[n].arr = o.concat(s), delete this.rows[n].obj[t];
                }
            }, i.Table.prototype.set = function(e, t, r) {
                this.rows[e].set(t, r);
            }, i.Table.prototype.setNum = function(e, t, r) {
                this.rows[e].setNum(t, r);
            }, i.Table.prototype.setString = function(e, t, r) {
                this.rows[e].setString(t, r);
            }, i.Table.prototype.get = function(e, t) {
                return this.rows[e].get(t);
            }, i.Table.prototype.getNum = function(e, t) {
                return this.rows[e].getNum(t);
            }, i.Table.prototype.getString = function(e, t) {
                return this.rows[e].getString(t);
            }, i.Table.prototype.getObject = function(e) {
                for (var t, r = {}, i = 0; i < this.rows.length; i++) if (t = this.rows[i].obj, 
                "string" == typeof e) {
                    if (!(0 <= this.columns.indexOf(e))) throw new Error('This table has no column named "' + e + '"');
                    r[t[e]] = t;
                } else r[i] = this.rows[i].obj;
                return r;
            }, i.Table.prototype.getArray = function() {
                for (var e = [], t = 0; t < this.rows.length; t++) e.push(this.rows[t].arr);
                return e;
            }, t.exports = i;
        }, {
            "../core/main": 23
        } ],
        48: [ function(e, t, r) {
            "use strict";
            var i = e("../core/main");
            i.TableRow = function(e, t) {
                var r = [], i = {};
                e && (t = t || ",", r = e.split(t));
                for (var n = 0; n < r.length; n++) {
                    var o = n, s = r[n];
                    i[o] = s;
                }
                this.arr = r, this.obj = i, this.table = null;
            }, i.TableRow.prototype.set = function(e, t) {
                if ("string" == typeof e) {
                    var r = this.table.columns.indexOf(e);
                    if (!(0 <= r)) throw new Error('This table has no column named "' + e + '"');
                    this.obj[e] = t, this.arr[r] = t;
                } else {
                    if (!(e < this.table.columns.length)) throw new Error("Column #" + e + " is out of the range of this table");
                    this.arr[e] = t;
                    var i = this.table.columns[e];
                    this.obj[i] = t;
                }
            }, i.TableRow.prototype.setNum = function(e, t) {
                var r = parseFloat(t);
                this.set(e, r);
            }, i.TableRow.prototype.setString = function(e, t) {
                var r = t.toString();
                this.set(e, r);
            }, i.TableRow.prototype.get = function(e) {
                return "string" == typeof e ? this.obj[e] : this.arr[e];
            }, i.TableRow.prototype.getNum = function(e) {
                var t;
                if ("NaN" === (t = "string" == typeof e ? parseFloat(this.obj[e]) : parseFloat(this.arr[e])).toString()) throw "Error: " + this.obj[e] + " is NaN (Not a Number)";
                return t;
            }, i.TableRow.prototype.getString = function(e) {
                return "string" == typeof e ? this.obj[e].toString() : this.arr[e].toString();
            }, t.exports = i;
        }, {
            "../core/main": 23
        } ],
        49: [ function(e, t, r) {
            "use strict";
            var i = e("../core/main");
            i.XML = function(e) {
                if (e) this.DOM = e; else {
                    var t = document.implementation.createDocument(null, "doc");
                    this.DOM = t.createElement("root");
                }
            }, i.XML.prototype.getParent = function() {
                return new i.XML(this.DOM.parentElement);
            }, i.XML.prototype.getName = function() {
                return this.DOM.tagName;
            }, i.XML.prototype.setName = function(e) {
                var t = this.DOM.innerHTML, r = this.DOM.attributes, i = document.implementation.createDocument(null, "default").createElement(e);
                i.innerHTML = t;
                for (var n = 0; n < r.length; n++) i.setAttribute(r[n].nodeName, r.nodeValue);
                this.DOM = i;
            }, i.XML.prototype.hasChildren = function() {
                return 0 < this.DOM.children.length;
            }, i.XML.prototype.listChildren = function() {
                for (var e = [], t = 0; t < this.DOM.childNodes.length; t++) e.push(this.DOM.childNodes[t].nodeName);
                return e;
            }, i.XML.prototype.getChildren = function(e) {
                return function(e) {
                    for (var t = [], r = 0; r < e.length; r++) t.push(new i.XML(e[r]));
                    return t;
                }(e ? this.DOM.getElementsByTagName(e) : this.DOM.children);
            }, i.XML.prototype.getChild = function(e) {
                if ("string" != typeof e) return new i.XML(this.DOM.children[e]);
                for (var t = 0; t < this.DOM.children.length; t++) {
                    var r = this.DOM.children[t];
                    if (r.tagName === e) return new i.XML(r);
                }
            }, i.XML.prototype.addChild = function(e) {
                e instanceof i.XML && this.DOM.appendChild(e.DOM);
            }, i.XML.prototype.removeChild = function(e) {
                var t = -1;
                if ("string" == typeof e) {
                    for (var r = 0; r < this.DOM.children.length; r++) if (this.DOM.children[r].tagName === e) {
                        t = r;
                        break;
                    }
                } else t = e;
                -1 !== t && this.DOM.removeChild(this.DOM.children[t]);
            }, i.XML.prototype.getAttributeCount = function() {
                return this.DOM.attributes.length;
            }, i.XML.prototype.listAttributes = function() {
                for (var e = [], t = 0; t < this.DOM.attributes.length; t++) {
                    var r = this.DOM.attributes[t];
                    e.push(r.nodeName);
                }
                return e;
            }, i.XML.prototype.hasAttribute = function(e) {
                for (var t = {}, r = 0; r < this.DOM.attributes.length; r++) {
                    var i = this.DOM.attributes[r];
                    t[i.nodeName] = i.nodeValue;
                }
                return !!t[e];
            }, i.XML.prototype.getNum = function(e, t) {
                for (var r = {}, i = 0; i < this.DOM.attributes.length; i++) {
                    var n = this.DOM.attributes[i];
                    r[n.nodeName] = n.nodeValue;
                }
                return Number(r[e]) || t || 0;
            }, i.XML.prototype.getString = function(e, t) {
                for (var r = {}, i = 0; i < this.DOM.attributes.length; i++) {
                    var n = this.DOM.attributes[i];
                    r[n.nodeName] = n.nodeValue;
                }
                return r[e] ? String(r[e]) : t || null;
            }, i.XML.prototype.setAttribute = function(e, t) {
                this.DOM.setAttribute(e, t);
            }, i.XML.prototype.getContent = function(e) {
                return this.DOM.textContent.replace(/\s\s+/g, ",") || e || null;
            }, i.XML.prototype.setContent = function(e) {
                this.DOM.children.length || (this.DOM.textContent = e);
            }, i.XML.prototype.serialize = function() {
                return new XMLSerializer().serializeToString(this.DOM);
            }, t.exports = i;
        }, {
            "../core/main": 23
        } ],
        50: [ function(e, t, r) {
            "use strict";
            var i = e("../core/main");
            function n(e, t, r) {
                if ("function" == typeof Math.hypot) return Math.hypot.apply(null, arguments);
                for (var i = arguments.length, n = [], o = 0, s = 0; s < i; s++) {
                    var a = arguments[s];
                    if ((a = +a) == 1 / 0 || a === -1 / 0) return 1 / 0;
                    o < (a = Math.abs(a)) && (o = a), n[s] = a;
                }
                0 === o && (o = 1);
                for (var h = 0, l = 0, u = 0; u < i; u++) {
                    var c = n[u] / o, p = c * c - l, d = h + p;
                    l = d - h - p, h = d;
                }
                return Math.sqrt(h) * o;
            }
            i.prototype.abs = Math.abs, i.prototype.ceil = Math.ceil, i.prototype.constrain = function(e, t, r) {
                return i._validateParameters("constrain", arguments), Math.max(Math.min(e, r), t);
            }, i.prototype.dist = function() {
                return i._validateParameters("dist", arguments), 4 === arguments.length ? n(arguments[2] - arguments[0], arguments[3] - arguments[1]) : 6 === arguments.length ? n(arguments[3] - arguments[0], arguments[4] - arguments[1], arguments[5] - arguments[2]) : void 0;
            }, i.prototype.exp = Math.exp, i.prototype.floor = Math.floor, i.prototype.lerp = function(e, t, r) {
                return i._validateParameters("lerp", arguments), r * (t - e) + e;
            }, i.prototype.log = Math.log, i.prototype.mag = function(e, t) {
                return i._validateParameters("mag", arguments), n(e, t);
            }, i.prototype.map = function(e, t, r, n, o, s) {
                i._validateParameters("map", arguments);
                var a = (e - t) / (r - t) * (o - n) + n;
                return s ? n < o ? this.constrain(a, n, o) : this.constrain(a, o, n) : a;
            }, i.prototype.max = function() {
                return i._validateParameters("max", arguments), arguments[0] instanceof Array ? Math.max.apply(null, arguments[0]) : Math.max.apply(null, arguments);
            }, i.prototype.min = function() {
                return i._validateParameters("min", arguments), arguments[0] instanceof Array ? Math.min.apply(null, arguments[0]) : Math.min.apply(null, arguments);
            }, i.prototype.norm = function(e, t, r) {
                return i._validateParameters("norm", arguments), this.map(e, t, r, 0, 1);
            }, i.prototype.pow = Math.pow, i.prototype.round = Math.round, i.prototype.sq = function(e) {
                return e * e;
            }, i.prototype.sqrt = Math.sqrt, t.exports = i;
        }, {
            "../core/main": 23
        } ],
        51: [ function(e, t, r) {
            "use strict";
            var i = e("../core/main");
            i.prototype.createVector = function(e, t, r) {
                return this instanceof i ? new i.Vector(this, arguments) : new i.Vector(e, t, r);
            }, t.exports = i;
        }, {
            "../core/main": 23
        } ],
        52: [ function(e, t, r) {
            "use strict";
            var i, n = e("../core/main"), o = 4095, s = 4, a = .5, h = function(e) {
                return .5 * (1 - Math.cos(e * Math.PI));
            };
            n.prototype.noise = function(e, t, r) {
                if (t = t || 0, r = r || 0, null == i) {
                    i = new Array(4096);
                    for (var n = 0; n < 4096; n++) i[n] = Math.random();
                }
                e < 0 && (e = -e), t < 0 && (t = -t), r < 0 && (r = -r);
                for (var l, u, c, p, d, f = Math.floor(e), m = Math.floor(t), g = Math.floor(r), v = e - f, y = t - m, b = r - g, x = 0, _ = .5, w = 0; w < s; w++) {
                    var S = f + (m << 4) + (g << 8);
                    l = h(v), u = h(y), c = i[S & o], c += l * (i[S + 1 & o] - c), p = i[S + 16 & o], 
                    c += u * ((p += l * (i[S + 16 + 1 & o] - p)) - c), p = i[(S += 256) & o], p += l * (i[S + 1 & o] - p), 
                    d = i[S + 16 & o], p += u * ((d += l * (i[S + 16 + 1 & o] - d)) - p), x += (c += h(b) * (p - c)) * _, 
                    _ *= a, f <<= 1, m <<= 1, g <<= 1, 1 <= (v *= 2) && (f++, v--), 1 <= (y *= 2) && (m++, 
                    y--), 1 <= (b *= 2) && (g++, b--);
                }
                return x;
            }, n.prototype.noiseDetail = function(e, t) {
                0 < e && (s = e), 0 < t && (a = t);
            }, n.prototype.noiseSeed = function(e) {
                var t, r, n, o = (n = 4294967296, {
                    setSeed: function(e) {
                        r = t = (null == e ? Math.random() * n : e) >>> 0;
                    },
                    getSeed: function() {
                        return t;
                    },
                    rand: function() {
                        return (r = (1664525 * r + 1013904223) % n) / n;
                    }
                });
                o.setSeed(e), i = new Array(4096);
                for (var s = 0; s < 4096; s++) i[s] = o.rand();
            }, t.exports = n;
        }, {
            "../core/main": 23
        } ],
        53: [ function(e, t, r) {
            "use strict";
            var i = e("../core/main"), n = e("../core/constants");
            i.Vector = function() {
                var e, t, r;
                r = arguments[0] instanceof i ? (this.p5 = arguments[0], e = arguments[1][0] || 0, 
                t = arguments[1][1] || 0, arguments[1][2] || 0) : (e = arguments[0] || 0, t = arguments[1] || 0, 
                arguments[2] || 0), this.x = e, this.y = t, this.z = r;
            }, i.Vector.prototype.toString = function() {
                return "p5.Vector Object : [" + this.x + ", " + this.y + ", " + this.z + "]";
            }, i.Vector.prototype.set = function(e, t, r) {
                return e instanceof i.Vector ? (this.x = e.x || 0, this.y = e.y || 0, this.z = e.z || 0) : e instanceof Array ? (this.x = e[0] || 0, 
                this.y = e[1] || 0, this.z = e[2] || 0) : (this.x = e || 0, this.y = t || 0, this.z = r || 0), 
                this;
            }, i.Vector.prototype.copy = function() {
                return this.p5 ? new i.Vector(this.p5, [ this.x, this.y, this.z ]) : new i.Vector(this.x, this.y, this.z);
            }, i.Vector.prototype.add = function(e, t, r) {
                return e instanceof i.Vector ? (this.x += e.x || 0, this.y += e.y || 0, this.z += e.z || 0) : e instanceof Array ? (this.x += e[0] || 0, 
                this.y += e[1] || 0, this.z += e[2] || 0) : (this.x += e || 0, this.y += t || 0, 
                this.z += r || 0), this;
            }, i.Vector.prototype.sub = function(e, t, r) {
                return e instanceof i.Vector ? (this.x -= e.x || 0, this.y -= e.y || 0, this.z -= e.z || 0) : e instanceof Array ? (this.x -= e[0] || 0, 
                this.y -= e[1] || 0, this.z -= e[2] || 0) : (this.x -= e || 0, this.y -= t || 0, 
                this.z -= r || 0), this;
            }, i.Vector.prototype.mult = function(e) {
                return "number" == typeof e && isFinite(e) ? (this.x *= e, this.y *= e, this.z *= e) : console.warn("p5.Vector.prototype.mult:", "n is undefined or not a finite number"), 
                this;
            }, i.Vector.prototype.div = function(e) {
                return "number" == typeof e && isFinite(e) ? 0 === e ? console.warn("p5.Vector.prototype.div:", "divide by 0") : (this.x /= e, 
                this.y /= e, this.z /= e) : console.warn("p5.Vector.prototype.div:", "n is undefined or not a finite number"), 
                this;
            }, i.Vector.prototype.mag = function() {
                return Math.sqrt(this.magSq());
            }, i.Vector.prototype.magSq = function() {
                var e = this.x, t = this.y, r = this.z;
                return e * e + t * t + r * r;
            }, i.Vector.prototype.dot = function(e, t, r) {
                return e instanceof i.Vector ? this.dot(e.x, e.y, e.z) : this.x * (e || 0) + this.y * (t || 0) + this.z * (r || 0);
            }, i.Vector.prototype.cross = function(e) {
                var t = this.y * e.z - this.z * e.y, r = this.z * e.x - this.x * e.z, n = this.x * e.y - this.y * e.x;
                return this.p5 ? new i.Vector(this.p5, [ t, r, n ]) : new i.Vector(t, r, n);
            }, i.Vector.prototype.dist = function(e) {
                return e.copy().sub(this).mag();
            }, i.Vector.prototype.normalize = function() {
                var e = this.mag();
                return 0 !== e && this.mult(1 / e), this;
            }, i.Vector.prototype.limit = function(e) {
                var t = this.magSq();
                return e * e < t && this.div(Math.sqrt(t)).mult(e), this;
            }, i.Vector.prototype.setMag = function(e) {
                return this.normalize().mult(e);
            }, i.Vector.prototype.heading = function() {
                var e = Math.atan2(this.y, this.x);
                return this.p5 ? this.p5._fromRadians(e) : e;
            }, i.Vector.prototype.rotate = function(e) {
                var t = this.heading() + e;
                this.p5 && (t = this.p5._toRadians(t));
                var r = this.mag();
                return this.x = Math.cos(t) * r, this.y = Math.sin(t) * r, this;
            }, i.Vector.prototype.angleBetween = function(e) {
                var t = this.dot(e) / (this.mag() * e.mag()), r = Math.acos(Math.min(1, Math.max(-1, t)));
                return this.p5 ? this.p5._fromRadians(r) : r;
            }, i.Vector.prototype.lerp = function(e, t, r, n) {
                return e instanceof i.Vector ? this.lerp(e.x, e.y, e.z, t) : (this.x += (e - this.x) * n || 0, 
                this.y += (t - this.y) * n || 0, this.z += (r - this.z) * n || 0, this);
            }, i.Vector.prototype.array = function() {
                return [ this.x || 0, this.y || 0, this.z || 0 ];
            }, i.Vector.prototype.equals = function(e, t, r) {
                var n, o, s;
                return s = e instanceof i.Vector ? (n = e.x || 0, o = e.y || 0, e.z || 0) : e instanceof Array ? (n = e[0] || 0, 
                o = e[1] || 0, e[2] || 0) : (n = e || 0, o = t || 0, r || 0), this.x === n && this.y === o && this.z === s;
            }, i.Vector.fromAngle = function(e, t) {
                return void 0 === t && (t = 1), new i.Vector(t * Math.cos(e), t * Math.sin(e), 0);
            }, i.Vector.fromAngles = function(e, t, r) {
                void 0 === r && (r = 1);
                var n = Math.cos(t), o = Math.sin(t), s = Math.cos(e), a = Math.sin(e);
                return new i.Vector(r * a * o, -r * s, r * a * n);
            }, i.Vector.random2D = function() {
                return this.fromAngle(Math.random() * n.TWO_PI);
            }, i.Vector.random3D = function() {
                var e = Math.random() * n.TWO_PI, t = 2 * Math.random() - 1, r = Math.sqrt(1 - t * t), o = r * Math.cos(e), s = r * Math.sin(e);
                return new i.Vector(o, s, t);
            }, i.Vector.add = function(e, t, r) {
                return r ? r.set(e) : r = e.copy(), r.add(t), r;
            }, i.Vector.sub = function(e, t, r) {
                return r ? r.set(e) : r = e.copy(), r.sub(t), r;
            }, i.Vector.mult = function(e, t, r) {
                return r ? r.set(e) : r = e.copy(), r.mult(t), r;
            }, i.Vector.div = function(e, t, r) {
                return r ? r.set(e) : r = e.copy(), r.div(t), r;
            }, i.Vector.dot = function(e, t) {
                return e.dot(t);
            }, i.Vector.cross = function(e, t) {
                return e.cross(t);
            }, i.Vector.dist = function(e, t) {
                return e.dist(t);
            }, i.Vector.lerp = function(e, t, r, i) {
                return i ? i.set(e) : i = e.copy(), i.lerp(t, r), i;
            }, i.Vector.mag = function(e) {
                var t = e.x, r = e.y, i = e.z, n = t * t + r * r + i * i;
                return Math.sqrt(n);
            }, t.exports = i.Vector;
        }, {
            "../core/constants": 17,
            "../core/main": 23
        } ],
        54: [ function(e, t, r) {
            "use strict";
            var i, n, o, s = e("../core/main"), a = !1, h = !1, l = 0, u = (o = 4294967296, 
            {
                setSeed: function(e) {
                    n = i = (null == e ? Math.random() * o : e) >>> 0;
                },
                getSeed: function() {
                    return i;
                },
                rand: function() {
                    return (n = (1664525 * n + 1013904223) % o) / o;
                }
            });
            s.prototype.randomSeed = function(e) {
                u.setSeed(e), h = !(a = !0);
            }, s.prototype.random = function(e, t) {
                var r;
                if (r = a ? u.rand() : Math.random(), void 0 === e) return r;
                if (void 0 === t) return e instanceof Array ? e[Math.floor(r * e.length)] : r * e;
                if (t < e) {
                    var i = e;
                    e = t, t = i;
                }
                return r * (t - e) + e;
            }, s.prototype.randomGaussian = function(e, t) {
                var r, i, n, o;
                if (h) r = l, h = !1; else {
                    for (;1 <= (o = (i = this.random(2) - 1) * i + (n = this.random(2) - 1) * n); ) ;
                    r = i * (o = Math.sqrt(-2 * Math.log(o) / o)), l = n * o, h = !0;
                }
                return r * (t || 1) + (e || 0);
            }, t.exports = s;
        }, {
            "../core/main": 23
        } ],
        55: [ function(e, t, r) {
            "use strict";
            var i = e("../core/main"), n = e("../core/constants");
            i.prototype._angleMode = n.RADIANS, i.prototype.acos = function(e) {
                return this._fromRadians(Math.acos(e));
            }, i.prototype.asin = function(e) {
                return this._fromRadians(Math.asin(e));
            }, i.prototype.atan = function(e) {
                return this._fromRadians(Math.atan(e));
            }, i.prototype.atan2 = function(e, t) {
                return this._fromRadians(Math.atan2(e, t));
            }, i.prototype.cos = function(e) {
                return Math.cos(this._toRadians(e));
            }, i.prototype.sin = function(e) {
                return Math.sin(this._toRadians(e));
            }, i.prototype.tan = function(e) {
                return Math.tan(this._toRadians(e));
            }, i.prototype.degrees = function(e) {
                return e * n.RAD_TO_DEG;
            }, i.prototype.radians = function(e) {
                return e * n.DEG_TO_RAD;
            }, i.prototype.angleMode = function(e) {
                e !== n.DEGREES && e !== n.RADIANS || (this._angleMode = e);
            }, i.prototype._toRadians = function(e) {
                return this._angleMode === n.DEGREES ? e * n.DEG_TO_RAD : e;
            }, i.prototype._toDegrees = function(e) {
                return this._angleMode === n.RADIANS ? e * n.RAD_TO_DEG : e;
            }, i.prototype._fromRadians = function(e) {
                return this._angleMode === n.DEGREES ? e * n.RAD_TO_DEG : e;
            }, t.exports = i;
        }, {
            "../core/constants": 17,
            "../core/main": 23
        } ],
        56: [ function(e, t, r) {
            "use strict";
            var i = e("../core/main");
            i.prototype.textAlign = function(e, t) {
                return i._validateParameters("textAlign", arguments), this._renderer.textAlign.apply(this._renderer, arguments);
            }, i.prototype.textLeading = function(e) {
                return i._validateParameters("textLeading", arguments), this._renderer.textLeading.apply(this._renderer, arguments);
            }, i.prototype.textSize = function(e) {
                return i._validateParameters("textSize", arguments), this._renderer.textSize.apply(this._renderer, arguments);
            }, i.prototype.textStyle = function(e) {
                return i._validateParameters("textStyle", arguments), this._renderer.textStyle.apply(this._renderer, arguments);
            }, i.prototype.textWidth = function(e) {
                return i._validateParameters("textWidth", arguments), 0 === e.length ? 0 : this._renderer.textWidth.apply(this._renderer, arguments);
            }, i.prototype.textAscent = function() {
                return i._validateParameters("textAscent", arguments), this._renderer.textAscent();
            }, i.prototype.textDescent = function() {
                return i._validateParameters("textDescent", arguments), this._renderer.textDescent();
            }, i.prototype._updateTextMetrics = function() {
                return this._renderer._updateTextMetrics();
            }, t.exports = i;
        }, {
            "../core/main": 23
        } ],
        57: [ function(e, t, r) {
            "use strict";
            var i = e("../core/main"), n = e("../core/constants"), o = e("opentype.js");
            e("../core/error_helpers"), i.prototype.loadFont = function(e, t, r) {
                i._validateParameters("loadFont", arguments);
                var n = new i.Font(this), s = this;
                return o.load(e, function(o, a) {
                    if (o) return i._friendlyFileLoadError(4, e), void 0 !== r ? r(o) : void console.error(o, e);
                    n.font = a, void 0 !== t && t(n), s._decrementPreload();
                    var h, l, u = e.split("\\").pop().split("/").pop(), c = u.lastIndexOf("."), p = c < 1 ? null : u.substr(c + 1);
                    -1 < [ "ttf", "otf", "woff", "woff2" ].indexOf(p) && (h = u.substr(0, c), (l = document.createElement("style")).appendChild(document.createTextNode("\n@font-face {\nfont-family: " + h + ";\nsrc: url(" + e + ");\n}\n")), 
                    document.head.appendChild(l));
                }), n;
            }, i.prototype.text = function(e, t, r, n, o) {
                return i._validateParameters("text", arguments), this._renderer._doFill || this._renderer._doStroke ? this._renderer.text.apply(this._renderer, arguments) : this;
            }, i.prototype.textFont = function(e, t) {
                if (i._validateParameters("textFont", arguments), arguments.length) {
                    if (!e) throw new Error("null font passed to textFont");
                    return this._renderer._setProperty("_textFont", e), t && (this._renderer._setProperty("_textSize", t), 
                    this._renderer._setProperty("_textLeading", t * n._DEFAULT_LEADMULT)), this._renderer._applyTextProperties();
                }
                return this._renderer._textFont;
            }, t.exports = i;
        }, {
            "../core/constants": 17,
            "../core/error_helpers": 19,
            "../core/main": 23,
            "opentype.js": 9
        } ],
        58: [ function(e, t, r) {
            "use strict";
            var i = e("../core/main"), n = e("../core/constants");
            function o(e, t) {
                for (var r = function(e, t) {
                    if ("object" != typeof e) e = t; else for (var r in t) void 0 === e[r] && (e[r] = t[r]);
                    return e;
                }(t, {
                    sampleFactor: .1,
                    simplifyThreshold: 0
                }), i = p(e, 0, 1), n = i / (i * r.sampleFactor), o = [], s = 0; s < i; s += n) o.push(p(e, s));
                return r.simplifyThreshold && function(e, t) {
                    t = void 0 === t ? 0 : t;
                    for (var r = e.length - 1; 3 < e.length && 0 <= r; --r) l(h(e, r - 1), h(e, r), h(e, r + 1), t) && (e.splice(r % e.length, 1), 
                    0);
                }(o, r.simplifyThreshold), o;
            }
            function s(e) {
                for (var t, r = [], i = 0; i < e.length; i++) "M" === e[i].type && (t && r.push(t), 
                t = []), t.push(a(e[i]));
                return r.push(t), r;
            }
            function a(e) {
                var t = [ e.type ];
                return "M" === e.type || "L" === e.type ? t.push(e.x, e.y) : "C" === e.type ? t.push(e.x1, e.y1, e.x2, e.y2, e.x, e.y) : "Q" === e.type && t.push(e.x1, e.y1, e.x, e.y), 
                t;
            }
            function h(e, t) {
                var r = e.length;
                return e[t < 0 ? t % r + r : t % r];
            }
            function l(e, t, r, i) {
                if (!i) return 0 == (n = e, s = r, ((o = t)[0] - n[0]) * (s[1] - n[1]) - (s[0] - n[0]) * (o[1] - n[1]));
                var n, o, s;
                void 0 === l.tmpPoint1 && (l.tmpPoint1 = [], l.tmpPoint2 = []);
                var a = l.tmpPoint1, h = l.tmpPoint2;
                a.x = t.x - e.x, a.y = t.y - e.y, h.x = r.x - t.x, h.y = r.y - t.y;
                var u = a.x * h.x + a.y * h.y, c = Math.sqrt(a.x * a.x + a.y * a.y), p = Math.sqrt(h.x * h.x + h.y * h.y);
                return Math.acos(u / (c * p)) < i;
            }
            function u(e, t, r, i, n, o, s, a, h) {
                var l = 1 - h, u = Math.pow(l, 3), c = Math.pow(l, 2), p = h * h, d = p * h, f = u * e + 3 * c * h * r + 3 * l * h * h * n + d * s, m = u * t + 3 * c * h * i + 3 * l * h * h * o + d * a, g = e + 2 * h * (r - e) + p * (n - 2 * r + e), v = t + 2 * h * (i - t) + p * (o - 2 * i + t), y = r + 2 * h * (n - r) + p * (s - 2 * n + r), b = i + 2 * h * (o - i) + p * (a - 2 * o + i), x = l * e + h * r, _ = l * t + h * i, w = l * n + h * s, S = l * o + h * a, T = 90 - 180 * Math.atan2(g - y, v - b) / Math.PI;
                return (y < g || v < b) && (T += 180), {
                    x: f,
                    y: m,
                    m: {
                        x: g,
                        y: v
                    },
                    n: {
                        x: y,
                        y: b
                    },
                    start: {
                        x: x,
                        y: _
                    },
                    end: {
                        x: w,
                        y: S
                    },
                    alpha: T
                };
            }
            function c(e, t, r, i, n, o, s, a, h) {
                return null == h ? v(e, t, r, i, n, o, s, a) : u(e, t, r, i, n, o, s, a, function(e, t, r, i, n, o, s, a, h) {
                    if (!(h < 0 || v(e, t, r, i, n, o, s, a) < h)) {
                        var l, u = .5, c = 1 - u;
                        for (l = v(e, t, r, i, n, o, s, a, c); .01 < Math.abs(l - h); ) l = v(e, t, r, i, n, o, s, a, c += (l < h ? 1 : -1) * (u /= 2));
                        return c;
                    }
                }(e, t, r, i, n, o, s, a, h));
            }
            function p(e, t, r) {
                for (var i, n, o, s, a, h = 0, l = 0, p = (e = function(e, t) {
                    var r, i = d(e), n = t, o = {
                        x: 0,
                        y: 0,
                        bx: 0,
                        by: 0,
                        X: 0,
                        Y: 0,
                        qx: null,
                        qy: null
                    }, s = {
                        x: 0,
                        y: 0,
                        bx: 0,
                        by: 0,
                        X: 0,
                        Y: 0,
                        qx: null,
                        qy: null
                    }, a = [], h = [], l = function(e, t, r) {
                        var i, n;
                        if (!e) return [ "C", t.x, t.y, t.x, t.y, t.x, t.y ];
                        switch (e[0] in {
                            T: 1,
                            Q: 1
                        } || (t.qx = t.qy = null), e[0]) {
                          case "M":
                            t.X = e[1], t.Y = e[2];
                            break;

                          case "A":
                            e = [ "C" ].concat(function e(t, r, i, n, o, s, a, h, l, u) {
                                var c, p, d, f, m, g = Math.PI, v = 120 * g / 180, y = g / 180 * (+o || 0), b = [], x = function(e, t, r) {
                                    return {
                                        x: e * Math.cos(r) - t * Math.sin(r),
                                        y: e * Math.sin(r) + t * Math.cos(r)
                                    };
                                };
                                if (u) c = u[0], p = u[1], d = u[2], f = u[3]; else {
                                    t = (m = x(t, r, -y)).x, r = m.y;
                                    var _ = (t - (h = (m = x(h, l, -y)).x)) / 2, w = (r - (l = m.y)) / 2, S = _ * _ / (i * i) + w * w / (n * n);
                                    1 < S && (i *= S = Math.sqrt(S), n *= S);
                                    var T = i * i, E = n * n, M = (s === a ? -1 : 1) * Math.sqrt(Math.abs((T * E - T * w * w - E * _ * _) / (T * w * w + E * _ * _)));
                                    d = M * i * w / n + (t + h) / 2, f = M * -n * _ / i + (r + l) / 2, c = Math.asin(((r - f) / n).toFixed(9)), 
                                    p = Math.asin(((l - f) / n).toFixed(9)), (c = t < d ? g - c : c) < 0 && (c = 2 * g + c), 
                                    (p = h < d ? g - p : p) < 0 && (p = 2 * g + p), a && p < c && (c -= 2 * g), !a && c < p && (p -= 2 * g);
                                }
                                var C = p - c;
                                if (Math.abs(C) > v) {
                                    var L = p, R = h, A = l;
                                    p = c + v * (a && c < p ? 1 : -1), b = e(h = d + i * Math.cos(p), l = f + n * Math.sin(p), i, n, o, 0, a, R, A, [ p, L, d, f ]);
                                }
                                C = p - c;
                                var D = Math.cos(c), P = Math.sin(c), k = Math.cos(p), I = Math.sin(p), O = Math.tan(C / 4), U = 4 / 3 * i * O, N = 4 / 3 * n * O, B = [ t, r ], F = [ t + U * P, r - N * D ], G = [ h + U * I, l - N * k ], z = [ h, l ];
                                if (F[0] = 2 * B[0] - F[0], F[1] = 2 * B[1] - F[1], u) return [ F, G, z ].concat(b);
                                for (var j = [], H = 0, V = (b = [ F, G, z ].concat(b).join().split(",")).length; H < V; H++) j[H] = H % 2 ? x(b[H - 1], b[H], y).y : x(b[H], b[H + 1], y).x;
                                return j;
                            }.apply(0, [ t.x, t.y ].concat(e.slice(1))));
                            break;

                          case "S":
                            n = "C" === r || "S" === r ? (i = 2 * t.x - t.bx, 2 * t.y - t.by) : (i = t.x, t.y), 
                            e = [ "C", i, n ].concat(e.slice(1));
                            break;

                          case "T":
                            t.qy = "Q" === r || "T" === r ? (t.qx = 2 * t.x - t.qx, 2 * t.y - t.qy) : (t.qx = t.x, 
                            t.y), e = [ "C" ].concat(g(t.x, t.y, t.qx, t.qy, e[1], e[2]));
                            break;

                          case "Q":
                            t.qx = e[1], t.qy = e[2], e = [ "C" ].concat(g(t.x, t.y, e[1], e[2], e[3], e[4]));
                            break;

                          case "L":
                            e = [ "C" ].concat(m(t.x, t.y, e[1], e[2]));
                            break;

                          case "H":
                            e = [ "C" ].concat(m(t.x, t.y, e[1], t.y));
                            break;

                          case "V":
                            e = [ "C" ].concat(m(t.x, t.y, t.x, e[1]));
                            break;

                          case "Z":
                            e = [ "C" ].concat(m(t.x, t.y, t.X, t.Y));
                        }
                        return e;
                    }, u = function(e, t) {
                        if (7 < e[t].length) {
                            e[t].shift();
                            for (var o = e[t]; o.length; ) a[t] = "A", n && (h[t] = "A"), e.splice(t++, 0, [ "C" ].concat(o.splice(0, 6)));
                            e.splice(t, 1), r = Math.max(i.length, n && n.length || 0);
                        }
                    }, c = function(e, t, o, s, a) {
                        e && t && "M" === e[a][0] && "M" !== t[a][0] && (t.splice(a, 0, [ "M", s.x, s.y ]), 
                        o.bx = 0, o.by = 0, o.x = e[a][1], o.y = e[a][2], r = Math.max(i.length, n && n.length || 0));
                    }, p = "", f = "";
                    r = Math.max(i.length, n && n.length || 0);
                    for (var v = 0; v < r; v++) {
                        i[v] && (p = i[v][0]), "C" !== p && (a[v] = p, v && (f = a[v - 1])), i[v] = l(i[v], o, f), 
                        "A" !== a[v] && "C" === p && (a[v] = "C"), u(i, v), n && (n[v] && (p = n[v][0]), 
                        "C" !== p && (h[v] = p, v && (f = h[v - 1])), n[v] = l(n[v], s, f), "A" !== h[v] && "C" === p && (h[v] = "C"), 
                        u(n, v)), c(i, n, o, s, v), c(n, i, s, o, v);
                        var y = i[v], b = n && n[v], x = y.length, _ = n && b.length;
                        o.x = y[x - 2], o.y = y[x - 1], o.bx = parseFloat(y[x - 4]) || o.x, o.by = parseFloat(y[x - 3]) || o.y, 
                        s.bx = n && (parseFloat(b[_ - 4]) || s.x), s.by = n && (parseFloat(b[_ - 3]) || s.y), 
                        s.x = n && b[_ - 2], s.y = n && b[_ - 1];
                    }
                    return n ? [ i, n ] : i;
                }(e)).length; l < p; l++) {
                    if ("M" === (o = e[l])[0]) i = +o[1], n = +o[2]; else {
                        if (t < h + (s = c(i, n, o[1], o[2], o[3], o[4], o[5], o[6])) && !r) return {
                            x: (a = c(i, n, o[1], o[2], o[3], o[4], o[5], o[6], t - h)).x,
                            y: a.y,
                            alpha: a.alpha
                        };
                        h += s, i = +o[5], n = +o[6];
                    }
                    o.shift();
                }
                return (a = r ? h : u(i, n, o[0], o[1], o[2], o[3], o[4], o[5], 1)).alpha && (a = {
                    x: a.x,
                    y: a.y,
                    alpha: a.alpha
                }), a;
            }
            function d(e) {
                var t = [], r = 0, i = 0, n = 0, o = 0, s = 0;
                if (!e) return t;
                "M" === e[0][0] && (n = r = +e[0][1], o = i = +e[0][2], s++, t[0] = [ "M", r, i ]);
                for (var a, h, l, u = 3 === e.length && "M" === e[0][0] && "R" === e[1][0].toUpperCase() && "Z" === e[2][0].toUpperCase(), c = s, p = e.length; c < p; c++) {
                    if (t.push(h = []), (l = e[c])[0] !== String.prototype.toUpperCase.call(l[0])) switch (h[0] = String.prototype.toUpperCase.call(l[0]), 
                    h[0]) {
                      case "A":
                        h[1] = l[1], h[2] = l[2], h[3] = l[3], h[4] = l[4], h[5] = l[5], h[6] = +(l[6] + r), 
                        h[7] = +(l[7] + i);
                        break;

                      case "V":
                        h[1] = +l[1] + i;
                        break;

                      case "H":
                        h[1] = +l[1] + r;
                        break;

                      case "R":
                        for (var d = 2, m = (a = [ r, i ].concat(l.slice(1))).length; d < m; d++) a[d] = +a[d] + r, 
                        a[++d] = +a[d] + i;
                        t.pop(), t = t.concat(f(a, u));
                        break;

                      case "M":
                        n = +l[1] + r, o = +l[2] + i;
                        break;

                      default:
                        for (d = 1, m = l.length; d < m; d++) h[d] = +l[d] + (d % 2 ? r : i);
                    } else if ("R" === l[0]) a = [ r, i ].concat(l.slice(1)), t.pop(), t = t.concat(f(a, u)), 
                    h = [ "R" ].concat(l.slice(-2)); else for (var g = 0, v = l.length; g < v; g++) h[g] = l[g];
                    switch (h[0]) {
                      case "Z":
                        r = n, i = o;
                        break;

                      case "H":
                        r = h[1];
                        break;

                      case "V":
                        i = h[1];
                        break;

                      case "M":
                        n = h[h.length - 2], o = h[h.length - 1];
                        break;

                      default:
                        r = h[h.length - 2], i = h[h.length - 1];
                    }
                }
                return t;
            }
            function f(e, t) {
                for (var r = [], i = 0, n = e.length; i < n - 2 * !t; i += 2) {
                    var o = [ {
                        x: +e[i - 2],
                        y: +e[i - 1]
                    }, {
                        x: +e[i],
                        y: +e[i + 1]
                    }, {
                        x: +e[i + 2],
                        y: +e[i + 3]
                    }, {
                        x: +e[i + 4],
                        y: +e[i + 5]
                    } ];
                    t ? i ? n - 4 === i ? o[3] = {
                        x: +e[0],
                        y: +e[1]
                    } : n - 2 === i && (o[2] = {
                        x: +e[0],
                        y: +e[1]
                    }, o[3] = {
                        x: +e[2],
                        y: +e[3]
                    }) : o[0] = {
                        x: +e[n - 2],
                        y: +e[n - 1]
                    } : n - 4 === i ? o[3] = o[2] : i || (o[0] = {
                        x: +e[i],
                        y: +e[i + 1]
                    }), r.push([ "C", (-o[0].x + 6 * o[1].x + o[2].x) / 6, (-o[0].y + 6 * o[1].y + o[2].y) / 6, (o[1].x + 6 * o[2].x - o[3].x) / 6, (o[1].y + 6 * o[2].y - o[3].y) / 6, o[2].x, o[2].y ]);
                }
                return r;
            }
            function m(e, t, r, i) {
                return [ e, t, r, i, r, i ];
            }
            function g(e, t, r, i, n, o) {
                return [ 1 / 3 * e + 2 / 3 * r, 1 / 3 * t + 2 / 3 * i, 1 / 3 * n + 2 / 3 * r, 1 / 3 * o + 2 / 3 * i, n, o ];
            }
            function v(e, t, r, i, n, o, s, a, h) {
                null == h && (h = 1);
                for (var l = (h = 1 < h ? 1 : h < 0 ? 0 : h) / 2, u = [ -.1252, .1252, -.3678, .3678, -.5873, .5873, -.7699, .7699, -.9041, .9041, -.9816, .9816 ], c = 0, p = [ .2491, .2491, .2335, .2335, .2032, .2032, .1601, .1601, .1069, .1069, .0472, .0472 ], d = 0; d < 12; d++) {
                    var f = l * u[d] + l, m = y(f, e, r, n, s), g = y(f, t, i, o, a), v = m * m + g * g;
                    c += p[d] * Math.sqrt(v);
                }
                return l * c;
            }
            function y(e, t, r, i, n) {
                return e * (e * (-3 * t + 9 * r - 9 * i + 3 * n) + 6 * t - 12 * r + 6 * i) - 3 * t + 3 * r;
            }
            i.Font = function(e) {
                this.parent = e, this.cache = {}, this.font = void 0;
            }, i.Font.prototype.textBounds = function(e, t, r, i, o) {
                t = void 0 !== t ? t : 0, r = void 0 !== r ? r : 0;
                var s, a = o && o.renderer && o.renderer._pInst || this.parent, h = a._renderer.drawingContext;
                if (h.textAlign || n.LEFT, h.textBaseline || n.BASELINE, i = i || a._renderer._textSize, 
                !s) {
                    var l, u, c, p, d = [], f = [], m = this._scale(i);
                    this.font.forEachGlyph(e, t, r, i, o, function(e, t, r, i) {
                        var n = e.getMetrics();
                        d.push(t + n.xMin * m), d.push(t + n.xMax * m), f.push(r + -n.yMin * m), f.push(r + -n.yMax * m);
                    }), l = Math.min.apply(null, d), u = Math.min.apply(null, f), c = Math.max.apply(null, d), 
                    s = {
                        x: l,
                        y: u,
                        h: Math.max.apply(null, f) - u,
                        w: c - l,
                        advance: l - t
                    }, p = this._handleAlignment(a._renderer, e, s.x, s.y, s.w + s.advance), s.x = p.x, 
                    s.y = p.y;
                }
                return s;
            }, i.Font.prototype.textToPoints = function(e, t, r, i, n) {
                var a, h = 0, l = [], u = this._getGlyphs(e);
                i = i || this.parent._renderer._textSize;
                for (var c = 0; c < u.length; c++) {
                    if (!(u[a = c].name && "space" === u[a].name || e.length === u.length && " " === e[a] || u[a].index && 3 === u[a].index)) for (var p = s(u[c].getPath(t, r, i).commands), d = 0; d < p.length; d++) for (var f = o(p[d], n), m = 0; m < f.length; m++) f[m].x += h, 
                    l.push(f[m]);
                    h += u[c].advanceWidth * this._scale(i);
                }
                return l;
            }, i.Font.prototype._getGlyphs = function(e) {
                return this.font.stringToGlyphs(e);
            }, i.Font.prototype._getPath = function(e, t, r, i) {
                var n = (i && i.renderer && i.renderer._pInst || this.parent)._renderer, o = this._handleAlignment(n, e, t, r);
                return this.font.getPath(e, o.x, o.y, n._textSize, i);
            }, i.Font.prototype._getPathData = function(e, t, r, i) {
                var n = 3;
                return "string" == typeof e && 2 < arguments.length ? e = this._getPath(e, t, r, i) : "object" == typeof t && (i = t), 
                i && "number" == typeof i.decimals && (n = i.decimals), e.toPathData(n);
            }, i.Font.prototype._getSVG = function(e, t, r, i) {
                var n = 3;
                return "string" == typeof e && 2 < arguments.length ? e = this._getPath(e, t, r, i) : "object" == typeof t && (i = t), 
                i && ("number" == typeof i.decimals && (n = i.decimals), "number" == typeof i.strokeWidth && (e.strokeWidth = i.strokeWidth), 
                void 0 !== i.fill && (e.fill = i.fill), void 0 !== i.stroke && (e.stroke = i.stroke)), 
                e.toSVG(n);
            }, i.Font.prototype._renderPath = function(e, t, r, i) {
                var o, s = i && i.renderer || this.parent._renderer, a = s.drawingContext;
                o = "object" == typeof e && e.commands ? e.commands : this._getPath(e, t, r, i).commands, 
                a.beginPath();
                for (var h = 0; h < o.length; h += 1) {
                    var l = o[h];
                    "M" === l.type ? a.moveTo(l.x, l.y) : "L" === l.type ? a.lineTo(l.x, l.y) : "C" === l.type ? a.bezierCurveTo(l.x1, l.y1, l.x2, l.y2, l.x, l.y) : "Q" === l.type ? a.quadraticCurveTo(l.x1, l.y1, l.x, l.y) : "Z" === l.type && a.closePath();
                }
                return s._doStroke && s._strokeSet && a.stroke(), s._doFill && (s._fillSet || s._setFill(n._DEFAULT_TEXT_FILL), 
                a.fill()), this;
            }, i.Font.prototype._textWidth = function(e, t) {
                return this.font.getAdvanceWidth(e, t);
            }, i.Font.prototype._textAscent = function(e) {
                return this.font.ascender * this._scale(e);
            }, i.Font.prototype._textDescent = function(e) {
                return -this.font.descender * this._scale(e);
            }, i.Font.prototype._scale = function(e) {
                return 1 / this.font.unitsPerEm * (e || this.parent._renderer._textSize);
            }, i.Font.prototype._handleAlignment = function(e, t, r, i, o) {
                var s = e._textSize;
                switch (void 0 === o && (o = this._textWidth(t, s)), e._textAlign) {
                  case n.CENTER:
                    r -= o / 2;
                    break;

                  case n.RIGHT:
                    r -= o;
                }
                switch (e._textBaseline) {
                  case n.TOP:
                    i += this._textAscent(s);
                    break;

                  case n.CENTER:
                    i += this._textAscent(s) / 2;
                    break;

                  case n.BOTTOM:
                    i -= this._textDescent(s);
                }
                return {
                    x: r,
                    y: i
                };
            }, t.exports = i;
        }, {
            "../core/constants": 17,
            "../core/main": 23
        } ],
        59: [ function(e, t, r) {
            "use strict";
            var i = e("../core/main");
            i.prototype.append = function(e, t) {
                return e.push(t), e;
            }, i.prototype.arrayCopy = function(e, t, r, i, n) {
                var o, s;
                e = void 0 !== n ? (s = Math.min(n, e.length), o = i, e.slice(t, s + t)) : (s = void 0 !== r ? (s = r, 
                Math.min(s, e.length)) : e.length, o = 0, r = t, e.slice(0, s)), Array.prototype.splice.apply(r, [ o, s ].concat(e));
            }, i.prototype.concat = function(e, t) {
                return e.concat(t);
            }, i.prototype.reverse = function(e) {
                return e.reverse();
            }, i.prototype.shorten = function(e) {
                return e.pop(), e;
            }, i.prototype.shuffle = function(e, t) {
                for (var r, i, n = ArrayBuffer && ArrayBuffer.isView && ArrayBuffer.isView(e), o = (e = t || n ? e : e.slice()).length; 1 < o; ) r = Math.random() * o | 0, 
                i = e[--o], e[o] = e[r], e[r] = i;
                return e;
            }, i.prototype.sort = function(e, t) {
                var r = t ? e.slice(0, Math.min(t, e.length)) : e, i = t ? e.slice(Math.min(t, e.length)) : [];
                return (r = "string" == typeof r[0] ? r.sort() : r.sort(function(e, t) {
                    return e - t;
                })).concat(i);
            }, i.prototype.splice = function(e, t, r) {
                return Array.prototype.splice.apply(e, [ r, 0 ].concat(t)), e;
            }, i.prototype.subset = function(e, t, r) {
                return void 0 !== r ? e.slice(t, t + r) : e.slice(t, e.length);
            }, t.exports = i;
        }, {
            "../core/main": 23
        } ],
        60: [ function(e, t, r) {
            "use strict";
            var i = e("../core/main");
            i.prototype.float = function(e) {
                return e instanceof Array ? e.map(parseFloat) : parseFloat(e);
            }, i.prototype.int = function(e, t) {
                return t = t || 10, e === 1 / 0 || "Infinity" === e ? 1 / 0 : e === -1 / 0 || "-Infinity" === e ? -1 / 0 : "string" == typeof e ? parseInt(e, t) : "number" == typeof e ? 0 | e : "boolean" == typeof e ? e ? 1 : 0 : e instanceof Array ? e.map(function(e) {
                    return i.prototype.int(e, t);
                }) : void 0;
            }, i.prototype.str = function(e) {
                return e instanceof Array ? e.map(i.prototype.str) : String(e);
            }, i.prototype.boolean = function(e) {
                return "number" == typeof e ? 0 !== e : "string" == typeof e ? "true" === e.toLowerCase() : "boolean" == typeof e ? e : e instanceof Array ? e.map(i.prototype.boolean) : void 0;
            }, i.prototype.byte = function(e) {
                var t = i.prototype.int(e, 10);
                return "number" == typeof t ? (t + 128) % 256 - 128 : t instanceof Array ? t.map(i.prototype.byte) : void 0;
            }, i.prototype.char = function(e) {
                return "number" != typeof e || isNaN(e) ? e instanceof Array ? e.map(i.prototype.char) : "string" == typeof e ? i.prototype.char(parseInt(e, 10)) : void 0 : String.fromCharCode(e);
            }, i.prototype.unchar = function(e) {
                return "string" == typeof e && 1 === e.length ? e.charCodeAt(0) : e instanceof Array ? e.map(i.prototype.unchar) : void 0;
            }, i.prototype.hex = function(e, t) {
                if (t = null == t ? t = 8 : t, e instanceof Array) return e.map(function(e) {
                    return i.prototype.hex(e, t);
                });
                if (e === 1 / 0 || e === -1 / 0) return (e === 1 / 0 ? "F" : "0").repeat(t);
                if ("number" == typeof e) {
                    e < 0 && (e = 4294967295 + e + 1);
                    for (var r = Number(e).toString(16).toUpperCase(); r.length < t; ) r = "0" + r;
                    return r.length >= t && (r = r.substring(r.length - t, r.length)), r;
                }
            }, i.prototype.unhex = function(e) {
                return e instanceof Array ? e.map(i.prototype.unhex) : parseInt("0x" + e, 16);
            }, t.exports = i;
        }, {
            "../core/main": 23
        } ],
        61: [ function(e, t, r) {
            "use strict";
            var i = e("../core/main");
            function n(e, t, r) {
                var i = e < 0, n = i ? e.toString().substring(1) : e.toString(), o = n.indexOf("."), s = -1 !== o ? n.substring(0, o) : n, a = -1 !== o ? n.substring(o + 1) : "", h = i ? "-" : "";
                if (void 0 !== r) {
                    var l = "";
                    (-1 !== o || 0 < r - a.length) && (l = "."), a.length > r && (a = a.substring(0, r));
                    for (var u = 0; u < t - s.length; u++) h += "0";
                    h += s, h += l, h += a;
                    for (var c = 0; c < r - a.length; c++) h += "0";
                    return h;
                }
                for (var p = 0; p < Math.max(t - s.length, 0); p++) h += "0";
                return h + n;
            }
            function o(e, t) {
                var r = (e = e.toString()).indexOf("."), i = -1 !== r ? e.substring(r) : "", n = -1 !== r ? e.substring(0, r) : e;
                if (n = n.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ","), 0 === t) i = ""; else if (void 0 !== t) if (t > i.length) for (var o = t - (i += -1 === r ? "." : "").length + 1, s = 0; s < o; s++) i += "0"; else i = i.substring(0, t + 1);
                return n + i;
            }
            function s(e) {
                return 0 < parseFloat(e) ? "+" + e.toString() : e.toString();
            }
            function a(e) {
                return 0 < parseFloat(e) ? " " + e.toString() : e.toString();
            }
            e("../core/error_helpers"), i.prototype.join = function(e, t) {
                return i._validateParameters("join", arguments), e.join(t);
            }, i.prototype.match = function(e, t) {
                return i._validateParameters("match", arguments), e.match(t);
            }, i.prototype.matchAll = function(e, t) {
                i._validateParameters("matchAll", arguments);
                for (var r = new RegExp(t, "g"), n = r.exec(e), o = []; null !== n; ) o.push(n), 
                n = r.exec(e);
                return o;
            }, i.prototype.nf = function(e, t, r) {
                return i._validateParameters("nf", arguments), e instanceof Array ? e.map(function(e) {
                    return n(e, t, r);
                }) : "[object Arguments]" === Object.prototype.toString.call(e) ? 3 === e.length ? this.nf(e[0], e[1], e[2]) : 2 === e.length ? this.nf(e[0], e[1]) : this.nf(e[0]) : n(e, t, r);
            }, i.prototype.nfc = function(e, t) {
                return i._validateParameters("nfc", arguments), e instanceof Array ? e.map(function(e) {
                    return o(e, t);
                }) : o(e, t);
            }, i.prototype.nfp = function() {
                i._validateParameters("nfp", arguments);
                var e = i.prototype.nf.apply(this, arguments);
                return e instanceof Array ? e.map(s) : s(e);
            }, i.prototype.nfs = function() {
                i._validateParameters("nfs", arguments);
                var e = i.prototype.nf.apply(this, arguments);
                return e instanceof Array ? e.map(a) : a(e);
            }, i.prototype.split = function(e, t) {
                return i._validateParameters("split", arguments), e.split(t);
            }, i.prototype.splitTokens = function(e, t) {
                var r;
                if (i._validateParameters("splitTokens", arguments), void 0 !== t) {
                    var n = t, o = /\]/g.exec(n), s = /\[/g.exec(n);
                    r = s && o ? (n = n.slice(0, o.index) + n.slice(o.index + 1), s = /\[/g.exec(n), 
                    n = n.slice(0, s.index) + n.slice(s.index + 1), new RegExp("[\\[" + n + "\\]]", "g")) : o ? (n = n.slice(0, o.index) + n.slice(o.index + 1), 
                    new RegExp("[" + n + "\\]]", "g")) : s ? (n = n.slice(0, s.index) + n.slice(s.index + 1), 
                    new RegExp("[" + n + "\\[]", "g")) : new RegExp("[" + n + "]", "g");
                } else r = /\s/g;
                return e.split(r).filter(function(e) {
                    return e;
                });
            }, i.prototype.trim = function(e) {
                return i._validateParameters("trim", arguments), e instanceof Array ? e.map(this.trim) : e.trim();
            }, t.exports = i;
        }, {
            "../core/error_helpers": 19,
            "../core/main": 23
        } ],
        62: [ function(e, t, r) {
            "use strict";
            var i = e("../core/main");
            i.prototype.day = function() {
                return new Date().getDate();
            }, i.prototype.hour = function() {
                return new Date().getHours();
            }, i.prototype.minute = function() {
                return new Date().getMinutes();
            }, i.prototype.millis = function() {
                return window.performance.now();
            }, i.prototype.month = function() {
                return new Date().getMonth() + 1;
            }, i.prototype.second = function() {
                return new Date().getSeconds();
            }, i.prototype.year = function() {
                return new Date().getFullYear();
            }, t.exports = i;
        }, {
            "../core/main": 23
        } ],
        63: [ function(e, t, r) {
            "use strict";
            var i = e("../core/main");
            e("./p5.Geometry");
            var n = e("../core/constants");
            i.prototype.plane = function(e, t, r, n) {
                this._assert3d("plane"), i._validateParameters("plane", arguments), void 0 === e && (e = 50), 
                void 0 === t && (t = e), void 0 === r && (r = 1), void 0 === n && (n = 1);
                var o = "plane|" + r + "|" + n;
                if (!this._renderer.geometryInHash(o)) {
                    var s = new i.Geometry(r, n, function() {
                        for (var e, t, r, n = 0; n <= this.detailY; n++) {
                            t = n / this.detailY;
                            for (var o = 0; o <= this.detailX; o++) e = o / this.detailX, r = new i.Vector(e - .5, t - .5, 0), 
                            this.vertices.push(r), this.uvs.push(e, t);
                        }
                    });
                    s.computeFaces().computeNormals(), r <= 1 && n <= 1 ? s._makeTriangleEdges()._edgesToVertices() : console.log("Cannot draw stroke on plane objects with more than 1 detailX or 1 detailY"), 
                    this._renderer.createBuffers(o, s);
                }
                return this._renderer.drawBuffersScaled(o, e, t, 1), this;
            }, i.prototype.box = function(e, t, r, n, o) {
                this._assert3d("box"), i._validateParameters("box", arguments), void 0 === e && (e = 50), 
                void 0 === t && (t = e), void 0 === r && (r = t);
                var s = this._renderer.attributes && this._renderer.attributes.perPixelLighting;
                void 0 === n && (n = s ? 1 : 4), void 0 === o && (o = s ? 1 : 4);
                var a = "box|" + n + "|" + o;
                if (!this._renderer.geometryInHash(a)) {
                    var h = new i.Geometry(n, o, function() {
                        var e = [ [ 0, 4, 2, 6 ], [ 1, 3, 5, 7 ], [ 0, 1, 4, 5 ], [ 2, 6, 3, 7 ], [ 0, 2, 1, 3 ], [ 4, 5, 6, 7 ] ];
                        this.strokeIndices = [ [ 0, 1 ], [ 1, 3 ], [ 3, 2 ], [ 6, 7 ], [ 8, 9 ], [ 9, 11 ], [ 14, 15 ], [ 16, 17 ], [ 17, 19 ], [ 18, 19 ], [ 20, 21 ], [ 22, 23 ] ];
                        for (var t = 0; t < e.length; t++) {
                            for (var r = e[t], n = 4 * t, o = 0; o < 4; o++) {
                                var s = r[o], a = new i.Vector((2 * (1 & s) - 1) / 2, ((2 & s) - 1) / 2, ((4 & s) / 2 - 1) / 2);
                                this.vertices.push(a), this.uvs.push(1 & o, (2 & o) / 2);
                            }
                            this.faces.push([ n, n + 1, n + 2 ]), this.faces.push([ n + 2, n + 1, n + 3 ]);
                        }
                    });
                    h.computeNormals(), n <= 4 && o <= 4 ? h._makeTriangleEdges()._edgesToVertices() : console.log("Cannot draw stroke on box objects with more than 4 detailX or 4 detailY"), 
                    this._renderer.createBuffers(a, h);
                }
                return this._renderer.drawBuffersScaled(a, e, t, r), this;
            }, i.prototype.sphere = function(e, t, r) {
                return this._assert3d("sphere"), i._validateParameters("sphere", arguments), void 0 === e && (e = 50), 
                void 0 === t && (t = 24), void 0 === r && (r = 16), this.ellipsoid(e, e, e, t, r), 
                this;
            };
            var o = function(e, t, r, n, o, s, a) {
                e = e <= 0 ? 1 : e, t = t < 0 ? 0 : t, r = r <= 0 ? e : r, n = n < 3 ? 3 : n;
                var h, l, u, c = (s = void 0 === s || s) ? -2 : 0, p = (o = o < 1 ? 1 : o) + ((a = void 0 === a ? 0 !== t : a) ? 2 : 0), d = Math.atan2(e - t, r), f = Math.sin(d), m = Math.cos(d);
                for (h = c; h <= p; ++h) {
                    var g, v = h / o, y = r * v;
                    for (g = h < 0 ? (v = y = 0, e) : o < h ? (y = r, v = 1, t) : e + (t - e) * v, -2 !== h && h !== o + 2 || (g = 0), 
                    y -= r / 2, l = 0; l < n; ++l) {
                        var b, x = l / n, _ = 2 * Math.PI * x, w = Math.sin(_), S = Math.cos(_);
                        this.vertices.push(new i.Vector(w * g, y, S * g)), b = h < 0 ? new i.Vector(0, -1, 0) : o < h && t ? new i.Vector(0, 1, 0) : new i.Vector(w * m, f, S * m), 
                        this.vertexNormals.push(b), this.uvs.push(x, v);
                    }
                }
                var T = 0;
                if (s) {
                    for (u = 0; u < n; ++u) {
                        var E = (u + 1) % n;
                        this.faces.push([ T + u, T + n + E, T + n + u ]);
                    }
                    T += 2 * n;
                }
                for (h = 0; h < o; ++h) {
                    for (l = 0; l < n; ++l) {
                        var M = (l + 1) % n;
                        this.faces.push([ T + l, T + M, T + n + M ]), this.faces.push([ T + l, T + n + M, T + n + l ]);
                    }
                    T += n;
                }
                if (a) for (T += n, l = 0; l < n; ++l) this.faces.push([ T + l, T + (l + 1) % n, T + n ]);
            };
            i.prototype.cylinder = function(e, t, r, n, s, a) {
                this._assert3d("cylinder"), i._validateParameters("cylinder", arguments), void 0 === e && (e = 50), 
                void 0 === t && (t = e), void 0 === r && (r = 24), void 0 === n && (n = 1), void 0 === a && (a = !0), 
                void 0 === s && (s = !0);
                var h = "cylinder|" + r + "|" + n + "|" + s + "|" + a;
                if (!this._renderer.geometryInHash(h)) {
                    var l = new i.Geometry(r, n);
                    o.call(l, 1, 1, 1, r, n, s, a), r <= 24 && n <= 16 ? l._makeTriangleEdges()._edgesToVertices() : console.log("Cannot draw stroke on cylinder objects with more than 24 detailX or 16 detailY"), 
                    this._renderer.createBuffers(h, l);
                }
                return this._renderer.drawBuffersScaled(h, e, t, e), this;
            }, i.prototype.cone = function(e, t, r, n, s) {
                this._assert3d("cone"), i._validateParameters("cone", arguments), void 0 === e && (e = 50), 
                void 0 === t && (t = e), void 0 === r && (r = 24), void 0 === n && (n = 1), void 0 === s && (s = !0);
                var a = "cone|" + r + "|" + n + "|" + s;
                if (!this._renderer.geometryInHash(a)) {
                    var h = new i.Geometry(r, n);
                    o.call(h, 1, 0, 1, r, n, s, !1), r <= 24 && n <= 16 ? h._makeTriangleEdges()._edgesToVertices() : console.log("Cannot draw stroke on cone objects with more than 24 detailX or 16 detailY"), 
                    this._renderer.createBuffers(a, h);
                }
                return this._renderer.drawBuffersScaled(a, e, t, e), this;
            }, i.prototype.ellipsoid = function(e, t, r, n, o) {
                this._assert3d("ellipsoid"), i._validateParameters("ellipsoid", arguments), void 0 === e && (e = 50), 
                void 0 === t && (t = e), void 0 === r && (r = e), void 0 === n && (n = 24), void 0 === o && (o = 16);
                var s = "ellipsoid|" + n + "|" + o;
                if (!this._renderer.geometryInHash(s)) {
                    var a = new i.Geometry(n, o, function() {
                        for (var e = 0; e <= this.detailY; e++) for (var t = e / this.detailY, r = Math.PI * t - Math.PI / 2, n = Math.cos(r), o = Math.sin(r), s = 0; s <= this.detailX; s++) {
                            var a = s / this.detailX, h = 2 * Math.PI * a, l = Math.cos(h), u = Math.sin(h), c = new i.Vector(n * u, o, n * l);
                            this.vertices.push(c), this.vertexNormals.push(c), this.uvs.push(a, t);
                        }
                    });
                    a.computeFaces(), n <= 24 && o <= 24 ? a._makeTriangleEdges()._edgesToVertices() : console.log("Cannot draw stroke on ellipsoids with more than 24 detailX or 24 detailY"), 
                    this._renderer.createBuffers(s, a);
                }
                return this._renderer.drawBuffersScaled(s, e, t, r), this;
            }, i.prototype.torus = function(e, t, r, n) {
                if (this._assert3d("torus"), i._validateParameters("torus", arguments), void 0 === e) e = 50; else if (!e) return;
                if (void 0 === t) t = 10; else if (!t) return;
                void 0 === r && (r = 24), void 0 === n && (n = 16);
                var o = (t / e).toPrecision(4), s = "torus|" + o + "|" + r + "|" + n;
                if (!this._renderer.geometryInHash(s)) {
                    var a = new i.Geometry(r, n, function() {
                        for (var e = 0; e <= this.detailY; e++) for (var t = e / this.detailY, r = 2 * Math.PI * t, n = Math.cos(r), s = Math.sin(r), a = 1 + o * n, h = 0; h <= this.detailX; h++) {
                            var l = h / this.detailX, u = 2 * Math.PI * l, c = Math.cos(u), p = Math.sin(u), d = new i.Vector(a * c, a * p, o * s), f = new i.Vector(n * c, n * p, s);
                            this.vertices.push(d), this.vertexNormals.push(f), this.uvs.push(l, t);
                        }
                    });
                    a.computeFaces(), r <= 24 && n <= 16 ? a._makeTriangleEdges()._edgesToVertices() : console.log("Cannot draw strokes on torus object with more than 24 detailX or 16 detailY"), 
                    this._renderer.createBuffers(s, a);
                }
                return this._renderer.drawBuffersScaled(s, e, e, e), this;
            }, i.RendererGL.prototype.point = function(e, t, r) {
                void 0 === r && (r = 0);
                var n = [];
                return n.push(new i.Vector(e, t, r)), this._drawPoints(n, this._pointVertexBuffer), 
                this;
            }, i.RendererGL.prototype.triangle = function(e) {
                var t = e[0], r = e[1], n = e[2], o = e[3], s = e[4], a = e[5];
                if (!this.geometryInHash("tri")) {
                    var h = new i.Geometry(1, 1, function() {
                        var e = [];
                        e.push(new i.Vector(0, 0, 0)), e.push(new i.Vector(0, 1, 0)), e.push(new i.Vector(1, 0, 0)), 
                        this.strokeIndices = [ [ 0, 1 ], [ 1, 2 ], [ 2, 0 ] ], this.vertices = e, this.faces = [ [ 0, 1, 2 ] ], 
                        this.uvs = [ 0, 0, 0, 1, 1, 1 ];
                    });
                    h._makeTriangleEdges()._edgesToVertices(), h.computeNormals(), this.createBuffers("tri", h);
                }
                var l = this.uMVMatrix.copy();
                try {
                    var u = new i.Matrix([ n - t, o - r, 0, 0, s - t, a - r, 0, 0, 0, 0, 1, 0, t, r, 0, 1 ]).mult(this.uMVMatrix);
                    this.uMVMatrix = u, this.drawBuffers("tri");
                } finally {
                    this.uMVMatrix = l;
                }
                return this;
            }, i.RendererGL.prototype.ellipse = function(e) {
                this.arc(e[0], e[1], e[2], e[3], 0, n.TWO_PI, n.OPEN, e[4]);
            }, i.RendererGL.prototype.arc = function(e) {
                var t, r, o = e, s = arguments[1], a = arguments[2], h = arguments[3], l = arguments[4], u = arguments[5], c = arguments[6], p = arguments[7] || 25;
                if (r = Math.abs(u - l) >= n.TWO_PI ? (t = "ellipse") + "|" + p + "|" : (t = "arc") + "|" + l + "|" + u + "|" + c + "|" + p + "|", 
                !this.geometryInHash(r)) {
                    var d = new i.Geometry(p, 1, function() {
                        if (this.strokeIndices = [], l.toFixed(10) !== u.toFixed(10)) {
                            c !== n.PIE && void 0 !== c || (this.vertices.push(new i.Vector(.5, .5, 0)), this.uvs.push([ .5, .5 ]));
                            for (var e = 0; e <= p; e++) {
                                var t = e / p * (u - l) + l, r = .5 + Math.cos(t) / 2, o = .5 + Math.sin(t) / 2;
                                this.vertices.push(new i.Vector(r, o, 0)), this.uvs.push([ r, o ]), e < p - 1 && (this.faces.push([ 0, e + 1, e + 2 ]), 
                                this.strokeIndices.push([ e + 1, e + 2 ]));
                            }
                            switch (c) {
                              case n.PIE:
                                this.faces.push([ 0, this.vertices.length - 2, this.vertices.length - 1 ]), this.strokeIndices.push([ 0, 1 ]), 
                                this.strokeIndices.push([ this.vertices.length - 2, this.vertices.length - 1 ]), 
                                this.strokeIndices.push([ 0, this.vertices.length - 1 ]);
                                break;

                              case n.CHORD:
                                this.strokeIndices.push([ 0, 1 ]), this.strokeIndices.push([ 0, this.vertices.length - 1 ]);
                                break;

                              case n.OPEN:
                                this.strokeIndices.push([ 0, 1 ]);
                                break;

                              default:
                                this.faces.push([ 0, this.vertices.length - 2, this.vertices.length - 1 ]), this.strokeIndices.push([ this.vertices.length - 2, this.vertices.length - 1 ]);
                            }
                        }
                    });
                    d.computeNormals(), p <= 50 ? d._makeTriangleEdges()._edgesToVertices(d) : console.log("Cannot stroke " + t + " with more than 50 detail"), 
                    this.createBuffers(r, d);
                }
                var f = this.uMVMatrix.copy();
                try {
                    this.uMVMatrix.translate([ o, s, 0 ]), this.uMVMatrix.scale(a, h, 1), this.drawBuffers(r);
                } finally {
                    this.uMVMatrix = f;
                }
                return this;
            }, i.RendererGL.prototype.rect = function(e) {
                var t = this._pInst._glAttributes.perPixelLighting, r = e[0], n = e[1], o = e[2], s = e[3], a = e[4] || (t ? 1 : 24), h = e[5] || (t ? 1 : 16), l = "rect|" + a + "|" + h;
                if (!this.geometryInHash(l)) {
                    var u = new i.Geometry(a, h, function() {
                        for (var e = 0; e <= this.detailY; e++) for (var t = e / this.detailY, r = 0; r <= this.detailX; r++) {
                            var n = r / this.detailX, o = new i.Vector(n, t, 0);
                            this.vertices.push(o), this.uvs.push(n, t);
                        }
                        0 < a && 0 < h && (this.strokeIndices = [ [ 0, a ], [ a, (a + 1) * (h + 1) - 1 ], [ (a + 1) * (h + 1) - 1, (a + 1) * h ], [ (a + 1) * h, 0 ] ]);
                    });
                    u.computeFaces().computeNormals()._makeTriangleEdges()._edgesToVertices(), this.createBuffers(l, u);
                }
                var c = this.uMVMatrix.copy();
                try {
                    this.uMVMatrix.translate([ r, n, 0 ]), this.uMVMatrix.scale(o, s, 1), this.drawBuffers(l);
                } finally {
                    this.uMVMatrix = c;
                }
                return this;
            }, i.RendererGL.prototype.quad = function(e, t, r, n, o, s, a, h, l, u, c, p) {
                var d = "quad|" + e + "|" + t + "|" + r + "|" + n + "|" + o + "|" + s + "|" + a + "|" + h + "|" + l + "|" + u + "|" + c + "|" + p;
                if (!this.geometryInHash(d)) {
                    var f = new i.Geometry(2, 2, function() {
                        this.vertices.push(new i.Vector(e, t, r)), this.vertices.push(new i.Vector(n, o, s)), 
                        this.vertices.push(new i.Vector(a, h, l)), this.vertices.push(new i.Vector(u, c, p)), 
                        this.uvs.push(0, 0, 1, 0, 1, 1, 0, 1), this.strokeIndices = [ [ 0, 1 ], [ 1, 2 ], [ 2, 3 ], [ 3, 0 ] ];
                    });
                    f.computeNormals()._makeTriangleEdges()._edgesToVertices(), f.faces = [ [ 0, 1, 2 ], [ 2, 3, 0 ] ], 
                    this.createBuffers(d, f);
                }
                return this.drawBuffers(d), this;
            }, i.RendererGL.prototype.bezier = function(e, t, r, i, n, o, s, a, h, l, u, c) {
                8 === arguments.length && (u = a, l = s, a = o, s = n, n = i, i = r, r = o = h = c = 0);
                var p = this._pInst._bezierDetail || 20;
                this.beginShape();
                for (var d = 0; d <= p; d++) {
                    var f = Math.pow(1 - d / p, 3), m = d / p * 3 * Math.pow(1 - d / p, 2), g = 3 * Math.pow(d / p, 2) * (1 - d / p), v = Math.pow(d / p, 3);
                    this.vertex(e * f + i * m + s * g + l * v, t * f + n * m + a * g + u * v, r * f + o * m + h * g + c * v);
                }
                return this.endShape(), this;
            }, i.RendererGL.prototype.curve = function(e, t, r, i, n, o, s, a, h, l, u, c) {
                8 === arguments.length && (l = s, u = a, s = n, a = i, n = i = r, r = o = h = c = 0);
                var p = this._pInst._curveDetail;
                this.beginShape();
                for (var d = 0; d <= p; d++) {
                    var f = .5 * Math.pow(d / p, 3), m = .5 * Math.pow(d / p, 2), g = d / p * .5, v = f * (3 * i - e - 3 * s + l) + m * (2 * e - 5 * i + 4 * s - l) + g * (-e + s) + 2 * i * .5, y = f * (3 * n - t - 3 * a + u) + m * (2 * t - 5 * n + 4 * a - u) + g * (-t + a) + 2 * n * .5, b = f * (3 * o - r - 3 * h + c) + m * (2 * r - 5 * o + 4 * h - c) + g * (-r + h) + 2 * o * .5;
                    this.vertex(v, y, b);
                }
                return this.endShape(), this;
            }, i.RendererGL.prototype.line = function() {
                return 6 === arguments.length ? (this.beginShape(), this.vertex(arguments[0], arguments[1], arguments[2]), 
                this.vertex(arguments[3], arguments[4], arguments[5]), this.endShape()) : 4 === arguments.length && (this.beginShape(), 
                this.vertex(arguments[0], arguments[1], 0), this.vertex(arguments[2], arguments[3], 0), 
                this.endShape()), this;
            }, i.RendererGL.prototype.bezierVertex = function() {
                if (0 === this.immediateMode._bezierVertex.length) throw Error("vertex() must be used once before calling bezierVertex()");
                var e, t, r, i, n, o = [], s = [], a = [], h = arguments.length;
                if ((e = 0) === this._lookUpTableBezier.length || this._lutBezierDetail !== this._pInst._curveDetail) {
                    this._lookUpTableBezier = [], this._lutBezierDetail = this._pInst._curveDetail;
                    for (var l = 1 / this._lutBezierDetail, u = 0, c = 1, p = 0; u < 1; ) {
                        if (e = parseFloat(u.toFixed(6)), this._lookUpTableBezier[p] = this._bezierCoefficients(e), 
                        c.toFixed(6) === l.toFixed(6)) {
                            e = parseFloat(c.toFixed(6)) + parseFloat(u.toFixed(6)), ++p, this._lookUpTableBezier[p] = this._bezierCoefficients(e);
                            break;
                        }
                        u += l, c -= l, ++p;
                    }
                }
                var d = this._lookUpTableBezier.length;
                if (6 === h) {
                    for (this.isBezier = !0, o = [ this.immediateMode._bezierVertex[0], arguments[0], arguments[2], arguments[4] ], 
                    s = [ this.immediateMode._bezierVertex[1], arguments[1], arguments[3], arguments[5] ], 
                    n = 0; n < d; n++) t = o[0] * this._lookUpTableBezier[n][0] + o[1] * this._lookUpTableBezier[n][1] + o[2] * this._lookUpTableBezier[n][2] + o[3] * this._lookUpTableBezier[n][3], 
                    r = s[0] * this._lookUpTableBezier[n][0] + s[1] * this._lookUpTableBezier[n][1] + s[2] * this._lookUpTableBezier[n][2] + s[3] * this._lookUpTableBezier[n][3], 
                    this.vertex(t, r);
                    this.immediateMode._bezierVertex[0] = arguments[4], this.immediateMode._bezierVertex[1] = arguments[5];
                } else if (9 === h) {
                    for (this.isBezier = !0, o = [ this.immediateMode._bezierVertex[0], arguments[0], arguments[3], arguments[6] ], 
                    s = [ this.immediateMode._bezierVertex[1], arguments[1], arguments[4], arguments[7] ], 
                    a = [ this.immediateMode._bezierVertex[2], arguments[2], arguments[5], arguments[8] ], 
                    n = 0; n < d; n++) t = o[0] * this._lookUpTableBezier[n][0] + o[1] * this._lookUpTableBezier[n][1] + o[2] * this._lookUpTableBezier[n][2] + o[3] * this._lookUpTableBezier[n][3], 
                    r = s[0] * this._lookUpTableBezier[n][0] + s[1] * this._lookUpTableBezier[n][1] + s[2] * this._lookUpTableBezier[n][2] + s[3] * this._lookUpTableBezier[n][3], 
                    i = a[0] * this._lookUpTableBezier[n][0] + a[1] * this._lookUpTableBezier[n][1] + a[2] * this._lookUpTableBezier[n][2] + a[3] * this._lookUpTableBezier[n][3], 
                    this.vertex(t, r, i);
                    this.immediateMode._bezierVertex[0] = arguments[6], this.immediateMode._bezierVertex[1] = arguments[7], 
                    this.immediateMode._bezierVertex[2] = arguments[8];
                }
            }, i.RendererGL.prototype.quadraticVertex = function() {
                if (0 === this.immediateMode._quadraticVertex.length) throw Error("vertex() must be used once before calling quadraticVertex()");
                var e, t, r, i, n, o = [], s = [], a = [], h = arguments.length;
                if ((e = 0) === this._lookUpTableQuadratic.length || this._lutQuadraticDetail !== this._pInst._curveDetail) {
                    this._lookUpTableQuadratic = [], this._lutQuadraticDetail = this._pInst._curveDetail;
                    for (var l = 1 / this._lutQuadraticDetail, u = 0, c = 1, p = 0; u < 1; ) {
                        if (e = parseFloat(u.toFixed(6)), this._lookUpTableQuadratic[p] = this._quadraticCoefficients(e), 
                        c.toFixed(6) === l.toFixed(6)) {
                            e = parseFloat(c.toFixed(6)) + parseFloat(u.toFixed(6)), ++p, this._lookUpTableQuadratic[p] = this._quadraticCoefficients(e);
                            break;
                        }
                        u += l, c -= l, ++p;
                    }
                }
                var d = this._lookUpTableQuadratic.length;
                if (4 === h) {
                    for (this.isQuadratic = !0, o = [ this.immediateMode._quadraticVertex[0], arguments[0], arguments[2] ], 
                    s = [ this.immediateMode._quadraticVertex[1], arguments[1], arguments[3] ], n = 0; n < d; n++) t = o[0] * this._lookUpTableQuadratic[n][0] + o[1] * this._lookUpTableQuadratic[n][1] + o[2] * this._lookUpTableQuadratic[n][2], 
                    r = s[0] * this._lookUpTableQuadratic[n][0] + s[1] * this._lookUpTableQuadratic[n][1] + s[2] * this._lookUpTableQuadratic[n][2], 
                    this.vertex(t, r);
                    this.immediateMode._quadraticVertex[0] = arguments[2], this.immediateMode._quadraticVertex[1] = arguments[3];
                } else if (6 === h) {
                    for (this.isQuadratic = !0, o = [ this.immediateMode._quadraticVertex[0], arguments[0], arguments[3] ], 
                    s = [ this.immediateMode._quadraticVertex[1], arguments[1], arguments[4] ], a = [ this.immediateMode._quadraticVertex[2], arguments[2], arguments[5] ], 
                    n = 0; n < d; n++) t = o[0] * this._lookUpTableQuadratic[n][0] + o[1] * this._lookUpTableQuadratic[n][1] + o[2] * this._lookUpTableQuadratic[n][2], 
                    r = s[0] * this._lookUpTableQuadratic[n][0] + s[1] * this._lookUpTableQuadratic[n][1] + s[2] * this._lookUpTableQuadratic[n][2], 
                    i = a[0] * this._lookUpTableQuadratic[n][0] + a[1] * this._lookUpTableQuadratic[n][1] + a[2] * this._lookUpTableQuadratic[n][2], 
                    this.vertex(t, r, i);
                    this.immediateMode._quadraticVertex[0] = arguments[3], this.immediateMode._quadraticVertex[1] = arguments[4], 
                    this.immediateMode._quadraticVertex[2] = arguments[5];
                }
            }, i.RendererGL.prototype.curveVertex = function() {
                var e, t, r, i, n, o = [], s = [], a = [];
                e = 0;
                var h = arguments.length;
                if (0 === this._lookUpTableBezier.length || this._lutBezierDetail !== this._pInst._curveDetail) {
                    this._lookUpTableBezier = [], this._lutBezierDetail = this._pInst._curveDetail;
                    for (var l = 1 / this._lutBezierDetail, u = 0, c = 1, p = 0; u < 1; ) {
                        if (e = parseFloat(u.toFixed(6)), this._lookUpTableBezier[p] = this._bezierCoefficients(e), 
                        c.toFixed(6) === l.toFixed(6)) {
                            e = parseFloat(c.toFixed(6)) + parseFloat(u.toFixed(6)), ++p, this._lookUpTableBezier[p] = this._bezierCoefficients(e);
                            break;
                        }
                        u += l, c -= l, ++p;
                    }
                }
                var d = this._lookUpTableBezier.length;
                if (2 === h) {
                    if (this.immediateMode._curveVertex.push(arguments[0]), this.immediateMode._curveVertex.push(arguments[1]), 
                    8 === this.immediateMode._curveVertex.length) {
                        for (this.isCurve = !0, o = this._bezierToCatmull([ this.immediateMode._curveVertex[0], this.immediateMode._curveVertex[2], this.immediateMode._curveVertex[4], this.immediateMode._curveVertex[6] ]), 
                        s = this._bezierToCatmull([ this.immediateMode._curveVertex[1], this.immediateMode._curveVertex[3], this.immediateMode._curveVertex[5], this.immediateMode._curveVertex[7] ]), 
                        n = 0; n < d; n++) t = o[0] * this._lookUpTableBezier[n][0] + o[1] * this._lookUpTableBezier[n][1] + o[2] * this._lookUpTableBezier[n][2] + o[3] * this._lookUpTableBezier[n][3], 
                        r = s[0] * this._lookUpTableBezier[n][0] + s[1] * this._lookUpTableBezier[n][1] + s[2] * this._lookUpTableBezier[n][2] + s[3] * this._lookUpTableBezier[n][3], 
                        this.vertex(t, r);
                        for (n = 0; n < h; n++) this.immediateMode._curveVertex.shift();
                    }
                } else if (3 === h && (this.immediateMode._curveVertex.push(arguments[0]), this.immediateMode._curveVertex.push(arguments[1]), 
                this.immediateMode._curveVertex.push(arguments[2]), 12 === this.immediateMode._curveVertex.length)) {
                    for (this.isCurve = !0, o = this._bezierToCatmull([ this.immediateMode._curveVertex[0], this.immediateMode._curveVertex[3], this.immediateMode._curveVertex[6], this.immediateMode._curveVertex[9] ]), 
                    s = this._bezierToCatmull([ this.immediateMode._curveVertex[1], this.immediateMode._curveVertex[4], this.immediateMode._curveVertex[7], this.immediateMode._curveVertex[10] ]), 
                    a = this._bezierToCatmull([ this.immediateMode._curveVertex[2], this.immediateMode._curveVertex[5], this.immediateMode._curveVertex[8], this.immediateMode._curveVertex[11] ]), 
                    n = 0; n < d; n++) t = o[0] * this._lookUpTableBezier[n][0] + o[1] * this._lookUpTableBezier[n][1] + o[2] * this._lookUpTableBezier[n][2] + o[3] * this._lookUpTableBezier[n][3], 
                    r = s[0] * this._lookUpTableBezier[n][0] + s[1] * this._lookUpTableBezier[n][1] + s[2] * this._lookUpTableBezier[n][2] + s[3] * this._lookUpTableBezier[n][3], 
                    i = a[0] * this._lookUpTableBezier[n][0] + a[1] * this._lookUpTableBezier[n][1] + a[2] * this._lookUpTableBezier[n][2] + a[3] * this._lookUpTableBezier[n][3], 
                    this.vertex(t, r, i);
                    for (n = 0; n < h; n++) this.immediateMode._curveVertex.shift();
                }
            }, i.RendererGL.prototype.image = function(e, t, r, i, o, s, a, h, l) {
                this._pInst.push(), this._pInst.texture(e), this._pInst.textureMode(n.NORMAL);
                var u = 0;
                t <= e.width && (u = t / e.width);
                var c = 1;
                t + i <= e.width && (c = (t + i) / e.width);
                var p = 0;
                r <= e.height && (p = r / e.height);
                var d = 1;
                r + o <= e.height && (d = (r + o) / e.height), this.beginShape(), this.vertex(s, a, 0, u, p), 
                this.vertex(s + h, a, 0, c, p), this.vertex(s + h, a + l, 0, c, d), this.vertex(s, a + l, 0, u, d), 
                this.endShape(n.CLOSE), this._pInst.pop();
            }, t.exports = i;
        }, {
            "../core/constants": 17,
            "../core/main": 23,
            "./p5.Geometry": 69
        } ],
        64: [ function(e, t, r) {
            "use strict";
            var i = e("../core/main"), n = e("../core/constants");
            i.prototype.orbitControl = function(e, t) {
                if (this._assert3d("orbitControl"), i._validateParameters("orbitControl", arguments), 
                this.mouseX < this.width && 0 < this.mouseX && this.mouseY < this.height && 0 < this.mouseY) {
                    var r = this._renderer._curCamera;
                    void 0 === e && (e = 1), void 0 === t && (t = e), !0 !== this.contextMenuDisabled && (this.canvas.oncontextmenu = function() {
                        return !1;
                    }, this._setProperty("contextMenuDisabled", !0)), !0 !== this.wheelDefaultDisabled && (this.canvas.onwheel = function() {
                        return !1;
                    }, this._setProperty("wheelDefaultDisabled", !0));
                    var n = this.height < this.width ? this.height : this.width;
                    if (this._mouseWheelDeltaY !== this._pmouseWheelDeltaY && (0 < this._mouseWheelDeltaY ? this._renderer._curCamera._orbit(0, 0, .5 * n) : this._renderer._curCamera._orbit(0, 0, -.5 * n)), 
                    this.mouseIsPressed) if (this.mouseButton === this.LEFT) {
                        var o = -e * (this.mouseX - this.pmouseX) / n, s = t * (this.mouseY - this.pmouseY) / n;
                        this._renderer._curCamera._orbit(o, s, 0);
                    } else if (this.mouseButton === this.RIGHT) {
                        var a = r._getLocalAxes(), h = Math.sqrt(a.x[0] * a.x[0] + a.x[2] * a.x[2]);
                        0 !== h && (a.x[0] /= h, a.x[2] /= h);
                        var l = Math.sqrt(a.y[0] * a.y[0] + a.y[2] * a.y[2]);
                        0 !== l && (a.y[0] /= l, a.y[2] /= l);
                        var u = -1 * e * (this.mouseX - this.pmouseX), c = -1 * t * (this.mouseY - this.pmouseY);
                        r.setPosition(r.eyeX + u * a.x[0] + c * a.z[0], r.eyeY, r.eyeZ + u * a.x[2] + c * a.z[2]);
                    }
                    return this;
                }
            }, i.prototype.debugMode = function() {
                this._assert3d("debugMode"), i._validateParameters("debugMode", arguments);
                for (var e = this._registeredMethods.post.length - 1; 0 <= e; e--) this._registeredMethods.post[e].toString() !== this._grid().toString() && this._registeredMethods.post[e].toString() !== this._axesIcon().toString() || this._registeredMethods.post.splice(e, 1);
                arguments[0] === n.GRID ? this.registerMethod("post", this._grid.call(this, arguments[1], arguments[2], arguments[3], arguments[4], arguments[5])) : arguments[0] === n.AXES ? this.registerMethod("post", this._axesIcon.call(this, arguments[1], arguments[2], arguments[3], arguments[4])) : (this.registerMethod("post", this._grid.call(this, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4])), 
                this.registerMethod("post", this._axesIcon.call(this, arguments[5], arguments[6], arguments[7], arguments[8])));
            }, i.prototype.noDebugMode = function() {
                this._assert3d("noDebugMode");
                for (var e = this._registeredMethods.post.length - 1; 0 <= e; e--) this._registeredMethods.post[e].toString() !== this._grid().toString() && this._registeredMethods.post[e].toString() !== this._axesIcon().toString() || this._registeredMethods.post.splice(e, 1);
            }, i.prototype._grid = function(e, t, r, i, n) {
                void 0 === e && (e = this.width / 2), void 0 === t && (t = Math.round(e / 30) < 4 ? 4 : Math.round(e / 30)), 
                void 0 === r && (r = 0), void 0 === i && (i = 0), void 0 === n && (n = 0);
                var o = e / t, s = e / 2;
                return function() {
                    this.push(), this.stroke(255 * this._renderer.curStrokeColor[0], 255 * this._renderer.curStrokeColor[1], 255 * this._renderer.curStrokeColor[2]), 
                    this._renderer.uMVMatrix.set(this._renderer._curCamera.cameraMatrix.mat4[0], this._renderer._curCamera.cameraMatrix.mat4[1], this._renderer._curCamera.cameraMatrix.mat4[2], this._renderer._curCamera.cameraMatrix.mat4[3], this._renderer._curCamera.cameraMatrix.mat4[4], this._renderer._curCamera.cameraMatrix.mat4[5], this._renderer._curCamera.cameraMatrix.mat4[6], this._renderer._curCamera.cameraMatrix.mat4[7], this._renderer._curCamera.cameraMatrix.mat4[8], this._renderer._curCamera.cameraMatrix.mat4[9], this._renderer._curCamera.cameraMatrix.mat4[10], this._renderer._curCamera.cameraMatrix.mat4[11], this._renderer._curCamera.cameraMatrix.mat4[12], this._renderer._curCamera.cameraMatrix.mat4[13], this._renderer._curCamera.cameraMatrix.mat4[14], this._renderer._curCamera.cameraMatrix.mat4[15]);
                    for (var e = 0; e <= t; e++) this.beginShape(this.LINES), this.vertex(-s + r, i, e * o - s + n), 
                    this.vertex(+s + r, i, e * o - s + n), this.endShape();
                    for (var a = 0; a <= t; a++) this.beginShape(this.LINES), this.vertex(a * o - s + r, i, -s + n), 
                    this.vertex(a * o - s + r, i, +s + n), this.endShape();
                    this.pop();
                };
            }, i.prototype._axesIcon = function(e, t, r, i) {
                return void 0 === e && (e = 40 < this.width / 20 ? this.width / 20 : 40), void 0 === t && (t = -this.width / 4), 
                void 0 === r && (r = t), void 0 === i && (i = t), function() {
                    this.push(), this._renderer.uMVMatrix.set(this._renderer._curCamera.cameraMatrix.mat4[0], this._renderer._curCamera.cameraMatrix.mat4[1], this._renderer._curCamera.cameraMatrix.mat4[2], this._renderer._curCamera.cameraMatrix.mat4[3], this._renderer._curCamera.cameraMatrix.mat4[4], this._renderer._curCamera.cameraMatrix.mat4[5], this._renderer._curCamera.cameraMatrix.mat4[6], this._renderer._curCamera.cameraMatrix.mat4[7], this._renderer._curCamera.cameraMatrix.mat4[8], this._renderer._curCamera.cameraMatrix.mat4[9], this._renderer._curCamera.cameraMatrix.mat4[10], this._renderer._curCamera.cameraMatrix.mat4[11], this._renderer._curCamera.cameraMatrix.mat4[12], this._renderer._curCamera.cameraMatrix.mat4[13], this._renderer._curCamera.cameraMatrix.mat4[14], this._renderer._curCamera.cameraMatrix.mat4[15]), 
                    this.strokeWeight(2), this.stroke(255, 0, 0), this.beginShape(this.LINES), this.vertex(t, r, i), 
                    this.vertex(t + e, r, i), this.endShape(), this.stroke(0, 255, 0), this.beginShape(this.LINES), 
                    this.vertex(t, r, i), this.vertex(t, r + e, i), this.endShape(), this.stroke(0, 0, 255), 
                    this.beginShape(this.LINES), this.vertex(t, r, i), this.vertex(t, r, i + e), this.endShape(), 
                    this.pop();
                };
            }, t.exports = i;
        }, {
            "../core/constants": 17,
            "../core/main": 23
        } ],
        65: [ function(e, t, r) {
            "use strict";
            var i = e("../core/main");
            i.prototype.ambientLight = function(e, t, r, n) {
                this._assert3d("ambientLight"), i._validateParameters("ambientLight", arguments);
                var o = this.color.apply(this, arguments);
                return this._renderer.ambientLightColors.push(o._array[0], o._array[1], o._array[2]), 
                this._renderer._enableLighting = !0, this;
            }, i.prototype.directionalLight = function(e, t, r, n, o, s) {
                var a, h, l, u;
                this._assert3d("directionalLight"), i._validateParameters("directionalLight", arguments), 
                a = e instanceof i.Color ? e : this.color(e, t, r);
                var c = arguments[arguments.length - 1];
                u = "number" == typeof c ? (h = arguments[arguments.length - 3], l = arguments[arguments.length - 2], 
                arguments[arguments.length - 1]) : (h = c.x, l = c.y, c.z);
                var p = Math.sqrt(h * h + l * l + u * u);
                return this._renderer.directionalLightDirections.push(h / p, l / p, u / p), this._renderer.directionalLightColors.push(a._array[0], a._array[1], a._array[2]), 
                this._renderer._enableLighting = !0, this;
            }, i.prototype.pointLight = function(e, t, r, n, o, s) {
                var a, h, l, u;
                this._assert3d("pointLight"), i._validateParameters("pointLight", arguments), a = e instanceof i.Color ? e : this.color(e, t, r);
                var c = arguments[arguments.length - 1];
                return u = "number" == typeof c ? (h = arguments[arguments.length - 3], l = arguments[arguments.length - 2], 
                arguments[arguments.length - 1]) : (h = c.x, l = c.y, c.z), this._renderer.pointLightPositions.push(h, l, u), 
                this._renderer.pointLightColors.push(a._array[0], a._array[1], a._array[2]), this._renderer._enableLighting = !0, 
                this;
            }, i.prototype.lights = function() {
                return this._assert3d("lights"), this.ambientLight(128, 128, 128), this.directionalLight(128, 128, 128, 0, 0, -1), 
                this;
            }, t.exports = i;
        }, {
            "../core/main": 23
        } ],
        66: [ function(e, t, r) {
            "use strict";
            var i = e("../core/main");
            e("./p5.Geometry"), i.prototype.loadModel = function(e) {
                var t, r, n;
                i._validateParameters("loadModel", arguments), n = "boolean" == typeof arguments[1] ? (t = arguments[1], 
                r = arguments[2], arguments[3]) : (t = !1, r = arguments[1], arguments[2]);
                var o = new i.Geometry();
                o.gid = e + "|" + t;
                var s = this;
                return this.loadStrings(e, function(e) {
                    !function(e, t) {
                        for (var r = {
                            v: [],
                            vt: [],
                            vn: []
                        }, n = {}, o = 0; o < t.length; ++o) {
                            var s = t[o].trim().split(/\b\s+/);
                            if (0 < s.length) if ("v" === s[0] || "vn" === s[0]) {
                                var a = new i.Vector(parseFloat(s[1]), parseFloat(s[2]), parseFloat(s[3]));
                                r[s[0]].push(a);
                            } else if ("vt" === s[0]) {
                                var h = [ parseFloat(s[1]), parseFloat(s[2]) ];
                                r[s[0]].push(h);
                            } else if ("f" === s[0]) for (var l = 3; l < s.length; ++l) {
                                for (var u = [], c = [ 1, l - 1, l ], p = 0; p < c.length; ++p) {
                                    var d = s[c[p]], f = 0;
                                    if (void 0 !== n[d]) f = n[d]; else {
                                        for (var m = d.split("/"), g = 0; g < m.length; g++) m[g] = parseInt(m[g]) - 1;
                                        f = n[d] = e.vertices.length, e.vertices.push(r.v[m[0]].copy()), r.vt[m[1]] ? e.uvs.push(r.vt[m[1]].slice()) : e.uvs.push([ 0, 0 ]), 
                                        r.vn[m[2]] && e.vertexNormals.push(r.vn[m[2]].copy());
                                    }
                                    u.push(f);
                                }
                                u[0] !== u[1] && u[0] !== u[2] && u[1] !== u[2] && e.faces.push(u);
                            }
                        }
                        0 === e.vertexNormals.length && e.computeNormals();
                    }(o, e), t && o.normalize(), s._decrementPreload(), "function" == typeof r && r(o);
                }.bind(this), n), o;
            }, i.prototype.model = function(e) {
                this._assert3d("model"), i._validateParameters("model", arguments), 0 < e.vertices.length && (this._renderer.geometryInHash(e.gid) || (e._makeTriangleEdges()._edgesToVertices(), 
                this._renderer.createBuffers(e.gid, e)), this._renderer.drawBuffers(e.gid));
            }, t.exports = i;
        }, {
            "../core/main": 23,
            "./p5.Geometry": 69
        } ],
        67: [ function(e, t, r) {
            "use strict";
            var i = e("../core/main"), n = e("../core/constants");
            e("./p5.Texture"), i.prototype.loadShader = function(e, t, r, n) {
                i._validateParameters("loadShader", arguments), n || (n = console.error);
                var o = new i.Shader(), s = this, a = !1, h = !1, l = function() {
                    s._decrementPreload(), r && r(o);
                };
                return this.loadStrings(e, function(e) {
                    o._vertSrc = e.join("\n"), h = !0, a && l();
                }, n), this.loadStrings(t, function(e) {
                    o._fragSrc = e.join("\n"), a = !0, h && l();
                }, n), o;
            }, i.prototype.createShader = function(e, t) {
                return this._assert3d("createShader"), i._validateParameters("createShader", arguments), 
                new i.Shader(this._renderer, e, t);
            }, i.prototype.shader = function(e) {
                return this._assert3d("shader"), i._validateParameters("shader", arguments), void 0 === e._renderer && (e._renderer = this._renderer), 
                e.isStrokeShader() ? this._renderer.userStrokeShader = e : (this._renderer.userFillShader = e, 
                this._renderer._useNormalMaterial = !1), e.init(), this;
            }, i.prototype.resetShader = function() {
                return this._renderer.userFillShader = this._renderer.userStrokeShader = null, this;
            }, i.prototype.normalMaterial = function() {
                return this._assert3d("normalMaterial"), i._validateParameters("normalMaterial", arguments), 
                this._renderer.drawMode = n.FILL, this._renderer._useSpecularMaterial = !1, this._renderer._useNormalMaterial = !0, 
                this._renderer.curFillColor = [ 1, 1, 1, 1 ], this._renderer._setProperty("_doFill", !0), 
                this.noStroke(), this;
            }, i.prototype.texture = function(e) {
                return this._assert3d("texture"), i._validateParameters("texture", arguments), this._renderer.drawMode = n.TEXTURE, 
                this._renderer._useSpecularMaterial = !1, this._renderer._useNormalMaterial = !1, 
                this._renderer._tex = e, this._renderer._setProperty("_doFill", !0), this;
            }, i.prototype.textureMode = function(e) {
                e !== n.IMAGE && e !== n.NORMAL ? console.warn("You tried to set " + e + " textureMode only supports IMAGE & NORMAL ") : this._renderer.textureMode = e;
            }, i.prototype.textureWrap = function(e, t) {
                t = t || e, this._renderer.textureWrapX = e, this._renderer.textureWrapY = t;
                for (var r = this._renderer.textures, i = 0; i < r.length; i++) r[i].setWrapMode(e, t);
            }, i.prototype.ambientMaterial = function(e, t, r, n) {
                this._assert3d("ambientMaterial"), i._validateParameters("ambientMaterial", arguments);
                var o = i.prototype.color.apply(this, arguments);
                return this._renderer.curFillColor = o._array, this._renderer._useSpecularMaterial = !1, 
                this._renderer._useNormalMaterial = !1, this._renderer._enableLighting = !0, this._renderer._tex = null, 
                this;
            }, i.prototype.specularMaterial = function(e, t, r, n) {
                this._assert3d("specularMaterial"), i._validateParameters("specularMaterial", arguments);
                var o = i.prototype.color.apply(this, arguments);
                return this._renderer.curFillColor = o._array, this._renderer._useSpecularMaterial = !0, 
                this._renderer._useNormalMaterial = !1, this._renderer._enableLighting = !0, this._renderer._tex = null, 
                this;
            }, i.prototype.shininess = function(e) {
                return this._assert3d("shininess"), i._validateParameters("shininess", arguments), 
                e < 1 && (e = 1), this._renderer._useShininess = e, this;
            }, i.RendererGL.prototype._applyColorBlend = function(e) {
                var t = this.GL, r = this.drawMode === n.TEXTURE;
                return r || e[e.length - 1] < 1 ? (t.depthMask(r), t.enable(t.BLEND), this._applyBlendMode()) : (t.depthMask(!0), 
                t.disable(t.BLEND)), e;
            }, i.RendererGL.prototype._applyBlendMode = function() {
                var e = this.GL;
                switch (this.curBlendMode) {
                  case n.BLEND:
                  case n.ADD:
                    e.blendEquation(e.FUNC_ADD), e.blendFunc(e.SRC_ALPHA, e.ONE_MINUS_SRC_ALPHA);
                    break;

                  case n.MULTIPLY:
                    e.blendEquationSeparate(e.FUNC_ADD, e.FUNC_ADD), e.blendFuncSeparate(e.ZERO, e.SRC_COLOR, e.ONE, e.ONE);
                    break;

                  case n.SCREEN:
                    e.blendEquationSeparate(e.FUNC_ADD, e.FUNC_ADD), e.blendFuncSeparate(e.ONE_MINUS_DST_COLOR, e.ONE, e.ONE, e.ONE);
                    break;

                  case n.EXCLUSION:
                    e.blendEquationSeparate(e.FUNC_ADD, e.FUNC_ADD), e.blendFuncSeparate(e.ONE_MINUS_DST_COLOR, e.ONE_MINUS_SRC_COLOR, e.ONE, e.ONE);
                    break;

                  case n.REPLACE:
                    e.blendEquation(e.FUNC_ADD), e.blendFunc(e.ONE, e.ZERO);
                    break;

                  case n.SUBTRACT:
                    e.blendEquationSeparate(e.FUNC_REVERSE_SUBTRACT, e.FUNC_ADD), e.blendFuncSeparate(e.SRC_ALPHA, e.ONE, e.ONE, e.ONE);
                    break;

                  case n.DARKEST:
                    this.blendExt ? (e.blendEquationSeparate(this.blendExt.MIN_EXT, e.FUNC_ADD), e.blendFuncSeparate(e.ONE, e.ONE, e.ONE, e.ONE)) : console.warn("blendMode(DARKEST) does not work in your browser in WEBGL mode.");
                    break;

                  case n.LIGHTEST:
                    this.blendExt ? (e.blendEquationSeparate(this.blendExt.MAX_EXT, e.FUNC_ADD), e.blendFuncSeparate(e.ONE, e.ONE, e.ONE, e.ONE)) : console.warn("blendMode(LIGHTEST) does not work in your browser in WEBGL mode.");
                    break;

                  default:
                    console.error("Oops! Somehow RendererGL set curBlendMode to an unsupported mode.");
                }
            }, t.exports = i;
        }, {
            "../core/constants": 17,
            "../core/main": 23,
            "./p5.Texture": 75
        } ],
        68: [ function(e, t, r) {
            "use strict";
            var i = e("../core/main");
            i.prototype.camera = function() {
                return this._assert3d("camera"), i._validateParameters("camera", arguments), this._renderer._curCamera.camera.apply(this._renderer._curCamera, arguments), 
                this;
            }, i.prototype.perspective = function() {
                return this._assert3d("perspective"), i._validateParameters("perspective", arguments), 
                this._renderer._curCamera.perspective.apply(this._renderer._curCamera, arguments), 
                this;
            }, i.prototype.ortho = function() {
                return this._assert3d("ortho"), i._validateParameters("ortho", arguments), this._renderer._curCamera.ortho.apply(this._renderer._curCamera, arguments), 
                this;
            }, i.prototype.createCamera = function() {
                this._assert3d("createCamera");
                var e = new i.Camera(this._renderer);
                return e._computeCameraDefaultSettings(), e._setDefaultCamera(), this._renderer._curCamera = e;
            }, i.Camera = function(e) {
                this._renderer = e, this.cameraType = "default", this.cameraMatrix = new i.Matrix(), 
                this.projMatrix = new i.Matrix();
            }, i.Camera.prototype.perspective = function(e, t, r, n) {
                this.cameraFOV = void 0 === e ? e = this.defaultCameraFOV : this._renderer._pInst._toRadians(e), 
                void 0 === t && (t = this.defaultAspectRatio), void 0 === r && (r = this.defaultCameraNear), 
                void 0 === n && (n = this.defaultCameraFar), r <= 1e-4 && (r = .01, console.log("Avoid perspective near plane values close to or below 0. Setting value to 0.01.")), 
                n < r && console.log("Perspective far plane value is less than near plane value. Nothing will be shown."), 
                this.aspectRatio = t, this.cameraNear = r, this.cameraFar = n, this.projMatrix = i.Matrix.identity();
                var o = 1 / Math.tan(this.cameraFOV / 2), s = 1 / (this.cameraNear - this.cameraFar);
                this.projMatrix.set(o / t, 0, 0, 0, 0, -o, 0, 0, 0, 0, (n + r) * s, -1, 0, 0, 2 * n * r * s, 0), 
                this._isActive() && this._renderer.uPMatrix.set(this.projMatrix.mat4[0], this.projMatrix.mat4[1], this.projMatrix.mat4[2], this.projMatrix.mat4[3], this.projMatrix.mat4[4], this.projMatrix.mat4[5], this.projMatrix.mat4[6], this.projMatrix.mat4[7], this.projMatrix.mat4[8], this.projMatrix.mat4[9], this.projMatrix.mat4[10], this.projMatrix.mat4[11], this.projMatrix.mat4[12], this.projMatrix.mat4[13], this.projMatrix.mat4[14], this.projMatrix.mat4[15]), 
                this.cameraType = "custom";
            }, i.Camera.prototype.ortho = function(e, t, r, n, o, s) {
                void 0 === e && (e = -this._renderer.width / 2), void 0 === t && (t = +this._renderer.width / 2), 
                void 0 === r && (r = -this._renderer.height / 2), void 0 === n && (n = +this._renderer.height / 2), 
                void 0 === o && (o = 0), void 0 === s && (s = Math.max(this._renderer.width, this._renderer.height));
                var a = t - e, h = n - r, l = s - o, u = 2 / a, c = 2 / h, p = -2 / l, d = -(t + e) / a, f = -(n + r) / h, m = -(s + o) / l;
                this.projMatrix = i.Matrix.identity(), this.projMatrix.set(u, 0, 0, 0, 0, -c, 0, 0, 0, 0, p, 0, d, f, m, 1), 
                this._isActive() && this._renderer.uPMatrix.set(this.projMatrix.mat4[0], this.projMatrix.mat4[1], this.projMatrix.mat4[2], this.projMatrix.mat4[3], this.projMatrix.mat4[4], this.projMatrix.mat4[5], this.projMatrix.mat4[6], this.projMatrix.mat4[7], this.projMatrix.mat4[8], this.projMatrix.mat4[9], this.projMatrix.mat4[10], this.projMatrix.mat4[11], this.projMatrix.mat4[12], this.projMatrix.mat4[13], this.projMatrix.mat4[14], this.projMatrix.mat4[15]), 
                this.cameraType = "custom";
            }, i.Camera.prototype._rotateView = function(e, t, r, n) {
                var o = this.centerX, s = this.centerY, a = this.centerZ;
                o -= this.eyeX, s -= this.eyeY, a -= this.eyeZ;
                var h = i.Matrix.identity(this._renderer._pInst);
                h.rotate(this._renderer._pInst._toRadians(e), t, r, n);
                var l = [ o * h.mat4[0] + s * h.mat4[4] + a * h.mat4[8], o * h.mat4[1] + s * h.mat4[5] + a * h.mat4[9], o * h.mat4[2] + s * h.mat4[6] + a * h.mat4[10] ];
                l[0] += this.eyeX, l[1] += this.eyeY, l[2] += this.eyeZ, this.camera(this.eyeX, this.eyeY, this.eyeZ, l[0], l[1], l[2], this.upX, this.upY, this.upZ);
            }, i.Camera.prototype.pan = function(e) {
                var t = this._getLocalAxes();
                this._rotateView(e, t.y[0], t.y[1], t.y[2]);
            }, i.Camera.prototype.tilt = function(e) {
                var t = this._getLocalAxes();
                this._rotateView(e, t.x[0], t.x[1], t.x[2]);
            }, i.Camera.prototype.lookAt = function(e, t, r) {
                this.camera(this.eyeX, this.eyeY, this.eyeZ, e, t, r, this.upX, this.upY, this.upZ);
            }, i.Camera.prototype.camera = function(e, t, r, i, n, o, s, a, h) {
                void 0 === e && (e = this.defaultEyeX, t = this.defaultEyeY, r = this.defaultEyeZ, 
                i = e, n = t, a = 1, h = s = o = 0), this.eyeX = e, this.eyeY = t, this.eyeZ = r, 
                this.centerX = i, this.centerY = n, this.centerZ = o, this.upX = s, this.upY = a, 
                this.upZ = h;
                var l = this._getLocalAxes();
                this.cameraMatrix.set(l.x[0], l.y[0], l.z[0], 0, l.x[1], l.y[1], l.z[1], 0, l.x[2], l.y[2], l.z[2], 0, 0, 0, 0, 1);
                var u = -e, c = -t, p = -r;
                return this.cameraMatrix.translate([ u, c, p ]), this._isActive() && this._renderer.uMVMatrix.set(this.cameraMatrix.mat4[0], this.cameraMatrix.mat4[1], this.cameraMatrix.mat4[2], this.cameraMatrix.mat4[3], this.cameraMatrix.mat4[4], this.cameraMatrix.mat4[5], this.cameraMatrix.mat4[6], this.cameraMatrix.mat4[7], this.cameraMatrix.mat4[8], this.cameraMatrix.mat4[9], this.cameraMatrix.mat4[10], this.cameraMatrix.mat4[11], this.cameraMatrix.mat4[12], this.cameraMatrix.mat4[13], this.cameraMatrix.mat4[14], this.cameraMatrix.mat4[15]), 
                this;
            }, i.Camera.prototype.move = function(e, t, r) {
                var i = this._getLocalAxes(), n = [ i.x[0] * e, i.x[1] * e, i.x[2] * e ], o = [ i.y[0] * t, i.y[1] * t, i.y[2] * t ], s = [ i.z[0] * r, i.z[1] * r, i.z[2] * r ];
                this.camera(this.eyeX + n[0] + o[0] + s[0], this.eyeY + n[1] + o[1] + s[1], this.eyeZ + n[2] + o[2] + s[2], this.centerX + n[0] + o[0] + s[0], this.centerY + n[1] + o[1] + s[1], this.centerZ + n[2] + o[2] + s[2], 0, 1, 0);
            }, i.Camera.prototype.setPosition = function(e, t, r) {
                var i = e - this.eyeX, n = t - this.eyeY, o = r - this.eyeZ;
                this.camera(e, t, r, this.centerX + i, this.centerY + n, this.centerZ + o, 0, 1, 0);
            }, i.Camera.prototype._computeCameraDefaultSettings = function() {
                this.defaultCameraFOV = 60 / 180 * Math.PI, this.defaultAspectRatio = this._renderer.width / this._renderer.height, 
                this.defaultEyeX = 0, this.defaultEyeY = 0, this.defaultEyeZ = this._renderer.height / 2 / Math.tan(this.defaultCameraFOV / 2), 
                this.defaultCenterX = 0, this.defaultCenterY = 0, this.defaultCenterZ = 0, this.defaultCameraNear = .1 * this.defaultEyeZ, 
                this.defaultCameraFar = 10 * this.defaultEyeZ;
            }, i.Camera.prototype._setDefaultCamera = function() {
                this.cameraFOV = this.defaultCameraFOV, this.aspectRatio = this.defaultAspectRatio, 
                this.eyeX = this.defaultEyeX, this.eyeY = this.defaultEyeY, this.eyeZ = this.defaultEyeZ, 
                this.centerX = this.defaultCenterX, this.centerY = this.defaultCenterY, this.centerZ = this.defaultCenterZ, 
                this.upX = 0, this.upY = 1, this.upZ = 0, this.cameraNear = this.defaultCameraNear, 
                this.cameraFar = this.defaultCameraFar, this.perspective(), this.camera(), this.cameraType = "default";
            }, i.Camera.prototype._resize = function() {
                "default" === this.cameraType ? (this._computeCameraDefaultSettings(), this._setDefaultCamera()) : this.perspective(this.cameraFOV, this._renderer.width / this._renderer.height);
            }, i.Camera.prototype.copy = function() {
                var e = new i.Camera(this._renderer);
                return e.cameraFOV = this.cameraFOV, e.aspectRatio = this.aspectRatio, e.eyeX = this.eyeX, 
                e.eyeY = this.eyeY, e.eyeZ = this.eyeZ, e.centerX = this.centerX, e.centerY = this.centerY, 
                e.centerZ = this.centerZ, e.cameraNear = this.cameraNear, e.cameraFar = this.cameraFar, 
                e.cameraType = this.cameraType, e.cameraMatrix = this.cameraMatrix.copy(), e.projMatrix = this.projMatrix.copy(), 
                e;
            }, i.Camera.prototype._getLocalAxes = function() {
                var e = this.eyeX - this.centerX, t = this.eyeY - this.centerY, r = this.eyeZ - this.centerZ, i = Math.sqrt(e * e + t * t + r * r);
                0 !== i && (e /= i, t /= i, r /= i);
                var n = this.upX, o = this.upY, s = this.upZ, a = o * r - s * t, h = -n * r + s * e, l = n * t - o * e;
                n = t * l - r * h, o = -e * l + r * a, s = e * h - t * a;
                var u = Math.sqrt(a * a + h * h + l * l);
                0 !== u && (a /= u, h /= u, l /= u);
                var c = Math.sqrt(n * n + o * o + s * s);
                return 0 !== c && (n /= c, o /= c, s /= c), {
                    x: [ a, h, l ],
                    y: [ n, o, s ],
                    z: [ e, t, r ]
                };
            }, i.Camera.prototype._orbit = function(e, t, r) {
                var i = this.eyeX - this.centerX, n = this.eyeY - this.centerY, o = this.eyeZ - this.centerZ, s = Math.sqrt(i * i + n * n + o * o), a = Math.atan2(i, o), h = Math.acos(Math.max(-1, Math.min(1, n / s)));
                a += e, (s += r) < 0 && (s = .1), (h += t) > Math.PI ? h = Math.PI : h <= 0 && (h = .001);
                var l = Math.sin(h) * s * Math.sin(a), u = Math.cos(h) * s, c = Math.sin(h) * s * Math.cos(a);
                this.camera(l + this.centerX, u + this.centerY, c + this.centerZ, this.centerX, this.centerY, this.centerZ, 0, 1, 0);
            }, i.Camera.prototype._isActive = function() {
                return this === this._renderer._curCamera;
            }, i.prototype.setCamera = function(e) {
                this._renderer._curCamera = e, this._renderer.uPMatrix.set(e.projMatrix.mat4[0], e.projMatrix.mat4[1], e.projMatrix.mat4[2], e.projMatrix.mat4[3], e.projMatrix.mat4[4], e.projMatrix.mat4[5], e.projMatrix.mat4[6], e.projMatrix.mat4[7], e.projMatrix.mat4[8], e.projMatrix.mat4[9], e.projMatrix.mat4[10], e.projMatrix.mat4[11], e.projMatrix.mat4[12], e.projMatrix.mat4[13], e.projMatrix.mat4[14], e.projMatrix.mat4[15]);
            }, t.exports = i.Camera;
        }, {
            "../core/main": 23
        } ],
        69: [ function(e, t, r) {
            "use strict";
            var i = e("../core/main");
            i.Geometry = function(e, t, r) {
                return this.vertices = [], this.lineVertices = [], this.lineNormals = [], this.vertexNormals = [], 
                this.faces = [], this.uvs = [], this.edges = [], this.detailX = void 0 !== e ? e : 1, 
                this.detailY = void 0 !== t ? t : 1, r instanceof Function && r.call(this), this;
            }, i.Geometry.prototype.computeFaces = function() {
                this.faces.length = 0;
                for (var e, t, r, i, n = this.detailX + 1, o = 0; o < this.detailY; o++) for (var s = 0; s < this.detailX; s++) t = (e = o * n + s) + 1, 
                r = (o + 1) * n + s + 1, i = (o + 1) * n + s, this.faces.push([ e, t, i ]), this.faces.push([ i, t, r ]);
                return this;
            }, i.Geometry.prototype._getFaceNormal = function(e) {
                var t = this.faces[e], r = this.vertices[t[0]], n = this.vertices[t[1]], o = this.vertices[t[2]], s = i.Vector.sub(n, r), a = i.Vector.sub(o, r), h = i.Vector.cross(s, a), l = i.Vector.mag(h), u = l / (i.Vector.mag(s) * i.Vector.mag(a));
                return 0 === u || isNaN(u) ? (console.warn("p5.Geometry.prototype._getFaceNormal:", "face has colinear sides or a repeated vertex"), 
                h) : (1 < u && (u = 1), h.mult(Math.asin(u) / l));
            }, i.Geometry.prototype.computeNormals = function() {
                var e, t = this.vertexNormals, r = this.vertices, n = this.faces;
                for (e = t.length = 0; e < r.length; ++e) t.push(new i.Vector());
                for (var o = 0; o < n.length; ++o) for (var s = n[o], a = this._getFaceNormal(o), h = 0; h < 3; ++h) t[s[h]].add(a);
                for (e = 0; e < r.length; ++e) t[e].normalize();
                return this;
            }, i.Geometry.prototype.averageNormals = function() {
                for (var e = 0; e <= this.detailY; e++) {
                    var t = this.detailX + 1, r = i.Vector.add(this.vertexNormals[e * t], this.vertexNormals[e * t + this.detailX]);
                    r = i.Vector.div(r, 2), this.vertexNormals[e * t] = r, this.vertexNormals[e * t + this.detailX] = r;
                }
                return this;
            }, i.Geometry.prototype.averagePoleNormals = function() {
                for (var e = new i.Vector(0, 0, 0), t = 0; t < this.detailX; t++) e.add(this.vertexNormals[t]);
                for (e = i.Vector.div(e, this.detailX), t = 0; t < this.detailX; t++) this.vertexNormals[t] = e;
                for (e = new i.Vector(0, 0, 0), t = this.vertices.length - 1; t > this.vertices.length - 1 - this.detailX; t--) e.add(this.vertexNormals[t]);
                for (e = i.Vector.div(e, this.detailX), t = this.vertices.length - 1; t > this.vertices.length - 1 - this.detailX; t--) this.vertexNormals[t] = e;
                return this;
            }, i.Geometry.prototype._makeTriangleEdges = function() {
                if (this.edges.length = 0, Array.isArray(this.strokeIndices)) for (var e = 0, t = this.strokeIndices.length; e < t; e++) this.edges.push(this.strokeIndices[e]); else for (var r = 0; r < this.faces.length; r++) this.edges.push([ this.faces[r][0], this.faces[r][1] ]), 
                this.edges.push([ this.faces[r][1], this.faces[r][2] ]), this.edges.push([ this.faces[r][2], this.faces[r][0] ]);
                return this;
            }, i.Geometry.prototype._edgesToVertices = function() {
                this.lineVertices.length = 0;
                for (var e = this.lineNormals.length = 0; e < this.edges.length; e++) {
                    var t = this.vertices[this.edges[e][0]], r = this.vertices[this.edges[e][1]], i = r.copy().sub(t).normalize(), n = t.array(), o = t.array(), s = r.array(), a = r.array(), h = i.array(), l = i.array();
                    h.push(1), l.push(-1), this.lineNormals.push(h, l, h, h, l, l), this.lineVertices.push(n, o, s, s, o, a);
                }
                return this;
            }, i.Geometry.prototype.normalize = function() {
                if (0 < this.vertices.length) {
                    for (var e = this.vertices[0].copy(), t = this.vertices[0].copy(), r = 0; r < this.vertices.length; r++) e.x = Math.max(e.x, this.vertices[r].x), 
                    t.x = Math.min(t.x, this.vertices[r].x), e.y = Math.max(e.y, this.vertices[r].y), 
                    t.y = Math.min(t.y, this.vertices[r].y), e.z = Math.max(e.z, this.vertices[r].z), 
                    t.z = Math.min(t.z, this.vertices[r].z);
                    var n = i.Vector.lerp(e, t, .5), o = i.Vector.sub(e, t), s = 200 / Math.max(Math.max(o.x, o.y), o.z);
                    for (r = 0; r < this.vertices.length; r++) this.vertices[r].sub(n), this.vertices[r].mult(s);
                }
                return this;
            }, t.exports = i.Geometry;
        }, {
            "../core/main": 23
        } ],
        70: [ function(e, t, r) {
            "use strict";
            var i = e("../core/main"), n = Array, o = function(e) {
                return e instanceof Array;
            };
            "undefined" != typeof Float32Array && (n = Float32Array, o = function(e) {
                return e instanceof Array || e instanceof Float32Array;
            }), i.Matrix = function() {
                for (var e = new Array(arguments.length), t = 0; t < e.length; ++t) e[t] = arguments[t];
                return e.length && e[e.length - 1] instanceof i && (this.p5 = e[e.length - 1]), 
                "mat3" === e[0] ? this.mat3 = Array.isArray(e[1]) ? e[1] : new n([ 1, 0, 0, 0, 1, 0, 0, 0, 1 ]) : this.mat4 = Array.isArray(e[0]) ? e[0] : new n([ 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ]), 
                this;
            }, i.Matrix.prototype.set = function(e) {
                return e instanceof i.Matrix ? this.mat4 = e.mat4 : o(e) ? this.mat4 = e : 16 === arguments.length && (this.mat4[0] = e, 
                this.mat4[1] = arguments[1], this.mat4[2] = arguments[2], this.mat4[3] = arguments[3], 
                this.mat4[4] = arguments[4], this.mat4[5] = arguments[5], this.mat4[6] = arguments[6], 
                this.mat4[7] = arguments[7], this.mat4[8] = arguments[8], this.mat4[9] = arguments[9], 
                this.mat4[10] = arguments[10], this.mat4[11] = arguments[11], this.mat4[12] = arguments[12], 
                this.mat4[13] = arguments[13], this.mat4[14] = arguments[14], this.mat4[15] = arguments[15]), 
                this;
            }, i.Matrix.prototype.get = function() {
                return new i.Matrix(this.mat4, this.p5);
            }, i.Matrix.prototype.copy = function() {
                var e = new i.Matrix(this.p5);
                return e.mat4[0] = this.mat4[0], e.mat4[1] = this.mat4[1], e.mat4[2] = this.mat4[2], 
                e.mat4[3] = this.mat4[3], e.mat4[4] = this.mat4[4], e.mat4[5] = this.mat4[5], e.mat4[6] = this.mat4[6], 
                e.mat4[7] = this.mat4[7], e.mat4[8] = this.mat4[8], e.mat4[9] = this.mat4[9], e.mat4[10] = this.mat4[10], 
                e.mat4[11] = this.mat4[11], e.mat4[12] = this.mat4[12], e.mat4[13] = this.mat4[13], 
                e.mat4[14] = this.mat4[14], e.mat4[15] = this.mat4[15], e;
            }, i.Matrix.identity = function(e) {
                return new i.Matrix(e);
            }, i.Matrix.prototype.transpose = function(e) {
                var t, r, n, s, a, h;
                return e instanceof i.Matrix ? (t = e.mat4[1], r = e.mat4[2], n = e.mat4[3], s = e.mat4[6], 
                a = e.mat4[7], h = e.mat4[11], this.mat4[0] = e.mat4[0], this.mat4[1] = e.mat4[4], 
                this.mat4[2] = e.mat4[8], this.mat4[3] = e.mat4[12], this.mat4[4] = t, this.mat4[5] = e.mat4[5], 
                this.mat4[6] = e.mat4[9], this.mat4[7] = e.mat4[13], this.mat4[8] = r, this.mat4[9] = s, 
                this.mat4[10] = e.mat4[10], this.mat4[11] = e.mat4[14], this.mat4[12] = n, this.mat4[13] = a, 
                this.mat4[14] = h, this.mat4[15] = e.mat4[15]) : o(e) && (t = e[1], r = e[2], n = e[3], 
                s = e[6], a = e[7], h = e[11], this.mat4[0] = e[0], this.mat4[1] = e[4], this.mat4[2] = e[8], 
                this.mat4[3] = e[12], this.mat4[4] = t, this.mat4[5] = e[5], this.mat4[6] = e[9], 
                this.mat4[7] = e[13], this.mat4[8] = r, this.mat4[9] = s, this.mat4[10] = e[10], 
                this.mat4[11] = e[14], this.mat4[12] = n, this.mat4[13] = a, this.mat4[14] = h, 
                this.mat4[15] = e[15]), this;
            }, i.Matrix.prototype.invert = function(e) {
                var t, r, n, s, a, h, l, u, c, p, d, f, m, g, v, y;
                e instanceof i.Matrix ? (t = e.mat4[0], r = e.mat4[1], n = e.mat4[2], s = e.mat4[3], 
                a = e.mat4[4], h = e.mat4[5], l = e.mat4[6], u = e.mat4[7], c = e.mat4[8], p = e.mat4[9], 
                d = e.mat4[10], f = e.mat4[11], m = e.mat4[12], g = e.mat4[13], v = e.mat4[14], 
                y = e.mat4[15]) : o(e) && (t = e[0], r = e[1], n = e[2], s = e[3], a = e[4], h = e[5], 
                l = e[6], u = e[7], c = e[8], p = e[9], d = e[10], f = e[11], m = e[12], g = e[13], 
                v = e[14], y = e[15]);
                var b = t * h - r * a, x = t * l - n * a, _ = t * u - s * a, w = r * l - n * h, S = r * u - s * h, T = n * u - s * l, E = c * g - p * m, M = c * v - d * m, C = c * y - f * m, L = p * v - d * g, R = p * y - f * g, A = d * y - f * v, D = b * A - x * R + _ * L + w * C - S * M + T * E;
                return D ? (D = 1 / D, this.mat4[0] = (h * A - l * R + u * L) * D, this.mat4[1] = (n * R - r * A - s * L) * D, 
                this.mat4[2] = (g * T - v * S + y * w) * D, this.mat4[3] = (d * S - p * T - f * w) * D, 
                this.mat4[4] = (l * C - a * A - u * M) * D, this.mat4[5] = (t * A - n * C + s * M) * D, 
                this.mat4[6] = (v * _ - m * T - y * x) * D, this.mat4[7] = (c * T - d * _ + f * x) * D, 
                this.mat4[8] = (a * R - h * C + u * E) * D, this.mat4[9] = (r * C - t * R - s * E) * D, 
                this.mat4[10] = (m * S - g * _ + y * b) * D, this.mat4[11] = (p * _ - c * S - f * b) * D, 
                this.mat4[12] = (h * M - a * L - l * E) * D, this.mat4[13] = (t * L - r * M + n * E) * D, 
                this.mat4[14] = (g * x - m * w - v * b) * D, this.mat4[15] = (c * w - p * x + d * b) * D, 
                this) : null;
            }, i.Matrix.prototype.invert3x3 = function() {
                var e = this.mat3[0], t = this.mat3[1], r = this.mat3[2], i = this.mat3[3], n = this.mat3[4], o = this.mat3[5], s = this.mat3[6], a = this.mat3[7], h = this.mat3[8], l = h * n - o * a, u = -h * i + o * s, c = a * i - n * s, p = e * l + t * u + r * c;
                return p ? (p = 1 / p, this.mat3[0] = l * p, this.mat3[1] = (-h * t + r * a) * p, 
                this.mat3[2] = (o * t - r * n) * p, this.mat3[3] = u * p, this.mat3[4] = (h * e - r * s) * p, 
                this.mat3[5] = (-o * e + r * i) * p, this.mat3[6] = c * p, this.mat3[7] = (-a * e + t * s) * p, 
                this.mat3[8] = (n * e - t * i) * p, this) : null;
            }, i.Matrix.prototype.transpose3x3 = function(e) {
                var t = e[1], r = e[2], i = e[5];
                return this.mat3[1] = e[3], this.mat3[2] = e[6], this.mat3[3] = t, this.mat3[5] = e[7], 
                this.mat3[6] = r, this.mat3[7] = i, this;
            }, i.Matrix.prototype.inverseTranspose = function(e) {
                void 0 === this.mat3 ? console.error("sorry, this function only works with mat3") : (this.mat3[0] = e.mat4[0], 
                this.mat3[1] = e.mat4[1], this.mat3[2] = e.mat4[2], this.mat3[3] = e.mat4[4], this.mat3[4] = e.mat4[5], 
                this.mat3[5] = e.mat4[6], this.mat3[6] = e.mat4[8], this.mat3[7] = e.mat4[9], this.mat3[8] = e.mat4[10]);
                var t = this.invert3x3();
                if (t) t.transpose3x3(this.mat3); else for (var r = 0; r < 9; r++) this.mat3[r] = 0;
                return this;
            }, i.Matrix.prototype.determinant = function() {
                var e = this.mat4[0] * this.mat4[5] - this.mat4[1] * this.mat4[4], t = this.mat4[0] * this.mat4[6] - this.mat4[2] * this.mat4[4], r = this.mat4[0] * this.mat4[7] - this.mat4[3] * this.mat4[4], i = this.mat4[1] * this.mat4[6] - this.mat4[2] * this.mat4[5], n = this.mat4[1] * this.mat4[7] - this.mat4[3] * this.mat4[5], o = this.mat4[2] * this.mat4[7] - this.mat4[3] * this.mat4[6], s = this.mat4[8] * this.mat4[13] - this.mat4[9] * this.mat4[12], a = this.mat4[8] * this.mat4[14] - this.mat4[10] * this.mat4[12], h = this.mat4[8] * this.mat4[15] - this.mat4[11] * this.mat4[12], l = this.mat4[9] * this.mat4[14] - this.mat4[10] * this.mat4[13], u = this.mat4[9] * this.mat4[15] - this.mat4[11] * this.mat4[13];
                return e * (this.mat4[10] * this.mat4[15] - this.mat4[11] * this.mat4[14]) - t * u + r * l + i * h - n * a + o * s;
            }, i.Matrix.prototype.mult = function(e) {
                var t;
                if (e === this || e === this.mat4) t = this.copy().mat4; else if (e instanceof i.Matrix) t = e.mat4; else if (o(e)) t = e; else {
                    if (16 !== arguments.length) return;
                    t = arguments;
                }
                var r = this.mat4[0], n = this.mat4[1], s = this.mat4[2], a = this.mat4[3];
                return this.mat4[0] = r * t[0] + n * t[4] + s * t[8] + a * t[12], this.mat4[1] = r * t[1] + n * t[5] + s * t[9] + a * t[13], 
                this.mat4[2] = r * t[2] + n * t[6] + s * t[10] + a * t[14], this.mat4[3] = r * t[3] + n * t[7] + s * t[11] + a * t[15], 
                r = this.mat4[4], n = this.mat4[5], s = this.mat4[6], a = this.mat4[7], this.mat4[4] = r * t[0] + n * t[4] + s * t[8] + a * t[12], 
                this.mat4[5] = r * t[1] + n * t[5] + s * t[9] + a * t[13], this.mat4[6] = r * t[2] + n * t[6] + s * t[10] + a * t[14], 
                this.mat4[7] = r * t[3] + n * t[7] + s * t[11] + a * t[15], r = this.mat4[8], n = this.mat4[9], 
                s = this.mat4[10], a = this.mat4[11], this.mat4[8] = r * t[0] + n * t[4] + s * t[8] + a * t[12], 
                this.mat4[9] = r * t[1] + n * t[5] + s * t[9] + a * t[13], this.mat4[10] = r * t[2] + n * t[6] + s * t[10] + a * t[14], 
                this.mat4[11] = r * t[3] + n * t[7] + s * t[11] + a * t[15], r = this.mat4[12], 
                n = this.mat4[13], s = this.mat4[14], a = this.mat4[15], this.mat4[12] = r * t[0] + n * t[4] + s * t[8] + a * t[12], 
                this.mat4[13] = r * t[1] + n * t[5] + s * t[9] + a * t[13], this.mat4[14] = r * t[2] + n * t[6] + s * t[10] + a * t[14], 
                this.mat4[15] = r * t[3] + n * t[7] + s * t[11] + a * t[15], this;
            }, i.Matrix.prototype.apply = function(e) {
                var t;
                if (e === this || e === this.mat4) t = this.copy().mat4; else if (e instanceof i.Matrix) t = e.mat4; else if (o(e)) t = e; else {
                    if (16 !== arguments.length) return;
                    t = arguments;
                }
                var r = this.mat4, n = r[0], s = r[4], a = r[8], h = r[12];
                r[0] = t[0] * n + t[1] * s + t[2] * a + t[3] * h, r[4] = t[4] * n + t[5] * s + t[6] * a + t[7] * h, 
                r[8] = t[8] * n + t[9] * s + t[10] * a + t[11] * h, r[12] = t[12] * n + t[13] * s + t[14] * a + t[15] * h;
                var l = r[1], u = r[5], c = r[9], p = r[13];
                r[1] = t[0] * l + t[1] * u + t[2] * c + t[3] * p, r[5] = t[4] * l + t[5] * u + t[6] * c + t[7] * p, 
                r[9] = t[8] * l + t[9] * u + t[10] * c + t[11] * p, r[13] = t[12] * l + t[13] * u + t[14] * c + t[15] * p;
                var d = r[2], f = r[6], m = r[10], g = r[14];
                r[2] = t[0] * d + t[1] * f + t[2] * m + t[3] * g, r[6] = t[4] * d + t[5] * f + t[6] * m + t[7] * g, 
                r[10] = t[8] * d + t[9] * f + t[10] * m + t[11] * g, r[14] = t[12] * d + t[13] * f + t[14] * m + t[15] * g;
                var v = r[3], y = r[7], b = r[11], x = r[15];
                return r[3] = t[0] * v + t[1] * y + t[2] * b + t[3] * x, r[7] = t[4] * v + t[5] * y + t[6] * b + t[7] * x, 
                r[11] = t[8] * v + t[9] * y + t[10] * b + t[11] * x, r[15] = t[12] * v + t[13] * y + t[14] * b + t[15] * x, 
                this;
            }, i.Matrix.prototype.scale = function(e, t, r) {
                return e instanceof i.Vector ? (t = e.y, r = e.z, e = e.x) : e instanceof Array && (t = e[1], 
                r = e[2], e = e[0]), this.mat4[0] *= e, this.mat4[1] *= e, this.mat4[2] *= e, this.mat4[3] *= e, 
                this.mat4[4] *= t, this.mat4[5] *= t, this.mat4[6] *= t, this.mat4[7] *= t, this.mat4[8] *= r, 
                this.mat4[9] *= r, this.mat4[10] *= r, this.mat4[11] *= r, this;
            }, i.Matrix.prototype.rotate = function(e, t, r, n) {
                t instanceof i.Vector ? (r = t.y, n = t.z, t = t.x) : t instanceof Array && (r = t[1], 
                n = t[2], t = t[0]);
                var o = Math.sqrt(t * t + r * r + n * n);
                t *= 1 / o, r *= 1 / o, n *= 1 / o;
                var s = this.mat4[0], a = this.mat4[1], h = this.mat4[2], l = this.mat4[3], u = this.mat4[4], c = this.mat4[5], p = this.mat4[6], d = this.mat4[7], f = this.mat4[8], m = this.mat4[9], g = this.mat4[10], v = this.mat4[11], y = Math.sin(e), b = Math.cos(e), x = 1 - b, _ = t * t * x + b, w = r * t * x + n * y, S = n * t * x - r * y, T = t * r * x - n * y, E = r * r * x + b, M = n * r * x + t * y, C = t * n * x + r * y, L = r * n * x - t * y, R = n * n * x + b;
                return this.mat4[0] = s * _ + u * w + f * S, this.mat4[1] = a * _ + c * w + m * S, 
                this.mat4[2] = h * _ + p * w + g * S, this.mat4[3] = l * _ + d * w + v * S, this.mat4[4] = s * T + u * E + f * M, 
                this.mat4[5] = a * T + c * E + m * M, this.mat4[6] = h * T + p * E + g * M, this.mat4[7] = l * T + d * E + v * M, 
                this.mat4[8] = s * C + u * L + f * R, this.mat4[9] = a * C + c * L + m * R, this.mat4[10] = h * C + p * L + g * R, 
                this.mat4[11] = l * C + d * L + v * R, this;
            }, i.Matrix.prototype.translate = function(e) {
                var t = e[0], r = e[1], i = e[2] || 0;
                this.mat4[12] += this.mat4[0] * t + this.mat4[4] * r + this.mat4[8] * i, this.mat4[13] += this.mat4[1] * t + this.mat4[5] * r + this.mat4[9] * i, 
                this.mat4[14] += this.mat4[2] * t + this.mat4[6] * r + this.mat4[10] * i, this.mat4[15] += this.mat4[3] * t + this.mat4[7] * r + this.mat4[11] * i;
            }, i.Matrix.prototype.rotateX = function(e) {
                this.rotate(e, 1, 0, 0);
            }, i.Matrix.prototype.rotateY = function(e) {
                this.rotate(e, 0, 1, 0);
            }, i.Matrix.prototype.rotateZ = function(e) {
                this.rotate(e, 0, 0, 1);
            }, i.Matrix.prototype.perspective = function(e, t, r, i) {
                var n = 1 / Math.tan(e / 2), o = 1 / (r - i);
                return this.mat4[0] = n / t, this.mat4[1] = 0, this.mat4[2] = 0, this.mat4[3] = 0, 
                this.mat4[4] = 0, this.mat4[5] = n, this.mat4[6] = 0, this.mat4[7] = 0, this.mat4[8] = 0, 
                this.mat4[9] = 0, this.mat4[10] = (i + r) * o, this.mat4[11] = -1, this.mat4[12] = 0, 
                this.mat4[13] = 0, this.mat4[14] = 2 * i * r * o, this.mat4[15] = 0, this;
            }, i.Matrix.prototype.ortho = function(e, t, r, i, n, o) {
                var s = 1 / (e - t), a = 1 / (r - i), h = 1 / (n - o);
                return this.mat4[0] = -2 * s, this.mat4[1] = 0, this.mat4[2] = 0, this.mat4[3] = 0, 
                this.mat4[4] = 0, this.mat4[5] = -2 * a, this.mat4[6] = 0, this.mat4[7] = 0, this.mat4[8] = 0, 
                this.mat4[9] = 0, this.mat4[10] = 2 * h, this.mat4[11] = 0, this.mat4[12] = (e + t) * s, 
                this.mat4[13] = (i + r) * a, this.mat4[14] = (o + n) * h, this.mat4[15] = 1, this;
            }, t.exports = i.Matrix;
        }, {
            "../core/main": 23
        } ],
        71: [ function(e, t, r) {
            "use strict";
            var i = e("../core/main"), n = e("../core/constants");
            i.RendererGL.prototype.beginShape = function(e) {
                return this.immediateMode.shapeMode = void 0 !== e ? e : n.LINE_STRIP, void 0 === this.immediateMode.vertices ? (this.immediateMode.vertices = [], 
                this.immediateMode.edges = [], this.immediateMode.lineVertices = [], this.immediateMode.vertexColors = [], 
                this.immediateMode.lineNormals = [], this.immediateMode.uvCoords = [], this.immediateMode.vertexBuffer = this.GL.createBuffer(), 
                this.immediateMode.colorBuffer = this.GL.createBuffer(), this.immediateMode.uvBuffer = this.GL.createBuffer(), 
                this.immediateMode.lineVertexBuffer = this.GL.createBuffer(), this.immediateMode.lineNormalBuffer = this.GL.createBuffer(), 
                this.immediateMode.pointVertexBuffer = this.GL.createBuffer(), this.immediateMode._bezierVertex = [], 
                this.immediateMode._quadraticVertex = [], this.immediateMode._curveVertex = []) : (this.immediateMode.vertices.length = 0, 
                this.immediateMode.edges.length = 0, this.immediateMode.lineVertices.length = 0, 
                this.immediateMode.lineNormals.length = 0, this.immediateMode.vertexColors.length = 0, 
                this.immediateMode.uvCoords.length = 0), this.isImmediateDrawing = !0, this;
            }, i.RendererGL.prototype.vertex = function(e, t) {
                var r, o, s;
                r = o = s = 0, 3 === arguments.length ? r = arguments[2] : 4 === arguments.length ? (o = arguments[2], 
                s = arguments[3]) : 5 === arguments.length && (r = arguments[2], o = arguments[3], 
                s = arguments[4]);
                var a = new i.Vector(e, t, r);
                this.immediateMode.vertices.push(a);
                var h = this.curFillColor || [ .5, .5, .5, 1 ];
                return this.immediateMode.vertexColors.push(h[0], h[1], h[2], h[3]), this.textureMode === n.IMAGE && (null !== this._tex ? 0 < this._tex.width && 0 < this._tex.height && (o /= this._tex.width, 
                s /= this._tex.height) : null === this._tex && 4 <= arguments.length && console.warn("You must first call texture() before using vertex() with image based u and v coordinates")), 
                this.immediateMode.uvCoords.push(o, s), this.immediateMode._bezierVertex[0] = e, 
                this.immediateMode._bezierVertex[1] = t, this.immediateMode._bezierVertex[2] = r, 
                this.immediateMode._quadraticVertex[0] = e, this.immediateMode._quadraticVertex[1] = t, 
                this.immediateMode._quadraticVertex[2] = r, this;
            }, i.RendererGL.prototype.endShape = function(e, t, r, o, s, a) {
                if (this.immediateMode.shapeMode === n.POINTS) this._drawPoints(this.immediateMode.vertices, this.immediateMode.pointVertexBuffer); else if (1 < this.immediateMode.vertices.length) {
                    if (this._doStroke && this.drawMode !== n.TEXTURE) {
                        if (this.immediateMode.shapeMode === n.TRIANGLE_STRIP) {
                            var h;
                            for (h = 0; h < this.immediateMode.vertices.length - 2; h++) this.immediateMode.edges.push([ h, h + 1 ]), 
                            this.immediateMode.edges.push([ h, h + 2 ]);
                            this.immediateMode.edges.push([ h, h + 1 ]);
                        } else if (this.immediateMode.shapeMode === n.TRIANGLES) for (h = 0; h < this.immediateMode.vertices.length - 2; h += 3) this.immediateMode.edges.push([ h, h + 1 ]), 
                        this.immediateMode.edges.push([ h + 1, h + 2 ]), this.immediateMode.edges.push([ h + 2, h ]); else if (this.immediateMode.shapeMode === n.LINES) for (h = 0; h < this.immediateMode.vertices.length - 1; h += 2) this.immediateMode.edges.push([ h, h + 1 ]); else for (h = 0; h < this.immediateMode.vertices.length - 1; h++) this.immediateMode.edges.push([ h, h + 1 ]);
                        e === n.CLOSE && this.immediateMode.edges.push([ this.immediateMode.vertices.length - 1, 0 ]), 
                        i.Geometry.prototype._edgesToVertices.call(this.immediateMode), this._drawStrokeImmediateMode();
                    }
                    if (this._doFill && this.immediateMode.shapeMode !== n.LINES) {
                        if (this.isBezier || this.isQuadratic || this.isCurve) {
                            var l = [ new Float32Array(this._vToNArray(this.immediateMode.vertices)) ], u = this._triangulate(l);
                            this.immediateMode.vertices = [];
                            for (var c = 0, p = u.length; c < p; c += 3) this.vertex(u[c], u[c + 1], u[c + 2]);
                        }
                        this._drawFillImmediateMode(e, t, r, o, s, a);
                    }
                }
                return this.immediateMode.vertices.length = 0, this.immediateMode.vertexColors.length = 0, 
                this.immediateMode.uvCoords.length = 0, this.isImmediateDrawing = !1, this.isBezier = !1, 
                this.isQuadratic = !1, this.isCurve = !1, this.immediateMode._bezierVertex.length = 0, 
                this.immediateMode._quadraticVertex.length = 0, this.immediateMode._curveVertex.length = 0, 
                this;
            }, i.RendererGL.prototype._drawFillImmediateMode = function(e, t, r, i, o, s) {
                var a = this.GL, h = this._getImmediateFillShader();
                if (this._setFillUniforms(h), h.attributes.aPosition && (this._bindBuffer(this.immediateMode.vertexBuffer, a.ARRAY_BUFFER, this._vToNArray(this.immediateMode.vertices), Float32Array, a.DYNAMIC_DRAW), 
                h.enableAttrib(h.attributes.aPosition.location, 3, a.FLOAT, !1, 0, 0)), this.drawMode === n.FILL && h.attributes.aVertexColor && (this._bindBuffer(this.immediateMode.colorBuffer, a.ARRAY_BUFFER, this.immediateMode.vertexColors, Float32Array, a.DYNAMIC_DRAW), 
                h.enableAttrib(h.attributes.aVertexColor.location, 4, a.FLOAT, !1, 0, 0)), this.drawMode === n.TEXTURE && h.attributes.aTexCoord && (this._bindBuffer(this.immediateMode.uvBuffer, a.ARRAY_BUFFER, this.immediateMode.uvCoords, Float32Array, a.DYNAMIC_DRAW), 
                h.enableAttrib(h.attributes.aTexCoord.location, 2, a.FLOAT, !1, 0, 0)), this.drawMode === n.FILL || this.drawMode === n.TEXTURE) switch (this.immediateMode.shapeMode) {
                  case n.LINE_STRIP:
                  case n.LINES:
                  case n.TRIANGLES:
                    this.immediateMode.shapeMode = this.isBezier || this.isQuadratic || this.isCurve || this.immediateMode.shapeMode === n.TRIANGLES ? n.TRIANGLES : n.TRIANGLE_FAN;
                } else switch (this.immediateMode.shapeMode) {
                  case n.LINE_STRIP:
                  case n.LINES:
                    this.immediateMode.shapeMode = n.LINE_LOOP;
                }
                if (this.immediateMode.shapeMode === n.QUADS || this.immediateMode.shapeMode === n.QUAD_STRIP) throw new Error("sorry, " + this.immediateMode.shapeMode + " not yet implemented in webgl mode.");
                this._applyColorBlend(this.curFillColor), a.enable(a.BLEND), a.drawArrays(this.immediateMode.shapeMode, 0, this.immediateMode.vertices.length), 
                this._pixelsState._pixelsDirty = !0, h.unbindShader();
            }, i.RendererGL.prototype._drawStrokeImmediateMode = function() {
                var e = this.GL, t = this._getImmediateStrokeShader();
                this._setStrokeUniforms(t), t.attributes.aPosition && (this._bindBuffer(this.immediateMode.lineVertexBuffer, e.ARRAY_BUFFER, this._flatten(this.immediateMode.lineVertices), Float32Array, e.STATIC_DRAW), 
                t.enableAttrib(t.attributes.aPosition.location, 3, e.FLOAT, !1, 0, 0)), t.attributes.aDirection && (this._bindBuffer(this.immediateMode.lineNormalBuffer, e.ARRAY_BUFFER, this._flatten(this.immediateMode.lineNormals), Float32Array, e.STATIC_DRAW), 
                t.enableAttrib(t.attributes.aDirection.location, 4, e.FLOAT, !1, 0, 0)), this._applyColorBlend(this.curStrokeColor), 
                e.drawArrays(e.TRIANGLES, 0, this.immediateMode.lineVertices.length), this._pixelsState._pixelsDirty = !0, 
                t.unbindShader();
            }, t.exports = i.RendererGL;
        }, {
            "../core/constants": 17,
            "../core/main": 23
        } ],
        72: [ function(e, t, r) {
            "use strict";
            var i = e("../core/main"), n = 0;
            i.RendererGL.prototype._initBufferDefaults = function(e) {
                if (this._freeBuffers(e), 1e3 < ++n) {
                    var t = Object.keys(this.gHash)[0];
                    delete this.gHash[t], n--;
                }
                this.gHash[e] = {};
            }, i.RendererGL.prototype._freeBuffers = function(e) {
                var t = this.gHash[e];
                if (t) {
                    delete this.gHash[e], n--;
                    var r = this.GL;
                    t.vertexBuffer && r.deleteBuffer(t.vertexBuffer), t.normalBuffer && r.deleteBuffer(t.normalBuffer), 
                    t.lineNormalBuffer && r.deleteBuffer(t.lineNormalBuffer), t.uvBuffer && r.deleteBuffer(t.uvBuffer), 
                    t.indexBuffer && r.deleteBuffer(t.indexBuffer), t.lineVertexBuffer && r.deleteBuffer(t.lineVertexBuffer);
                }
            }, i.RendererGL.prototype.createBuffers = function(e, t) {
                var r = this.GL;
                this._initBufferDefaults(e);
                var i = this.gHash[e];
                i.numberOfItems = 3 * t.faces.length, i.lineVertexCount = t.lineVertices.length;
                var n = this._getRetainedStrokeShader();
                n.bindShader(), n.attributes.aPosition && (i.lineVertexBuffer = r.createBuffer(), 
                this._bindBuffer(i.lineVertexBuffer, r.ARRAY_BUFFER, this._flatten(t.lineVertices), Float32Array, r.STATIC_DRAW), 
                n.enableAttrib(n.attributes.aPosition.location, 3, r.FLOAT, !1, 0, 0)), n.attributes.aDirection && (i.lineNormalBuffer = r.createBuffer(), 
                this._bindBuffer(i.lineNormalBuffer, r.ARRAY_BUFFER, this._flatten(t.lineNormals), Float32Array, r.STATIC_DRAW), 
                n.enableAttrib(n.attributes.aDirection.location, 4, r.FLOAT, !1, 0, 0)), n.unbindShader();
                var o = this._getRetainedFillShader();
                return o.bindShader(), o.attributes.aPosition && (i.vertexBuffer = r.createBuffer(), 
                this._bindBuffer(i.vertexBuffer, r.ARRAY_BUFFER, this._vToNArray(t.vertices), Float32Array, r.STATIC_DRAW), 
                o.enableAttrib(o.attributes.aPosition.location, 3, r.FLOAT, !1, 0, 0)), i.indexBuffer = r.createBuffer(), 
                this._bindBuffer(i.indexBuffer, r.ELEMENT_ARRAY_BUFFER, this._flatten(t.faces), Uint16Array, r.STATIC_DRAW), 
                o.attributes.aNormal && (i.normalBuffer = r.createBuffer(), this._bindBuffer(i.normalBuffer, r.ARRAY_BUFFER, this._vToNArray(t.vertexNormals), Float32Array, r.STATIC_DRAW), 
                o.enableAttrib(o.attributes.aNormal.location, 3, r.FLOAT, !1, 0, 0)), o.attributes.aTexCoord && (i.uvBuffer = r.createBuffer(), 
                this._bindBuffer(i.uvBuffer, r.ARRAY_BUFFER, this._flatten(t.uvs), Float32Array, r.STATIC_DRAW), 
                o.enableAttrib(o.attributes.aTexCoord.location, 2, r.FLOAT, !1, 0, 0)), o.unbindShader(), 
                i;
            }, i.RendererGL.prototype.drawBuffers = function(e) {
                var t = this.GL, r = this.gHash[e];
                if (this._doStroke && 0 < r.lineVertexCount) {
                    var i = this._getRetainedStrokeShader();
                    this._setStrokeUniforms(i), r.lineVertexBuffer && (this._bindBuffer(r.lineVertexBuffer, t.ARRAY_BUFFER), 
                    i.enableAttrib(i.attributes.aPosition.location, 3, t.FLOAT, !1, 0, 0)), r.lineNormalBuffer && (this._bindBuffer(r.lineNormalBuffer, t.ARRAY_BUFFER), 
                    i.enableAttrib(i.attributes.aDirection.location, 4, t.FLOAT, !1, 0, 0)), this._applyColorBlend(this.curStrokeColor), 
                    this._drawArrays(t.TRIANGLES, e), i.unbindShader();
                }
                if (!1 !== this._doFill) {
                    var n = this._getRetainedFillShader();
                    this._setFillUniforms(n), r.vertexBuffer && (this._bindBuffer(r.vertexBuffer, t.ARRAY_BUFFER), 
                    n.enableAttrib(n.attributes.aPosition.location, 3, t.FLOAT, !1, 0, 0)), r.indexBuffer && this._bindBuffer(r.indexBuffer, t.ELEMENT_ARRAY_BUFFER), 
                    r.normalBuffer && (this._bindBuffer(r.normalBuffer, t.ARRAY_BUFFER), n.enableAttrib(n.attributes.aNormal.location, 3, t.FLOAT, !1, 0, 0)), 
                    r.uvBuffer && (this._bindBuffer(r.uvBuffer, t.ARRAY_BUFFER), n.enableAttrib(n.attributes.aTexCoord.location, 2, t.FLOAT, !1, 0, 0)), 
                    this._applyColorBlend(this.curFillColor), this._drawElements(t.TRIANGLES, e), n.unbindShader();
                }
                return this;
            }, i.RendererGL.prototype.drawBuffersScaled = function(e, t, r, i) {
                var n = this.uMVMatrix.copy();
                try {
                    this.uMVMatrix.scale(t, r, i), this.drawBuffers(e);
                } finally {
                    this.uMVMatrix = n;
                }
            }, i.RendererGL.prototype._drawArrays = function(e, t) {
                return this.GL.drawArrays(e, 0, this.gHash[t].lineVertexCount), this._pixelsState._pixelsDirty = !0, 
                this;
            }, i.RendererGL.prototype._drawElements = function(e, t) {
                this.GL.drawElements(e, this.gHash[t].numberOfItems, this.GL.UNSIGNED_SHORT, 0), 
                this._pixelsState._pixelsDirty = !0;
            }, i.RendererGL.prototype._drawPoints = function(e, t) {
                var r = this.GL, i = this._getImmediatePointShader();
                this._setPointUniforms(i), this._bindBuffer(t, r.ARRAY_BUFFER, this._vToNArray(e), Float32Array, r.STATIC_DRAW), 
                i.enableAttrib(i.attributes.aPosition.location, 3, r.FLOAT, !1, 0, 0), r.drawArrays(r.Points, 0, e.length), 
                i.unbindShader(), this._pixelsState._pixelsDirty = !0;
            }, t.exports = i.RendererGL;
        }, {
            "../core/main": 23
        } ],
        73: [ function(e, t, r) {
            "use strict";
            var i = e("../core/main"), n = e("../core/constants"), o = e("libtess");
            e("./p5.Shader"), e("./p5.Camera"), e("../core/p5.Renderer"), e("./p5.Matrix");
            var s = "attribute vec3 aPosition;\nattribute vec3 aNormal;\nattribute vec2 aTexCoord;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\n\nvarying vec3 vVertexNormal;\nvarying highp vec2 vVertTexCoord;\n\nvoid main(void) {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vVertexNormal = normalize(vec3( uNormalMatrix * aNormal ));\n  vVertTexCoord = aTexCoord;\n}\n";
            i.RendererGL = function(e, t, r, o) {
                return i.Renderer.call(this, e, t, r), this._setAttributeDefaults(t), this._initContext(), 
                this.isP3D = !0, this.GL = this.drawingContext, this._enableLighting = !1, this.ambientLightColors = [], 
                this.directionalLightDirections = [], this.directionalLightColors = [], this.pointLightPositions = [], 
                this.pointLightColors = [], this.curFillColor = [ 1, 1, 1, 1 ], this.curStrokeColor = [ 0, 0, 0, 1 ], 
                this.curBlendMode = n.BLEND, this.blendExt = this.GL.getExtension("EXT_blend_minmax"), 
                this._useSpecularMaterial = !1, this._useNormalMaterial = !1, this._useShininess = 1, 
                this.uMVMatrix = new i.Matrix(), this.uPMatrix = new i.Matrix(), this.uNMatrix = new i.Matrix("mat3"), 
                this._curCamera = new i.Camera(this), this._curCamera._computeCameraDefaultSettings(), 
                this._curCamera._setDefaultCamera(), this.gHash = {}, this._defaultLightShader = void 0, 
                this._defaultImmediateModeShader = void 0, this._defaultNormalShader = void 0, this._defaultColorShader = void 0, 
                this._defaultPointShader = void 0, this._pointVertexBuffer = this.GL.createBuffer(), 
                this.userFillShader = void 0, this.userStrokeShader = void 0, this.userPointShader = void 0, 
                this.isImmediateDrawing = !1, this.immediateMode = {}, this.pointSize = 5, this.curStrokeWeight = 1, 
                this.textures = [], this.textureMode = n.IMAGE, this.textureWrapX = n.CLAMP, this.textureWrapY = n.CLAMP, 
                this._tex = null, this._curveTightness = 6, this._lookUpTableBezier = [], this._lookUpTableQuadratic = [], 
                this._lutBezierDetail = 0, this._lutQuadraticDetail = 0, this._tessy = this._initTessy(), 
                this.fontInfos = {}, this;
            }, i.RendererGL.prototype = Object.create(i.Renderer.prototype), i.RendererGL.prototype._setAttributeDefaults = function(e) {
                var t = {
                    alpha: !1,
                    depth: !0,
                    stencil: !0,
                    antialias: !1,
                    premultipliedAlpha: !1,
                    preserveDrawingBuffer: !0,
                    perPixelLighting: !1
                };
                null === e._glAttributes ? e._glAttributes = t : e._glAttributes = Object.assign(t, e._glAttributes);
            }, i.RendererGL.prototype._initContext = function() {
                try {
                    if (this.drawingContext = this.canvas.getContext("webgl", this._pInst._glAttributes) || this.canvas.getContext("experimental-webgl", this._pInst._glAttributes), 
                    null === this.drawingContext) throw new Error("Error creating webgl context");
                    console.log("p5.RendererGL: enabled webgl context");
                    var e = this.drawingContext;
                    e.enable(e.DEPTH_TEST), e.depthFunc(e.LEQUAL), e.viewport(0, 0, e.drawingBufferWidth, e.drawingBufferHeight), 
                    this._viewport = this.drawingContext.getParameter(this.drawingContext.VIEWPORT);
                } catch (e) {
                    throw e;
                }
            }, i.RendererGL.prototype._resetContext = function(e, t) {
                var r = this.width, n = this.height, o = this.canvas.id, s = this.canvas;
                s && s.parentNode.removeChild(s), (s = document.createElement("canvas")).id = o, 
                this._pInst._userNode ? this._pInst._userNode.appendChild(s) : document.body.appendChild(s), 
                this._pInst.canvas = s;
                var a = new i.RendererGL(this._pInst.canvas, this._pInst, !0);
                this._pInst._setProperty("_renderer", a), a.resize(r, n), a._applyDefaults(), this._pInst._elements.push(a), 
                "function" == typeof t && setTimeout(function() {
                    t.apply(window._renderer, e);
                }, 0);
            }, i.prototype.setAttributes = function(e, t) {
                var r = !0;
                if (void 0 !== t ? (null === this._glAttributes && (this._glAttributes = {}), this._glAttributes[e] !== t && (this._glAttributes[e] = t, 
                r = !1)) : e instanceof Object && this._glAttributes !== e && (this._glAttributes = e, 
                r = !1), this._renderer.isP3D && !r) {
                    if (!this._setupDone) for (var i in this._renderer.gHash) if (this._renderer.gHash.hasOwnProperty(i)) return void console.error("Sorry, Could not set the attributes, you need to call setAttributes() before calling the other drawing methods in setup()");
                    this.push(), this._renderer._resetContext(), this.pop(), this._renderer._curCamera && (this._renderer._curCamera._renderer = this._renderer);
                }
            }, i.RendererGL.prototype._update = function() {
                this.uMVMatrix.set(this._curCamera.cameraMatrix.mat4[0], this._curCamera.cameraMatrix.mat4[1], this._curCamera.cameraMatrix.mat4[2], this._curCamera.cameraMatrix.mat4[3], this._curCamera.cameraMatrix.mat4[4], this._curCamera.cameraMatrix.mat4[5], this._curCamera.cameraMatrix.mat4[6], this._curCamera.cameraMatrix.mat4[7], this._curCamera.cameraMatrix.mat4[8], this._curCamera.cameraMatrix.mat4[9], this._curCamera.cameraMatrix.mat4[10], this._curCamera.cameraMatrix.mat4[11], this._curCamera.cameraMatrix.mat4[12], this._curCamera.cameraMatrix.mat4[13], this._curCamera.cameraMatrix.mat4[14], this._curCamera.cameraMatrix.mat4[15]), 
                this.ambientLightColors.length = 0, this.directionalLightDirections.length = 0, 
                this.directionalLightColors.length = 0, this.pointLightPositions.length = 0, this.pointLightColors.length = 0, 
                this._enableLighting = !1;
            }, i.RendererGL.prototype.background = function() {
                var e = this._pInst.color.apply(this._pInst, arguments), t = e.levels[0] / 255, r = e.levels[1] / 255, i = e.levels[2] / 255, n = e.levels[3] / 255;
                this.GL.clearColor(t, r, i, n), this.GL.depthMask(!0), this.GL.clear(this.GL.COLOR_BUFFER_BIT | this.GL.DEPTH_BUFFER_BIT), 
                this._pixelsState._pixelsDirty = !0;
            }, i.RendererGL.prototype.fill = function(e, t, r, o) {
                var s = i.prototype.color.apply(this._pInst, arguments);
                this.curFillColor = s._array, this.drawMode = n.FILL, this._useNormalMaterial = !1, 
                this._tex = null;
            }, i.RendererGL.prototype.stroke = function(e, t, r, n) {
                n = 255;
                var o = i.prototype.color.apply(this._pInst, arguments);
                this.curStrokeColor = o._array;
            }, i.RendererGL.prototype.strokeCap = function(e) {
                console.error("Sorry, strokeCap() is not yet implemented in WEBGL mode");
            }, i.RendererGL.prototype.blendMode = function(e) {
                e === n.DARKEST || e === n.LIGHTEST || e === n.ADD || e === n.BLEND || e === n.SUBTRACT || e === n.SCREEN || e === n.EXCLUSION || e === n.REPLACE || e === n.MULTIPLY ? this.curBlendMode = e : e !== n.BURN && e !== n.OVERLAY && e !== n.HARD_LIGHT && e !== n.SOFT_LIGHT && e !== n.DODGE || console.warn("BURN, OVERLAY, HARD_LIGHT, SOFT_LIGHT, and DODGE only work for blendMode in 2D mode.");
            }, i.RendererGL.prototype.strokeWeight = function(e) {
                this.curStrokeWeight !== e && (this.pointSize = e, this.curStrokeWeight = e);
            }, i.RendererGL.prototype._getPixel = function(e, t) {
                var r, i, n = this._pixelsState;
                return i = n._pixelsDirty ? (r = new Uint8Array(4), this.drawingContext.readPixels(e, t, 1, 1, this.drawingContext.RGBA, this.drawingContext.UNSIGNED_BYTE, r), 
                0) : (r = n.pixels, 4 * (Math.floor(e) + Math.floor(t) * this.canvas.width)), [ r[i + 0], r[i + 1], r[i + 2], r[i + 3] ];
            }, i.RendererGL.prototype.loadPixels = function() {
                var e = this._pixelsState;
                if (e._pixelsDirty) if (!(e._pixelsDirty = !1) === this._pInst._glAttributes.preserveDrawingBuffer) {
                    var t = e.pixels, r = this.GL.drawingBufferWidth * this.GL.drawingBufferHeight * 4;
                    t instanceof Uint8Array && t.length === r || (t = new Uint8Array(r), this._pixelsState._setProperty("pixels", t));
                    var i = this._pInst._pixelDensity;
                    this.GL.readPixels(0, 0, this.width * i, this.height * i, this.GL.RGBA, this.GL.UNSIGNED_BYTE, t);
                } else console.log("loadPixels only works in WebGL when preserveDrawingBuffer is true.");
            }, i.RendererGL.prototype.geometryInHash = function(e) {
                return void 0 !== this.gHash[e];
            }, i.RendererGL.prototype.resize = function(e, t) {
                i.Renderer.prototype.resize.call(this, e, t), this.GL.viewport(0, 0, this.GL.drawingBufferWidth, this.GL.drawingBufferHeight), 
                this._viewport = this.GL.getParameter(this.GL.VIEWPORT), this._curCamera._resize();
                var r = this._pixelsState;
                r._pixelsDirty = !0, void 0 !== r.pixels && r._setProperty("pixels", new Uint8Array(this.GL.drawingBufferWidth * this.GL.drawingBufferHeight * 4));
            }, i.RendererGL.prototype.clear = function() {
                var e = arguments[0] || 0, t = arguments[1] || 0, r = arguments[2] || 0, i = arguments[3] || 0;
                this.GL.clearColor(e, t, r, i), this.GL.clear(this.GL.COLOR_BUFFER_BIT | this.GL.DEPTH_BUFFER_BIT), 
                this._pixelsState._pixelsDirty = !0;
            }, i.RendererGL.prototype.applyMatrix = function(e, t, r, n, o, s) {
                16 === arguments.length ? i.Matrix.prototype.apply.apply(this.uMVMatrix, arguments) : this.uMVMatrix.apply([ e, t, 0, 0, r, n, 0, 0, 0, 0, 1, 0, o, s, 0, 1 ]);
            }, i.RendererGL.prototype.translate = function(e, t, r) {
                return e instanceof i.Vector && (r = e.z, t = e.y, e = e.x), this.uMVMatrix.translate([ e, t, r ]), 
                this;
            }, i.RendererGL.prototype.scale = function(e, t, r) {
                return this.uMVMatrix.scale(e, t, r), this;
            }, i.RendererGL.prototype.rotate = function(e, t) {
                return void 0 === t ? this.rotateZ(e) : (i.Matrix.prototype.rotate.apply(this.uMVMatrix, arguments), 
                this);
            }, i.RendererGL.prototype.rotateX = function(e) {
                return this.rotate(e, 1, 0, 0), this;
            }, i.RendererGL.prototype.rotateY = function(e) {
                return this.rotate(e, 0, 1, 0), this;
            }, i.RendererGL.prototype.rotateZ = function(e) {
                return this.rotate(e, 0, 0, 1), this;
            }, i.RendererGL.prototype.push = function() {
                var e = i.Renderer.prototype.push.apply(this), t = e.properties;
                return t.uMVMatrix = this.uMVMatrix.copy(), t.uPMatrix = this.uPMatrix.copy(), t._curCamera = this._curCamera, 
                this._curCamera = this._curCamera.copy(), t.ambientLightColors = this.ambientLightColors.slice(), 
                t.directionalLightDirections = this.directionalLightDirections.slice(), t.directionalLightColors = this.directionalLightColors.slice(), 
                t.pointLightPositions = this.pointLightPositions.slice(), t.pointLightColors = this.pointLightColors.slice(), 
                t.userFillShader = this.userFillShader, t.userStrokeShader = this.userStrokeShader, 
                t.userPointShader = this.userPointShader, t.pointSize = this.pointSize, t.curStrokeWeight = this.curStrokeWeight, 
                t.curStrokeColor = this.curStrokeColor, t.curFillColor = this.curFillColor, t._useSpecularMaterial = this._useSpecularMaterial, 
                t._useShininess = this._useShininess, t._enableLighting = this._enableLighting, 
                t._useNormalMaterial = this._useNormalMaterial, t._tex = this._tex, t.drawMode = this.drawMode, 
                e;
            }, i.RendererGL.prototype.resetMatrix = function() {
                return this.uMVMatrix = i.Matrix.identity(this._pInst), this;
            }, i.RendererGL.prototype._getImmediateStrokeShader = function() {
                var e = this.userStrokeShader;
                return e && e.isStrokeShader() ? e : this._getLineShader();
            }, i.RendererGL.prototype._getRetainedStrokeShader = i.RendererGL.prototype._getImmediateStrokeShader, 
            i.RendererGL.prototype._getImmediateFillShader = function() {
                if (this._useNormalMaterial) return this._getNormalShader();
                var e = this.userFillShader;
                if (this._enableLighting) {
                    if (!e || !e.isLightShader()) return this._getLightShader();
                } else if (this._tex) {
                    if (!e || !e.isTextureShader()) return this._getLightShader();
                } else if (!e) return this._getImmediateModeShader();
                return e;
            }, i.RendererGL.prototype._getRetainedFillShader = function() {
                if (this._useNormalMaterial) return this._getNormalShader();
                var e = this.userFillShader;
                if (this._enableLighting) {
                    if (!e || !e.isLightShader()) return this._getLightShader();
                } else if (this._tex) {
                    if (!e || !e.isTextureShader()) return this._getLightShader();
                } else if (!e) return this._getColorShader();
                return e;
            }, i.RendererGL.prototype._getImmediatePointShader = function() {
                var e = this.userPointShader;
                return e && e.isPointShader() ? e : this._getPointShader();
            }, i.RendererGL.prototype._getRetainedLineShader = i.RendererGL.prototype._getImmediateLineShader, 
            i.RendererGL.prototype._getLightShader = function() {
                return this._defaultLightShader || (this._pInst._glAttributes.perPixelLighting ? this._defaultLightShader = new i.Shader(this, "precision mediump float;\n\nattribute vec3 aPosition;\nattribute vec3 aNormal;\nattribute vec2 aTexCoord;\n\nuniform vec3 uAmbientColor[8];\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\nuniform int uAmbientLightCount;\n\nvarying vec3 vNormal;\nvarying vec2 vTexCoord;\nvarying vec3 vViewPosition;\nvarying vec3 vAmbientColor;\n\nvoid main(void){\n\n  vec4 viewModelPosition = uModelViewMatrix * vec4(aPosition, 1.0);\n\n  // Pass varyings to fragment shader\n  vViewPosition = viewModelPosition.xyz;\n  gl_Position = uProjectionMatrix * viewModelPosition;  \n\n  vNormal = normalize(uNormalMatrix * normalize(aNormal));\n  vTexCoord = aTexCoord;\n\n  vAmbientColor = vec3(0.0);\n  for (int i = 0; i < 8; i++) {\n    if (uAmbientLightCount == i) break;\n    vAmbientColor += uAmbientColor[i];\n  }\n}\n", "precision mediump float;\n\n//uniform mat4 uModelViewMatrix;\nuniform mat4 uViewMatrix;\n\nuniform vec4 uMaterialColor;\nuniform sampler2D uSampler;\nuniform bool isTexture;\nuniform bool uUseLighting;\n\nuniform vec3 uLightingDirection[8];\nuniform vec3 uDirectionalColor[8];\nuniform vec3 uPointLightLocation[8];\nuniform vec3 uPointLightColor[8];\nuniform bool uSpecular;\nuniform float uShininess;\n\nuniform int uDirectionalLightCount;\nuniform int uPointLightCount;\n\nvarying vec3 vNormal;\nvarying vec2 vTexCoord;\nvarying vec3 vViewPosition;\nvarying vec3 vAmbientColor;\n\nvec3 V;\nvec3 N;\n\nconst float specularFactor = 2.0;\nconst float diffuseFactor = 0.73;\n\nstruct LightResult {\n\tfloat specular;\n\tfloat diffuse;\n};\n\nfloat phongSpecular(\n  vec3 lightDirection,\n  vec3 viewDirection,\n  vec3 surfaceNormal,\n  float shininess) {\n\n  vec3 R = normalize(reflect(-lightDirection, surfaceNormal));  \n  return pow(max(0.0, dot(R, viewDirection)), shininess);\n}\n\nfloat lambertDiffuse(\n  vec3 lightDirection,\n  vec3 surfaceNormal) {\n  return max(0.0, dot(-lightDirection, surfaceNormal));\n}\n\nLightResult light(vec3 lightVector) {\n\n  vec3 L = normalize(lightVector);\n\n  //compute our diffuse & specular terms\n  LightResult lr;\n  if (uSpecular)\n    lr.specular = phongSpecular(L, V, N, uShininess);\n  lr.diffuse = lambertDiffuse(L, N);\n  return lr;\n}\n\nvoid main(void) {\n\n  V = normalize(vViewPosition);\n  N = vNormal;\n\n  vec3 diffuse = vec3(0.0);\n  float specular = 0.0;\n\n  for (int j = 0; j < 8; j++) {\n    if (uDirectionalLightCount == j) break;\n\n    LightResult result = light(uLightingDirection[j]);\n    diffuse += result.diffuse * uDirectionalColor[j];\n    specular += result.specular;\n  }\n\n  for (int k = 0; k < 8; k++) {\n    if (uPointLightCount == k) break;\n\n    vec3 lightPosition = (uViewMatrix * vec4(uPointLightLocation[k], 1.0)).xyz;\n    vec3 lightVector = vViewPosition - lightPosition;\n\t\n    //calculate attenuation\n    float lightDistance = length(lightVector);\n    float falloff = 500.0 / (lightDistance + 500.0);\n\n    LightResult result = light(lightVector);\n    diffuse += result.diffuse * falloff * uPointLightColor[k];\n    specular += result.specular * falloff;\n  }\n\n  gl_FragColor = isTexture ? texture2D(uSampler, vTexCoord) : uMaterialColor;\n  gl_FragColor.rgb = gl_FragColor.rgb * (diffuse * diffuseFactor + vAmbientColor) + specular * specularFactor;\n}") : this._defaultLightShader = new i.Shader(this, "attribute vec3 aPosition;\nattribute vec3 aNormal;\nattribute vec2 aTexCoord;\n\nuniform mat4 uViewMatrix;\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\nuniform int uAmbientLightCount;\nuniform int uDirectionalLightCount;\nuniform int uPointLightCount;\n\nuniform vec3 uAmbientColor[8];\nuniform vec3 uLightingDirection[8];\nuniform vec3 uDirectionalColor[8];\nuniform vec3 uPointLightLocation[8];\nuniform vec3 uPointLightColor[8];\nuniform bool uSpecular;\nuniform float uShininess;\n\nvarying vec3 vVertexNormal;\nvarying vec2 vVertTexCoord;\nvarying vec3 vLightWeighting;\n\nvoid main(void){\n\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n\n  vec3 vertexNormal = normalize(vec3( uNormalMatrix * aNormal ));\n  vVertexNormal = vertexNormal;\n  vVertTexCoord = aTexCoord;\n\n  vec4 mvPosition = uModelViewMatrix * vec4(aPosition, 1.0);\n  vec3 eyeDirection = normalize(-mvPosition.xyz);\n\n  float specularFactor = 2.0;\n  float diffuseFactor = 0.3;\n\n  vec3 ambientLightFactor = vec3(0.0);\n\n  for (int i = 0; i < 8; i++) {\n    if (uAmbientLightCount == i) break;\n    ambientLightFactor += uAmbientColor[i];\n  }\n\n\n  vec3 directionalLightFactor = vec3(0.0);\n\n  for (int j = 0; j < 8; j++) {\n    if (uDirectionalLightCount == j) break;\n    vec3 dir = uLightingDirection[j];\n    float directionalLightWeighting = max(dot(vertexNormal, -dir), 0.0);\n    directionalLightFactor += uDirectionalColor[j] * directionalLightWeighting;\n  }\n\n\n  vec3 pointLightFactor = vec3(0.0);\n\n  for (int k = 0; k < 8; k++) {\n    if (uPointLightCount == k) break;\n    vec3 loc = (uViewMatrix * vec4(uPointLightLocation[k], 1.0)).xyz;\n    vec3 lightDirection = normalize(loc - mvPosition.xyz);\n\n    float directionalLightWeighting = max(dot(vertexNormal, lightDirection), 0.0);\n\n    float specularLightWeighting = 0.0;\n    if (uSpecular ){\n      vec3 reflectionDirection = reflect(-lightDirection, vertexNormal);\n      specularLightWeighting = pow(max(dot(reflectionDirection, eyeDirection), 0.0), uShininess);\n    }\n\n    pointLightFactor += uPointLightColor[k] * (specularFactor * specularLightWeighting\n      + directionalLightWeighting * diffuseFactor);\n  }\n\n  vLightWeighting =  ambientLightFactor + directionalLightFactor + pointLightFactor;\n}\n", "precision mediump float;\n\nuniform vec4 uMaterialColor;\nuniform sampler2D uSampler;\nuniform bool isTexture;\nuniform bool uUseLighting;\n\nvarying vec3 vLightWeighting;\nvarying highp vec2 vVertTexCoord;\n\nvoid main(void) {\n  gl_FragColor = isTexture ? texture2D(uSampler, vVertTexCoord) : uMaterialColor;\n  if (uUseLighting)\n    gl_FragColor.rgb *= vLightWeighting;\n}")), 
                this._defaultLightShader;
            }, i.RendererGL.prototype._getImmediateModeShader = function() {
                return this._defaultImmediateModeShader || (this._defaultImmediateModeShader = new i.Shader(this, "attribute vec3 aPosition;\nattribute vec4 aVertexColor;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform float uResolution;\nuniform float uPointSize;\n\nvarying vec4 vColor;\nvoid main(void) {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vColor = aVertexColor;\n  gl_PointSize = uPointSize;\n}\n", "precision mediump float;\nvarying vec4 vColor;\nvoid main(void) {\n  gl_FragColor = vColor;\n}")), 
                this._defaultImmediateModeShader;
            }, i.RendererGL.prototype._getNormalShader = function() {
                return this._defaultNormalShader || (this._defaultNormalShader = new i.Shader(this, s, "precision mediump float;\nvarying vec3 vVertexNormal;\nvoid main(void) {\n  gl_FragColor = vec4(vVertexNormal, 1.0);\n}")), 
                this._defaultNormalShader;
            }, i.RendererGL.prototype._getColorShader = function() {
                return this._defaultColorShader || (this._defaultColorShader = new i.Shader(this, s, "precision mediump float;\nvarying vec3 vVertexNormal;\nuniform vec4 uMaterialColor;\nvoid main(void) {\n  gl_FragColor = uMaterialColor;\n}")), 
                this._defaultColorShader;
            }, i.RendererGL.prototype._getPointShader = function() {
                return this._defaultPointShader || (this._defaultPointShader = new i.Shader(this, "attribute vec3 aPosition;\nuniform float uPointSize;\nvarying float vStrokeWeight;\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nvoid main() {\n\tvec4 positionVec4 =  vec4(aPosition, 1.0);\n\tgl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n\tgl_PointSize = uPointSize;\n\tvStrokeWeight = uPointSize;\n}", "precision mediump float;\nprecision mediump int;\nuniform vec4 uMaterialColor;\nvarying float vStrokeWeight;\n\nvoid main(){\n\tfloat mask = 0.0;\n\n\t// make a circular mask using the gl_PointCoord (goes from 0 - 1 on a point)\n    // might be able to get a nicer edge on big strokeweights with smoothstep but slightly less performant\n\n\tmask = step(0.98, length(gl_PointCoord * 2.0 - 1.0));\n\n\t// if strokeWeight is 1 or less lets just draw a square\n\t// this prevents weird artifacting from carving circles when our points are really small\n\t// if strokeWeight is larger than 1, we just use it as is\n\n\tmask = mix(0.0, mask, clamp(floor(vStrokeWeight - 0.5),0.0,1.0));\n\n\t// throw away the borders of the mask\n    // otherwise we get weird alpha blending issues\n\n\tif(mask > 0.98){\n      discard;\n  \t}\n\n  \tgl_FragColor = vec4(uMaterialColor.rgb * (1.0 - mask), uMaterialColor.a) ;\n}")), 
                this._defaultPointShader;
            }, i.RendererGL.prototype._getLineShader = function() {
                return this._defaultLineShader || (this._defaultLineShader = new i.Shader(this, "/*\n  Part of the Processing project - http://processing.org\n  Copyright (c) 2012-15 The Processing Foundation\n  Copyright (c) 2004-12 Ben Fry and Casey Reas\n  Copyright (c) 2001-04 Massachusetts Institute of Technology\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation, version 2.1.\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n*/\n\n#define PROCESSING_LINE_SHADER\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform float uStrokeWeight;\n\nuniform vec4 uViewport;\n\n// using a scale <1 moves the lines towards the camera\n// in order to prevent popping effects due to half of\n// the line disappearing behind the geometry faces.\nvec3 scale = vec3(0.9995);\n\nattribute vec4 aPosition;\nattribute vec4 aDirection;\n  \nvoid main() {\n  vec4 posp = uModelViewMatrix * aPosition;\n  vec4 posq = uModelViewMatrix * (aPosition + vec4(aDirection.xyz, 0));\n\n  // Moving vertices slightly toward the camera\n  // to avoid depth-fighting with the fill triangles.\n  // Discussed here:\n  // http://www.opengl.org/discussion_boards/ubbthreads.php?ubb=showflat&Number=252848  \n  posp.xyz = posp.xyz * scale;\n  posq.xyz = posq.xyz * scale;\n\n  vec4 p = uProjectionMatrix * posp;\n  vec4 q = uProjectionMatrix * posq;\n\n  // formula to convert from clip space (range -1..1) to screen space (range 0..[width or height])\n  // screen_p = (p.xy/p.w + <1,1>) * 0.5 * uViewport.zw\n\n  // prevent division by W by transforming the tangent formula (div by 0 causes\n  // the line to disappear, see https://github.com/processing/processing/issues/5183)\n  // t = screen_q - screen_p\n  //\n  // tangent is normalized and we don't care which aDirection it points to (+-)\n  // t = +- normalize( screen_q - screen_p )\n  // t = +- normalize( (q.xy/q.w+<1,1>)*0.5*uViewport.zw - (p.xy/p.w+<1,1>)*0.5*uViewport.zw )\n  //\n  // extract common factor, <1,1> - <1,1> cancels out\n  // t = +- normalize( (q.xy/q.w - p.xy/p.w) * 0.5 * uViewport.zw )\n  //\n  // convert to common divisor\n  // t = +- normalize( ((q.xy*p.w - p.xy*q.w) / (p.w*q.w)) * 0.5 * uViewport.zw )\n  //\n  // remove the common scalar divisor/factor, not needed due to normalize and +-\n  // (keep uViewport - can't remove because it has different components for x and y\n  //  and corrects for aspect ratio, see https://github.com/processing/processing/issues/5181)\n  // t = +- normalize( (q.xy*p.w - p.xy*q.w) * uViewport.zw )\n\n  vec2 tangent = normalize((q.xy*p.w - p.xy*q.w) * uViewport.zw);\n\n  // flip tangent to normal (it's already normalized)\n  vec2 normal = vec2(-tangent.y, tangent.x);\n\n  float thickness = aDirection.w * uStrokeWeight;\n  vec2 offset = normal * thickness / 2.0;\n\n  // Perspective ---\n  // convert from world to clip by multiplying with projection scaling factor\n  // to get the right thickness (see https://github.com/processing/processing/issues/5182)\n  // invert Y, projections in Processing invert Y\n  vec2 perspScale = (uProjectionMatrix * vec4(1, -1, 0, 0)).xy;\n\n  // No Perspective ---\n  // multiply by W (to cancel out division by W later in the pipeline) and\n  // convert from screen to clip (derived from clip to screen above)\n  vec2 noPerspScale = p.w / (0.5 * uViewport.zw);\n\n  //gl_Position.xy = p.xy + offset.xy * mix(noPerspScale, perspScale, float(perspective > 0));\n  gl_Position.xy = p.xy + offset.xy * perspScale;\n  gl_Position.zw = p.zw;\n}\n", "precision mediump float;\nprecision mediump int;\n\nuniform vec4 uMaterialColor;\n\nvoid main() {\n  gl_FragColor = uMaterialColor;\n}")), 
                this._defaultLineShader;
            }, i.RendererGL.prototype._getFontShader = function() {
                return this._defaultFontShader || (this.GL.getExtension("OES_standard_derivatives"), 
                this._defaultFontShader = new i.Shader(this, "precision mediump float;\n\nattribute vec3 aPosition;\nattribute vec2 aTexCoord;\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\n\nuniform vec4 uGlyphRect;\nuniform float uGlyphOffset;\n\nvarying vec2 vTexCoord;\nvarying float w;\n\nvoid main() {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n\n  // scale by the size of the glyph's rectangle\n  positionVec4.xy *= uGlyphRect.zw - uGlyphRect.xy;\n\n  // move to the corner of the glyph\n  positionVec4.xy += uGlyphRect.xy;\n\n  // move to the letter's line offset\n  positionVec4.x += uGlyphOffset;\n  \n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vTexCoord = aTexCoord;\n  w = gl_Position.w;\n}\n", "#extension GL_OES_standard_derivatives : enable\nprecision mediump float;\n\n#if 0\n  // simulate integer math using floats\n\t#define int float\n\t#define ivec2 vec2\n\t#define INT(x) float(x)\n\n\tint ifloor(float v) { return floor(v); }\n\tivec2 ifloor(vec2 v) { return floor(v); }\n\n#else\n  // use native integer math\n\tprecision mediump int;\n\t#define INT(x) x\n\n\tint ifloor(float v) { return int(v); }\n\tint ifloor(int v) { return v; }\n\tivec2 ifloor(vec2 v) { return ivec2(v); }\n\n#endif\n\nuniform sampler2D uSamplerStrokes;\nuniform sampler2D uSamplerRowStrokes;\nuniform sampler2D uSamplerRows;\nuniform sampler2D uSamplerColStrokes;\nuniform sampler2D uSamplerCols;\n\nuniform ivec2 uStrokeImageSize;\nuniform ivec2 uCellsImageSize;\nuniform ivec2 uGridImageSize;\n\nuniform ivec2 uGridOffset;\nuniform ivec2 uGridSize;\nuniform vec4 uMaterialColor;\n\nvarying vec2 vTexCoord;\n\n// some helper functions\nint round(float v) { return ifloor(v + 0.5); }\nivec2 round(vec2 v) { return ifloor(v + 0.5); }\nfloat saturate(float v) { return clamp(v, 0.0, 1.0); }\nvec2 saturate(vec2 v) { return clamp(v, 0.0, 1.0); }\n\nint mul(float v1, int v2) {\n  return ifloor(v1 * float(v2));\n}\n\nivec2 mul(vec2 v1, ivec2 v2) {\n  return ifloor(v1 * vec2(v2) + 0.5);\n}\n\n// unpack a 16-bit integer from a float vec2\nint getInt16(vec2 v) {\n  ivec2 iv = round(v * 255.0);\n  return iv.x * INT(128) + iv.y;\n}\n\nvec2 pixelScale;\nvec2 coverage = vec2(0.0);\nvec2 weight = vec2(0.5);\nconst float minDistance = 1.0/8192.0;\nconst float hardness = 1.05; // amount of antialias\n\n// the maximum number of curves in a glyph\nconst int N = INT(250);\n\n// retrieves an indexed pixel from a sampler\nvec4 getTexel(sampler2D sampler, int pos, ivec2 size) {\n  int width = size.x;\n  int y = ifloor(pos / width);\n  int x = pos - y * width;  // pos % width\n\n  return texture2D(sampler, (vec2(x, y) + 0.5) / vec2(size));\n}\n\nvoid calulateCrossings(vec2 p0, vec2 p1, vec2 p2, out vec2 C1, out vec2 C2) {\n\n  // get the coefficients of the quadratic in t\n  vec2 a = p0 - p1 * 2.0 + p2;\n  vec2 b = p0 - p1;\n  vec2 c = p0 - vTexCoord;\n\n  // found out which values of 't' it crosses the axes\n  vec2 surd = sqrt(max(vec2(0.0), b * b - a * c));\n  vec2 t1 = ((b - surd) / a).yx;\n  vec2 t2 = ((b + surd) / a).yx;\n\n  // approximate straight lines to avoid rounding errors\n  if (abs(a.y) < 0.001)\n    t1.x = t2.x = c.y / (2.0 * b.y);\n\n  if (abs(a.x) < 0.001)\n    t1.y = t2.y = c.x / (2.0 * b.x);\n\n  // plug into quadratic formula to find the corrdinates of the crossings\n  C1 = ((a * t1 - b * 2.0) * t1 + c) * pixelScale;\n  C2 = ((a * t2 - b * 2.0) * t2 + c) * pixelScale;\n}\n\nvoid coverageX(vec2 p0, vec2 p1, vec2 p2) {\n\n  vec2 C1, C2;\n  calulateCrossings(p0, p1, p2, C1, C2);\n\n  // determine on which side of the x-axis the points lie\n  bool y0 = p0.y > vTexCoord.y;\n  bool y1 = p1.y > vTexCoord.y;\n  bool y2 = p2.y > vTexCoord.y;\n\n  // could web be under the curve (after t1)?\n  if (y1 ? !y2 : y0) {\n    // add the coverage for t1\n    coverage.x += saturate(C1.x + 0.5);\n    // calculate the anti-aliasing for t1\n    weight.x = min(weight.x, abs(C1.x));\n  }\n\n  // are we outside the curve (after t2)?\n  if (y1 ? !y0 : y2) {\n    // subtract the coverage for t2\n    coverage.x -= saturate(C2.x + 0.5);\n    // calculate the anti-aliasing for t2\n    weight.x = min(weight.x, abs(C2.x));\n  }\n}\n\n// this is essentially the same as coverageX, but with the axes swapped\nvoid coverageY(vec2 p0, vec2 p1, vec2 p2) {\n\n  vec2 C1, C2;\n  calulateCrossings(p0, p1, p2, C1, C2);\n\n  bool x0 = p0.x > vTexCoord.x;\n  bool x1 = p1.x > vTexCoord.x;\n  bool x2 = p2.x > vTexCoord.x;\n\n  if (x1 ? !x2 : x0) {\n    coverage.y -= saturate(C1.y + 0.5);\n    weight.y = min(weight.y, abs(C1.y));\n  }\n\n  if (x1 ? !x0 : x2) {\n    coverage.y += saturate(C2.y + 0.5);\n    weight.y = min(weight.y, abs(C2.y));\n  }\n}\n\nvoid main() {\n\n  // calculate the pixel scale based on screen-coordinates\n  pixelScale = hardness / fwidth(vTexCoord);\n\n  // which grid cell is this pixel in?\n  ivec2 gridCoord = ifloor(vTexCoord * vec2(uGridSize));\n\n  // intersect curves in this row\n  {\n    // the index into the row info bitmap\n    int rowIndex = gridCoord.y + uGridOffset.y;\n    // fetch the info texel\n    vec4 rowInfo = getTexel(uSamplerRows, rowIndex, uGridImageSize);\n    // unpack the rowInfo\n    int rowStrokeIndex = getInt16(rowInfo.xy);\n    int rowStrokeCount = getInt16(rowInfo.zw);\n\n    for (int iRowStroke = INT(0); iRowStroke < N; iRowStroke++) {\n      if (iRowStroke >= rowStrokeCount)\n        break;\n\n      // each stroke is made up of 3 points: the start and control point\n      // and the start of the next curve.\n      // fetch the indices of this pair of strokes:\n      vec4 strokeIndices = getTexel(uSamplerRowStrokes, rowStrokeIndex++, uCellsImageSize);\n\n      // unpack the stroke index\n      int strokePos = getInt16(strokeIndices.xy);\n\n      // fetch the two strokes\n      vec4 stroke0 = getTexel(uSamplerStrokes, strokePos + INT(0), uStrokeImageSize);\n      vec4 stroke1 = getTexel(uSamplerStrokes, strokePos + INT(1), uStrokeImageSize);\n\n      // calculate the coverage\n      coverageX(stroke0.xy, stroke0.zw, stroke1.xy);\n    }\n  }\n\n  // intersect curves in this column\n  {\n    int colIndex = gridCoord.x + uGridOffset.x;\n    vec4 colInfo = getTexel(uSamplerCols, colIndex, uGridImageSize);\n    int colStrokeIndex = getInt16(colInfo.xy);\n    int colStrokeCount = getInt16(colInfo.zw);\n    \n    for (int iColStroke = INT(0); iColStroke < N; iColStroke++) {\n      if (iColStroke >= colStrokeCount)\n        break;\n\n      vec4 strokeIndices = getTexel(uSamplerColStrokes, colStrokeIndex++, uCellsImageSize);\n\n      int strokePos = getInt16(strokeIndices.xy);\n      vec4 stroke0 = getTexel(uSamplerStrokes, strokePos + INT(0), uStrokeImageSize);\n      vec4 stroke1 = getTexel(uSamplerStrokes, strokePos + INT(1), uStrokeImageSize);\n      coverageY(stroke0.xy, stroke0.zw, stroke1.xy);\n    }\n  }\n\n  weight = saturate(1.0 - weight * 2.0);\n  float distance = max(weight.x + weight.y, minDistance); // manhattan approx.\n  float antialias = abs(dot(coverage, weight) / distance);\n  float cover = min(abs(coverage.x), abs(coverage.y));\n  gl_FragColor = uMaterialColor;\n  gl_FragColor.a *= saturate(max(antialias, cover));\n}")), 
                this._defaultFontShader;
            }, i.RendererGL.prototype._getEmptyTexture = function() {
                if (!this._emptyTexture) {
                    var e = new i.Image(1, 1);
                    e.set(0, 0, 255), this._emptyTexture = new i.Texture(this, e);
                }
                return this._emptyTexture;
            }, i.RendererGL.prototype.getTexture = function(e) {
                for (var t = this.textures, r = 0; r < t.length; ++r) {
                    var n = t[r];
                    if (n.src === e) return n;
                }
                var o = new i.Texture(this, e);
                return t.push(o), o;
            }, i.RendererGL.prototype._setStrokeUniforms = function(e) {
                e.bindShader(), e.setUniform("uMaterialColor", this.curStrokeColor), e.setUniform("uStrokeWeight", this.curStrokeWeight);
            }, i.RendererGL.prototype._setFillUniforms = function(e) {
                e.bindShader(), e.setUniform("uMaterialColor", this.curFillColor), e.setUniform("isTexture", !!this._tex), 
                this._tex && e.setUniform("uSampler", this._tex), e.setUniform("uSpecular", this._useSpecularMaterial), 
                e.setUniform("uShininess", this._useShininess), e.setUniform("uUseLighting", this._enableLighting);
                var t = this.pointLightColors.length / 3;
                e.setUniform("uPointLightCount", t), e.setUniform("uPointLightLocation", this.pointLightPositions), 
                e.setUniform("uPointLightColor", this.pointLightColors);
                var r = this.directionalLightColors.length / 3;
                e.setUniform("uDirectionalLightCount", r), e.setUniform("uLightingDirection", this.directionalLightDirections), 
                e.setUniform("uDirectionalColor", this.directionalLightColors);
                var i = this.ambientLightColors.length / 3;
                e.setUniform("uAmbientLightCount", i), e.setUniform("uAmbientColor", this.ambientLightColors), 
                e.bindTextures();
            }, i.RendererGL.prototype._setPointUniforms = function(e) {
                e.bindShader(), e.setUniform("uMaterialColor", this.curStrokeColor), e.setUniform("uPointSize", this.pointSize);
            }, i.RendererGL.prototype._bindBuffer = function(e, t, r, i, n) {
                if (this.GL.bindBuffer(t, e), void 0 !== r) {
                    var o = new i(r);
                    this.GL.bufferData(t, o, n);
                }
            }, i.RendererGL.prototype._flatten = function(e) {
                if (0 === e.length) return [];
                if (2e4 < e.length) {
                    var t, r = Object.prototype.toString, i = [], n = e.slice();
                    for (t = n.pop(); "[object Array]" === r.call(t) ? n.push.apply(n, t) : i.push(t), 
                    n.length && void 0 !== (t = n.pop()); ) ;
                    return i.reverse(), i;
                }
                return [].concat.apply([], e);
            }, i.RendererGL.prototype._vToNArray = function(e) {
                return this._flatten(e.map(function(e) {
                    return [ e.x, e.y, e.z ];
                }));
            }, i.prototype._assert3d = function(e) {
                if (!this._renderer.isP3D) throw new Error(e + "() is only supported in WEBGL mode. If you'd like to use 3D graphics and WebGL, see  https://p5js.org/examples/form-3d-primitives.html for more information.");
            }, i.RendererGL.prototype._initTessy = function() {
                var e = new o.GluTesselator();
                return e.gluTessCallback(o.gluEnum.GLU_TESS_VERTEX_DATA, function(e, t) {
                    t[t.length] = e[0], t[t.length] = e[1], t[t.length] = e[2];
                }), e.gluTessCallback(o.gluEnum.GLU_TESS_BEGIN, function(e) {
                    e !== o.primitiveType.GL_TRIANGLES && console.log("expected TRIANGLES but got type: " + e);
                }), e.gluTessCallback(o.gluEnum.GLU_TESS_ERROR, function(e) {
                    console.log("error callback"), console.log("error number: " + e);
                }), e.gluTessCallback(o.gluEnum.GLU_TESS_COMBINE, function(e, t, r) {
                    return [ e[0], e[1], e[2] ];
                }), e.gluTessCallback(o.gluEnum.GLU_TESS_EDGE_FLAG, function(e) {}), e;
            }, i.RendererGL.prototype._triangulate = function(e) {
                this._tessy.gluTessNormal(0, 0, 1);
                var t = [];
                this._tessy.gluTessBeginPolygon(t);
                for (var r = 0; r < e.length; r++) {
                    this._tessy.gluTessBeginContour();
                    for (var i = e[r], n = 0; n < i.length; n += 3) {
                        var o = [ i[n], i[n + 1], i[n + 2] ];
                        this._tessy.gluTessVertex(o, o);
                    }
                    this._tessy.gluTessEndContour();
                }
                return this._tessy.gluTessEndPolygon(), t;
            }, i.RendererGL.prototype._bezierCoefficients = function(e) {
                var t = e * e, r = 1 - e, i = r * r;
                return [ i * r, 3 * i * e, 3 * r * t, t * e ];
            }, i.RendererGL.prototype._quadraticCoefficients = function(e) {
                var t = 1 - e;
                return [ t * t, 2 * t * e, e * e ];
            }, i.RendererGL.prototype._bezierToCatmull = function(e) {
                return [ e[1], e[1] + (e[2] - e[0]) / this._curveTightness, e[2] - (e[3] - e[1]) / this._curveTightness, e[2] ];
            }, t.exports = i.RendererGL;
        }, {
            "../core/constants": 17,
            "../core/main": 23,
            "../core/p5.Renderer": 26,
            "./p5.Camera": 68,
            "./p5.Matrix": 70,
            "./p5.Shader": 74,
            libtess: 8
        } ],
        74: [ function(e, t, r) {
            "use strict";
            var i = e("../core/main");
            i.Shader = function(e, t, r) {
                this._renderer = e, this._vertSrc = t, this._fragSrc = r, this._vertShader = -1, 
                this._fragShader = -1, this._glProgram = 0, this._loadedAttributes = !1, this.attributes = {}, 
                this._loadedUniforms = !1, this.uniforms = {}, this._bound = !1, this.samplers = [];
            }, i.Shader.prototype.init = function() {
                if (0 === this._glProgram) {
                    var e = this._renderer.GL;
                    if (this._vertShader = e.createShader(e.VERTEX_SHADER), e.shaderSource(this._vertShader, this._vertSrc), 
                    e.compileShader(this._vertShader), !e.getShaderParameter(this._vertShader, e.COMPILE_STATUS)) return console.error("Yikes! An error occurred compiling the vertex shader:" + e.getShaderInfoLog(this._vertShader)), 
                    null;
                    if (this._fragShader = e.createShader(e.FRAGMENT_SHADER), e.shaderSource(this._fragShader, this._fragSrc), 
                    e.compileShader(this._fragShader), !e.getShaderParameter(this._fragShader, e.COMPILE_STATUS)) return console.error("Darn! An error occurred compiling the fragment shader:" + e.getShaderInfoLog(this._fragShader)), 
                    null;
                    this._glProgram = e.createProgram(), e.attachShader(this._glProgram, this._vertShader), 
                    e.attachShader(this._glProgram, this._fragShader), e.linkProgram(this._glProgram), 
                    e.getProgramParameter(this._glProgram, e.LINK_STATUS) || console.error("Snap! Error linking shader program: " + e.getProgramInfoLog(this._glProgram)), 
                    this._loadAttributes(), this._loadUniforms();
                }
                return this;
            }, i.Shader.prototype._loadAttributes = function() {
                if (!this._loadedAttributes) {
                    this.attributes = {};
                    for (var e = this._renderer.GL, t = e.getProgramParameter(this._glProgram, e.ACTIVE_ATTRIBUTES), r = 0; r < t; ++r) {
                        var i = e.getActiveAttrib(this._glProgram, r), n = i.name, o = e.getAttribLocation(this._glProgram, n), s = {};
                        s.name = n, s.location = o, s.type = i.type, s.size = i.size, this.attributes[n] = s;
                    }
                    this._loadedAttributes = !0;
                }
            }, i.Shader.prototype._loadUniforms = function() {
                if (!this._loadedUniforms) {
                    for (var e = this._renderer.GL, t = e.getProgramParameter(this._glProgram, e.ACTIVE_UNIFORMS), r = 0, i = 0; i < t; ++i) {
                        var n = e.getActiveUniform(this._glProgram, i), o = {};
                        o.location = e.getUniformLocation(this._glProgram, n.name), o.size = n.size;
                        var s = n.name;
                        1 < n.size && (s = s.substring(0, s.indexOf("[0]"))), o.name = s, o.type = n.type, 
                        o.type === e.SAMPLER_2D && (o.samplerIndex = r, r++, this.samplers.push(o)), this.uniforms[s] = o;
                    }
                    this._loadedUniforms = !0;
                }
            }, i.Shader.prototype.compile = function() {}, i.Shader.prototype.bindShader = function() {
                this.init(), this._bound || (this.useProgram(), this._bound = !0, this._setMatrixUniforms(), 
                this.setUniform("uViewport", this._renderer._viewport));
            }, i.Shader.prototype.unbindShader = function() {
                return this._bound && (this.unbindTextures(), this._bound = !1), this;
            }, i.Shader.prototype.bindTextures = function() {
                for (var e = this._renderer.GL, t = 0; t < this.samplers.length; t++) {
                    var r = this.samplers[t], i = r.texture;
                    void 0 === i && (i = this._renderer._getEmptyTexture()), e.activeTexture(e.TEXTURE0 + r.samplerIndex), 
                    i.bindTexture(), i.update(), e.uniform1i(r.location, r.samplerIndex);
                }
            }, i.Shader.prototype.updateTextures = function() {
                for (var e = 0; e < this.samplers.length; e++) {
                    var t = this.samplers[e].texture;
                    t && t.update();
                }
            }, i.Shader.prototype.unbindTextures = function() {}, i.Shader.prototype._setMatrixUniforms = function() {
                this.setUniform("uProjectionMatrix", this._renderer.uPMatrix.mat4), this.setUniform("uModelViewMatrix", this._renderer.uMVMatrix.mat4), 
                this.setUniform("uViewMatrix", this._renderer._curCamera.cameraMatrix.mat4), this.uniforms.uNormalMatrix && (this._renderer.uNMatrix.inverseTranspose(this._renderer.uMVMatrix), 
                this.setUniform("uNormalMatrix", this._renderer.uNMatrix.mat3));
            }, i.Shader.prototype.useProgram = function() {
                return this._renderer.GL.useProgram(this._glProgram), this;
            }, i.Shader.prototype.setUniform = function(e, t) {
                var r = this.uniforms[e];
                if (r) {
                    var i = r.location, n = this._renderer.GL;
                    switch (this.useProgram(), r.type) {
                      case n.BOOL:
                        !0 === t ? n.uniform1i(i, 1) : n.uniform1i(i, 0);
                        break;

                      case n.INT:
                        1 < r.size ? t.length && n.uniform1iv(i, t) : n.uniform1i(i, t);
                        break;

                      case n.FLOAT:
                        1 < r.size ? t.length && n.uniform1fv(i, t) : n.uniform1f(i, t);
                        break;

                      case n.FLOAT_MAT3:
                        n.uniformMatrix3fv(i, !1, t);
                        break;

                      case n.FLOAT_MAT4:
                        n.uniformMatrix4fv(i, !1, t);
                        break;

                      case n.FLOAT_VEC2:
                        1 < r.size ? t.length && n.uniform2fv(i, t) : n.uniform2f(i, t[0], t[1]);
                        break;

                      case n.FLOAT_VEC3:
                        1 < r.size ? t.length && n.uniform3fv(i, t) : n.uniform3f(i, t[0], t[1], t[2]);
                        break;

                      case n.FLOAT_VEC4:
                        1 < r.size ? t.length && n.uniform4fv(i, t) : n.uniform4f(i, t[0], t[1], t[2], t[3]);
                        break;

                      case n.INT_VEC2:
                        1 < r.size ? t.length && n.uniform2iv(i, t) : n.uniform2i(i, t[0], t[1]);
                        break;

                      case n.INT_VEC3:
                        1 < r.size ? t.length && n.uniform3iv(i, t) : n.uniform3i(i, t[0], t[1], t[2]);
                        break;

                      case n.INT_VEC4:
                        1 < r.size ? t.length && n.uniform4iv(i, t) : n.uniform4i(i, t[0], t[1], t[2], t[3]);
                        break;

                      case n.SAMPLER_2D:
                        n.activeTexture(n.TEXTURE0 + r.samplerIndex), r.texture = this._renderer.getTexture(t), 
                        n.uniform1i(r.location, r.samplerIndex);
                    }
                    return this;
                }
            }, i.Shader.prototype.isLightShader = function() {
                return void 0 !== this.attributes.aNormal || void 0 !== this.uniforms.uUseLighting || void 0 !== this.uniforms.uAmbientLightCount || void 0 !== this.uniforms.uDirectionalLightCount || void 0 !== this.uniforms.uPointLightCount || void 0 !== this.uniforms.uAmbientColor || void 0 !== this.uniforms.uDirectionalColor || void 0 !== this.uniforms.uPointLightLocation || void 0 !== this.uniforms.uPointLightColor || void 0 !== this.uniforms.uLightingDirection || void 0 !== this.uniforms.uSpecular;
            }, i.Shader.prototype.isTextureShader = function() {
                return 0 < this.samplerIndex;
            }, i.Shader.prototype.isColorShader = function() {
                return void 0 !== this.attributes.aVertexColor || void 0 !== this.uniforms.uMaterialColor;
            }, i.Shader.prototype.isTexLightShader = function() {
                return this.isLightShader() && this.isTextureShader();
            }, i.Shader.prototype.isStrokeShader = function() {
                return void 0 !== this.uniforms.uStrokeWeight;
            }, i.Shader.prototype.enableAttrib = function(e, t, r, i, n, o) {
                var s = this._renderer.GL;
                return -1 !== e && (s.enableVertexAttribArray(e), s.vertexAttribPointer(e, t, r, i, n, o)), 
                this;
            }, t.exports = i.Shader;
        }, {
            "../core/main": 23
        } ],
        75: [ function(e, t, r) {
            "use strict";
            var i = e("../core/main"), n = e("../core/constants");
            i.Texture = function(e, t) {
                this._renderer = e;
                var r = this._renderer.GL;
                this.src = t, this.glTex = void 0, this.glTarget = r.TEXTURE_2D, this.glFormat = r.RGBA, 
                this.mipmaps = !1, this.glMinFilter = r.LINEAR, this.glMagFilter = r.LINEAR, this.glWrapS = r.CLAMP_TO_EDGE, 
                this.glWrapT = r.CLAMP_TO_EDGE, this.isSrcMediaElement = void 0 !== i.MediaElement && t instanceof i.MediaElement, 
                this._videoPrevUpdateTime = 0, this.isSrcHTMLElement = void 0 !== i.Element && t instanceof i.Element && !(t instanceof i.Graphics), 
                this.isSrcP5Image = t instanceof i.Image, this.isSrcP5Graphics = t instanceof i.Graphics, 
                this.isImageData = "undefined" != typeof ImageData && t instanceof ImageData;
                var n = this._getTextureDataFromSource();
                return this.width = n.width, this.height = n.height, this.init(n), this;
            }, i.Texture.prototype._getTextureDataFromSource = function() {
                var e;
                return this.isSrcP5Image ? e = this.src.canvas : this.isSrcMediaElement || this.isSrcP5Graphics || this.isSrcHTMLElement ? e = this.src.elt : this.isImageData && (e = this.src), 
                e;
            }, i.Texture.prototype.init = function(e) {
                var t = this._renderer.GL;
                if (this.glTex = t.createTexture(), this.glWrapS = this._renderer.textureWrapX, 
                this.glWrapT = this._renderer.textureWrapY, this.setWrapMode(this.glWrapS, this.glWrapT), 
                this.bindTexture(), t.texParameteri(t.TEXTURE_2D, t.TEXTURE_MAG_FILTER, this.glMagFilter), 
                t.texParameteri(t.TEXTURE_2D, t.TEXTURE_MIN_FILTER, this.glMinFilter), 0 === this.width || 0 === this.height || this.isSrcMediaElement && !this.src.loadedmetadata) {
                    var r = new Uint8Array([ 1, 1, 1, 1 ]);
                    t.texImage2D(this.glTarget, 0, t.RGBA, 1, 1, 0, this.glFormat, t.UNSIGNED_BYTE, r);
                } else t.texImage2D(this.glTarget, 0, this.glFormat, this.glFormat, t.UNSIGNED_BYTE, e);
            }, i.Texture.prototype.update = function() {
                var e = this.src;
                if (0 === e.width || 0 === e.height) return !1;
                var t = this._getTextureDataFromSource(), r = !1, i = this._renderer.GL;
                return t.width !== this.width || t.height !== this.height ? (r = !0, this.width = t.width, 
                this.height = t.height, this.isSrcP5Image ? e.setModified(!1) : (this.isSrcMediaElement || this.isSrcHTMLElement) && e.setModified(!0)) : this.isSrcP5Image ? e.isModified() && (r = !0, 
                e.setModified(!1)) : this.isSrcMediaElement ? e.isModified() ? (r = !0, e.setModified(!1)) : e.loadedmetadata && this._videoPrevUpdateTime !== e.time() && (this._videoPrevUpdateTime = e.time(), 
                r = !0) : this.isImageData ? e._dirty && (r = !(e._dirty = !1)) : r = !0, r && (this.bindTexture(), 
                i.texImage2D(this.glTarget, 0, this.glFormat, this.glFormat, i.UNSIGNED_BYTE, t)), 
                r;
            }, i.Texture.prototype.bindTexture = function() {
                return this._renderer.GL.bindTexture(this.glTarget, this.glTex), this;
            }, i.Texture.prototype.unbindTexture = function() {
                this._renderer.GL.bindTexture(this.glTarget, null);
            }, i.Texture.prototype.setInterpolation = function(e, t) {
                var r = this._renderer.GL;
                e === n.NEAREST ? this.glMinFilter = r.NEAREST : this.glMinFilter = r.LINEAR, t === n.NEAREST ? this.glMagFilter = r.NEAREST : this.glMagFilter = r.LINEAR, 
                this.bindTexture(), r.texParameteri(r.TEXTURE_2D, r.TEXTURE_MIN_FILTER, this.glMinFilter), 
                r.texParameteri(r.TEXTURE_2D, r.TEXTURE_MAG_FILTER, this.glMagFilter), this.unbindTexture();
            }, i.Texture.prototype.setWrapMode = function(e, t) {
                var r = this._renderer.GL, i = function(e) {
                    return 0 == (e & e - 1);
                }, o = i(this.width), s = i(this.height);
                e === n.REPEAT ? this.glWrapS = o && s ? r.REPEAT : (console.warn("You tried to set the wrap mode to REPEAT but the texture size is not a power of two. Setting to CLAMP instead"), 
                r.CLAMP_TO_EDGE) : e === n.MIRROR ? this.glWrapS = o && s ? r.MIRRORED_REPEAT : (console.warn("You tried to set the wrap mode to MIRROR but the texture size is not a power of two. Setting to CLAMP instead"), 
                r.CLAMP_TO_EDGE) : this.glWrapS = r.CLAMP_TO_EDGE, t === n.REPEAT ? this.glWrapT = o && s ? r.REPEAT : (console.warn("You tried to set the wrap mode to REPEAT but the texture size is not a power of two. Setting to CLAMP instead"), 
                r.CLAMP_TO_EDGE) : t === n.MIRROR ? this.glWrapT = o && s ? r.MIRRORED_REPEAT : (console.warn("You tried to set the wrap mode to MIRROR but the texture size is not a power of two. Setting to CLAMP instead"), 
                r.CLAMP_TO_EDGE) : this.glWrapT = r.CLAMP_TO_EDGE, this.bindTexture(), r.texParameteri(r.TEXTURE_2D, r.TEXTURE_WRAP_S, this.glWrapS), 
                r.texParameteri(r.TEXTURE_2D, r.TEXTURE_WRAP_T, this.glWrapT), this.unbindTexture();
            }, t.exports = i.Texture;
        }, {
            "../core/constants": 17,
            "../core/main": 23
        } ],
        76: [ function(e, t, r) {
            "use strict";
            var i = e("../core/main"), n = e("../core/constants");
            function o(e, t) {
                this.width = e, this.height = t, this.infos = [], this.findImage = function(e) {
                    var t, r, i = this.width * this.height;
                    if (i < e) throw new Error("font is too complex to render in 3D");
                    for (var n = this.infos.length - 1; 0 <= n; --n) {
                        var o = this.infos[n];
                        if (o.index + e < i) {
                            r = (t = o).imageData;
                            break;
                        }
                    }
                    if (!t) {
                        try {
                            r = new ImageData(this.width, this.height);
                        } catch (e) {
                            var s = document.getElementsByTagName("canvas")[0], a = !s;
                            s || ((s = document.createElement("canvas")).style.display = "none", document.body.appendChild(s));
                            var h = s.getContext("2d");
                            h && (r = h.createImageData(this.width, this.height)), a && document.body.removeChild(s);
                        }
                        t = {
                            index: 0,
                            imageData: r
                        }, this.infos.push(t);
                    }
                    var l = t.index;
                    return t.index += e, r._dirty = !0, {
                        imageData: r,
                        index: l
                    };
                };
            }
            function s(e, t, r, i, n) {
                var o = e.imageData.data, s = 4 * e.index++;
                o[s++] = t, o[s++] = r, o[s++] = i, o[s++] = n;
            }
            e("./p5.Shader"), e("./p5.RendererGL"), i.RendererGL.prototype._applyTextProperties = function() {}, 
            i.RendererGL.prototype.textWidth = function(e) {
                return this._isOpenType() ? this._textFont._textWidth(e, this._textSize) : 0;
            };
            var a = Math.sqrt(3), h = function(e) {
                this.font = e, this.strokeImageInfos = new o(64, 64), this.colDimImageInfos = new o(64, 64), 
                this.rowDimImageInfos = new o(64, 64), this.colCellImageInfos = new o(64, 64), this.rowCellImageInfos = new o(64, 64), 
                this.glyphInfos = {}, this.getGlyphInfo = function(e) {
                    var t = this.glyphInfos[e.index];
                    if (t) return t;
                    var r, n = e.getBoundingBox(), o = n.x1, h = n.y1, l = n.x2 - o, u = n.y2 - h, c = e.path.commands;
                    if (0 === l || 0 === u || !c.length) return this.glyphInfos[e.index] = {};
                    var p, d, f, m, g = [], v = [], y = [];
                    for (r = 8; 0 <= r; --r) y.push([]);
                    for (r = 8; 0 <= r; --r) v.push([]);
                    function b(e, t, r) {
                        var i = g.length;
                        function n(e, t, r) {
                            for (var i = e.length; 0 < i--; ) {
                                var n = e[i];
                                n < t && (t = n), r < n && (r = n);
                            }
                            return {
                                min: t,
                                max: r
                            };
                        }
                        g.push(r);
                        for (var o = n(e, 1, 0), s = Math.max(Math.floor(9 * o.min), 0), a = Math.min(Math.ceil(9 * o.max), 9), h = s; h < a; ++h) y[h].push(i);
                        for (var l = n(t, 1, 0), u = Math.max(Math.floor(9 * l.min), 0), c = Math.min(Math.ceil(9 * l.max), 9), p = u; p < c; ++p) v[p].push(i);
                    }
                    function x(e) {
                        return (t = 255 * e) < 0 ? 0 : 255 < t ? 255 : t;
                        var t;
                    }
                    function _(e, t, r, n) {
                        this.p0 = e, this.c0 = t, this.c1 = r, this.p1 = n, this.toQuadratic = function() {
                            return {
                                x: this.p0.x,
                                y: this.p0.y,
                                x1: this.p1.x,
                                y1: this.p1.y,
                                cx: (3 * (this.c0.x + this.c1.x) - (this.p0.x + this.p1.x)) / 4,
                                cy: (3 * (this.c0.y + this.c1.y) - (this.p0.y + this.p1.y)) / 4
                            };
                        }, this.quadError = function() {
                            return i.Vector.sub(i.Vector.sub(this.p1, this.p0), i.Vector.mult(i.Vector.sub(this.c1, this.c0), 3)).mag() / 2;
                        }, this.split = function(e) {
                            var t = i.Vector.lerp(this.p0, this.c0, e), r = i.Vector.lerp(this.c0, this.c1, e), n = i.Vector.lerp(t, r, e);
                            this.c1 = i.Vector.lerp(this.c1, this.p1, e), this.c0 = i.Vector.lerp(r, this.c1, e);
                            var o = i.Vector.lerp(n, this.c0, e), s = new _(this.p0, t, n, o);
                            return this.p0 = o, s;
                        }, this.splitInflections = function() {
                            var e = i.Vector.sub(this.c0, this.p0), t = i.Vector.sub(i.Vector.sub(this.c1, this.c0), e), r = i.Vector.sub(i.Vector.sub(i.Vector.sub(this.p1, this.c1), e), i.Vector.mult(t, 2)), n = [], o = t.x * r.y - t.y * r.x;
                            if (0 !== o) {
                                var s = e.x * r.y - e.y * r.x, a = e.x * t.y - e.y * t.x, h = s * s - 4 * o * a;
                                if (0 <= h) {
                                    o < 0 && (o = -o, s = -s, a = -a);
                                    var l = Math.sqrt(h), u = (-s - l) / (2 * o), c = (-s + l) / (2 * o);
                                    0 < u && u < 1 && (n.push(this.split(u)), c = 1 - (1 - c) / (1 - u)), 0 < c && c < 1 && n.push(this.split(c));
                                }
                            }
                            return n.push(this), n;
                        };
                    }
                    function w(e, t, r, n, o, s, h, l) {
                        for (var u = new _(new i.Vector(e, t), new i.Vector(r, n), new i.Vector(o, s), new i.Vector(h, l)).splitInflections(), c = [], p = 30 / a, d = 0; d < u.length; d++) {
                            for (var f, m = u[d], g = []; !(.125 <= (f = p / m.quadError())); ) {
                                var v = Math.pow(f, 1 / 3), y = m.split(v), b = m.split(1 - v / (1 - v));
                                c.push(y), g.push(m), m = b;
                            }
                            f < 1 && c.push(m.split(.5)), c.push(m), Array.prototype.push.apply(c, g.reverse());
                        }
                        return c;
                    }
                    function S(e, t, r, i) {
                        b([ e, r ], [ t, i ], {
                            x: e,
                            y: t,
                            cx: (e + r) / 2,
                            cy: (t + i) / 2
                        });
                    }
                    function T(e, t, r, i) {
                        return Math.abs(r - e) < 1e-5 && Math.abs(i - t) < 1e-5;
                    }
                    for (var E = 0; E < c.length; ++E) {
                        var M = c[E], C = (M.x - o) / l, L = (M.y - h) / u;
                        if (!T(p, d, C, L)) {
                            switch (M.type) {
                              case "M":
                                f = C, m = L;
                                break;

                              case "L":
                                S(p, d, C, L);
                                break;

                              case "Q":
                                var R = (M.x1 - o) / l, A = (M.y1 - h) / u;
                                b([ p, C, R ], [ d, L, A ], {
                                    x: p,
                                    y: d,
                                    cx: R,
                                    cy: A
                                });
                                break;

                              case "Z":
                                T(p, d, f, m) ? g.push({
                                    x: p,
                                    y: d
                                }) : (S(p, d, f, m), g.push({
                                    x: f,
                                    y: m
                                }));
                                break;

                              case "C":
                                for (var D = w(p, d, (M.x1 - o) / l, (M.y1 - h) / u, (M.x2 - o) / l, (M.y2 - h) / u, C, L), P = 0; P < D.length; P++) {
                                    var k = D[P].toQuadratic();
                                    b([ k.x, k.x1, k.cx ], [ k.y, k.y1, k.cy ], k);
                                }
                                break;

                              default:
                                throw new Error("unknown command type: " + M.type);
                            }
                            p = C, d = L;
                        }
                    }
                    for (var I = g.length, O = this.strokeImageInfos.findImage(I), U = O.index, N = 0; N < I; ++N) {
                        var B = g[N];
                        s(O, x(B.x), x(B.y), x(B.cx), x(B.cy));
                    }
                    function F(e, t, r) {
                        for (var i = e.length, n = t.findImage(i), o = n.index, a = 0, h = 0; h < i; ++h) a += e[h].length;
                        for (var l = r.findImage(a), u = 0; u < i; ++u) {
                            var c = e[u], p = c.length, d = l.index;
                            s(n, d >> 7, 127 & d, p >> 7, 127 & p);
                            for (var f = 0; f < p; ++f) {
                                var m = c[f] + U;
                                s(l, m >> 7, 127 & m, 0, 0);
                            }
                        }
                        return {
                            cellImageInfo: l,
                            dimOffset: o,
                            dimImageInfo: n
                        };
                    }
                    return (t = this.glyphInfos[e.index] = {
                        glyph: e,
                        uGlyphRect: [ n.x1, -n.y1, n.x2, -n.y2 ],
                        strokeImageInfo: O,
                        strokes: g,
                        colInfo: F(y, this.colDimImageInfos, this.colCellImageInfos),
                        rowInfo: F(v, this.rowDimImageInfos, this.rowCellImageInfos)
                    }).uGridOffset = [ t.colInfo.dimOffset, t.rowInfo.dimOffset ], t;
                };
            };
            i.RendererGL.prototype._renderText = function(e, t, r, o, s) {
                if (!(s <= o) && this._doFill) {
                    if (!this._isOpenType()) return console.log("WEBGL: only opentype fonts are supported"), 
                    e;
                    e.push();
                    var a = this._doStroke, l = this.drawMode;
                    this._doStroke = !1, this.drawMode = n.TEXTURE;
                    var u = this._textFont.font, c = this._textFont._fontInfo;
                    c || (c = this._textFont._fontInfo = new h(u));
                    var p = this._textFont._handleAlignment(this, t, r, o), d = this._textSize / u.unitsPerEm;
                    this.translate(p.x, p.y, 0), this.scale(d, d, 1);
                    var f = this.GL, m = !this._defaultFontShader, g = this._getFontShader();
                    g.init(), m && (g.setUniform("uGridImageSize", [ 64, 64 ]), g.setUniform("uCellsImageSize", [ 64, 64 ]), 
                    g.setUniform("uStrokeImageSize", [ 64, 64 ]), g.setUniform("uGridSize", [ 9, 9 ])), 
                    this._applyColorBlend(this.curFillColor);
                    var v = this.gHash.glyph;
                    if (!v) {
                        var y = this._textGeom = new i.Geometry(1, 1, function() {
                            for (var e = 0; e <= 1; e++) for (var t = 0; t <= 1; t++) this.vertices.push(new i.Vector(t, e, 0)), 
                            this.uvs.push(t, e);
                        });
                        y.computeFaces().computeNormals(), v = this.createBuffers("glyph", y);
                    }
                    this._bindBuffer(v.vertexBuffer, f.ARRAY_BUFFER), g.enableAttrib(g.attributes.aPosition.location, 3, f.FLOAT, !1, 0, 0), 
                    this._bindBuffer(v.indexBuffer, f.ELEMENT_ARRAY_BUFFER), this._bindBuffer(v.uvBuffer, f.ARRAY_BUFFER), 
                    g.enableAttrib(g.attributes.aTexCoord.location, 2, f.FLOAT, !1, 0, 0), g.setUniform("uMaterialColor", this.curFillColor);
                    try {
                        for (var b = 0, x = null, _ = !1, w = u.stringToGlyphs(t), S = 0; S < w.length; ++S) {
                            var T = w[S];
                            x && (b += u.getKerningValue(x, T));
                            var E = c.getGlyphInfo(T);
                            if (E.uGlyphRect) {
                                var M = E.rowInfo, C = E.colInfo;
                                g.setUniform("uSamplerStrokes", E.strokeImageInfo.imageData), g.setUniform("uSamplerRowStrokes", M.cellImageInfo.imageData), 
                                g.setUniform("uSamplerRows", M.dimImageInfo.imageData), g.setUniform("uSamplerColStrokes", C.cellImageInfo.imageData), 
                                g.setUniform("uSamplerCols", C.dimImageInfo.imageData), g.setUniform("uGridOffset", E.uGridOffset), 
                                g.setUniform("uGlyphRect", E.uGlyphRect), g.setUniform("uGlyphOffset", b), _ ? g.bindTextures() : (_ = !0, 
                                g.bindShader()), f.drawElements(f.TRIANGLES, 6, this.GL.UNSIGNED_SHORT, 0);
                            }
                            b += T.advanceWidth, x = T;
                        }
                    } finally {
                        g.unbindShader(), this._doStroke = a, this.drawMode = l, e.pop();
                    }
                    return this._pixelsState._pixelsDirty = !0, e;
                }
            };
        }, {
            "../core/constants": 17,
            "../core/main": 23,
            "./p5.RendererGL": 73,
            "./p5.Shader": 74
        } ]
    }, {}, [ 12 ])(12);
}), function(e, t) {
    "function" == typeof define && define.amd ? define("p5.dom", [ "p5" ], function(e) {
        t(e);
    }) : "object" == typeof exports ? t(require("../p5")) : t(e.p5);
}(this, function(e) {
    function t(t) {
        var r = document;
        return "string" == typeof t && "#" === t[0] ? (t = t.slice(1), r = document.getElementById(t) || document) : t instanceof e.Element ? r = t.elt : t instanceof HTMLElement && (r = t), 
        r;
    }
    function r(t, r, i) {
        (r._userNode ? r._userNode : document.body).appendChild(t);
        var n = i ? new e.MediaElement(t, r) : new e.Element(t, r);
        return r._elements.push(n), n;
    }
    function i(e, t, i, n) {
        var o = document.createElement(t);
        "string" == typeof (i = i || "") && (i = [ i ]);
        for (var s = 0; s < i.length; s++) {
            var a = document.createElement("source");
            a.src = i[s], o.appendChild(a);
        }
        if (void 0 !== n) {
            var h = function() {
                n(), o.removeEventListener("canplaythrough", h);
            };
            o.addEventListener("canplaythrough", h);
        }
        var l = r(o, e, !0);
        return l.loadedmetadata = !1, o.addEventListener("loadedmetadata", function() {
            l.width = o.videoWidth, l.height = o.videoHeight, 0 === l.elt.width && (l.elt.width = o.videoWidth), 
            0 === l.elt.height && (l.elt.height = o.videoHeight), l.presetPlaybackRate && (l.elt.playbackRate = l.presetPlaybackRate, 
            delete l.presetPlaybackRate), l.loadedmetadata = !0;
        }), l;
    }
    e.prototype.select = function(r, i) {
        e._validateParameters("select", arguments);
        var n = null, o = t(i);
        return (n = "." === r[0] ? (r = r.slice(1), (n = o.getElementsByClassName(r)).length ? n[0] : null) : "#" === r[0] ? (r = r.slice(1), 
        o.getElementById(r)) : (n = o.getElementsByTagName(r)).length ? n[0] : null) ? this._wrapElement(n) : null;
    }, e.prototype.selectAll = function(r, i) {
        e._validateParameters("selectAll", arguments);
        var n, o = [], s = t(i);
        if (n = "." === r[0] ? (r = r.slice(1), s.getElementsByClassName(r)) : s.getElementsByTagName(r)) for (var a = 0; a < n.length; a++) {
            var h = this._wrapElement(n[a]);
            o.push(h);
        }
        return o;
    }, e.prototype._wrapElement = function(t) {
        var r = Array.prototype.slice.call(t.children);
        if ("INPUT" !== t.tagName || "checkbox" !== t.type) return "VIDEO" === t.tagName || "AUDIO" === t.tagName ? new e.MediaElement(t, this) : "SELECT" === t.tagName ? this.createSelect(new e.Element(t, this)) : 0 < r.length && r.every(function(e) {
            return "INPUT" === e.tagName || "LABEL" === e.tagName;
        }) ? this.createRadio(new e.Element(t, this)) : new e.Element(t, this);
        var i = new e.Element(t, this);
        return i.checked = function() {
            return 0 === arguments.length ? this.elt.checked : (arguments[0] ? this.elt.checked = !0 : this.elt.checked = !1, 
            this);
        }, i;
    }, e.prototype.removeElements = function(t) {
        e._validateParameters("removeElements", arguments);
        for (var r = 0; r < this._elements.length; r++) this._elements[r].elt instanceof HTMLCanvasElement || this._elements[r].remove();
    }, e.Element.prototype.changed = function(t) {
        return e.Element._adjustListener("change", t, this), this;
    }, e.Element.prototype.input = function(t) {
        return e.Element._adjustListener("input", t, this), this;
    }, [ "div", "p", "span" ].forEach(function(t) {
        var i = "create" + t.charAt(0).toUpperCase() + t.slice(1);
        e.prototype[i] = function(e) {
            var i = document.createElement(t);
            return i.innerHTML = void 0 === e ? "" : e, r(i, this);
        };
    }), e.prototype.createImg = function() {
        e._validateParameters("createImg", arguments);
        var t = document.createElement("img");
        t.crossOrigin = "Anonymous";
        var i, n = arguments;
        return t.src = n[0], 1 < n.length && "string" == typeof n[1] && (t.alt = n[1]), 
        t.onload = function() {
            i.width = t.offsetWidth || t.width, i.height = t.offsetHeight || t.height, 1 < n.length && "function" == typeof n[1] ? (i.fn = n[1], 
            i.fn()) : 1 < n.length && "function" == typeof n[2] && (i.fn = n[2], i.fn());
        }, i = r(t, this);
    }, e.prototype.createA = function(t, i, n) {
        e._validateParameters("createA", arguments);
        var o = document.createElement("a");
        return o.href = t, o.innerHTML = i, n && (o.target = n), r(o, this);
    }, e.prototype.createSlider = function(t, i, n, o) {
        e._validateParameters("createSlider", arguments);
        var s = document.createElement("input");
        return s.type = "range", s.min = t, s.max = i, 0 === o ? s.step = 1e-18 : o && (s.step = o), 
        "number" == typeof n && (s.value = n), r(s, this);
    }, e.prototype.createButton = function(t, i) {
        e._validateParameters("createButton", arguments);
        var n = document.createElement("button");
        return n.innerHTML = t, i && (n.value = i), r(n, this);
    }, e.prototype.createCheckbox = function() {
        e._validateParameters("createCheckbox", arguments);
        var t = document.createElement("div"), i = document.createElement("input");
        i.type = "checkbox", t.appendChild(i);
        var n = r(t, this);
        if (n.checked = function() {
            var e = n.elt.getElementsByTagName("input")[0];
            if (e) {
                if (0 === arguments.length) return e.checked;
                arguments[0] ? e.checked = !0 : e.checked = !1;
            }
            return n;
        }, this.value = function(e) {
            return n.value = e, this;
        }, arguments[0]) {
            var o = Math.random().toString(36).slice(2), s = document.createElement("label");
            i.setAttribute("id", o), s.htmlFor = o, n.value(arguments[0]), s.appendChild(document.createTextNode(arguments[0])), 
            t.appendChild(s);
        }
        return arguments[1] && (i.checked = !0), n;
    }, e.prototype.createSelect = function() {
        var t, i;
        e._validateParameters("createSelect", arguments);
        var n = arguments[0];
        return "object" == typeof n && "SELECT" === n.elt.nodeName ? (i = n, t = this.elt = n.elt) : (t = document.createElement("select"), 
        n && "boolean" == typeof n && t.setAttribute("multiple", "true"), i = r(t, this)), 
        i.option = function(e, r) {
            for (var i, n = 0; n < this.elt.length; n++) if (this.elt[n].innerHTML === e) {
                i = n;
                break;
            }
            if (void 0 !== i) !1 === r ? this.elt.remove(i) : this.elt[i].innerHTML === this.elt[i].value ? this.elt[i].innerHTML = this.elt[i].value = r : this.elt[i].value = r; else {
                var o = document.createElement("option");
                o.innerHTML = e, 1 < arguments.length ? o.value = r : o.value = e, t.appendChild(o);
            }
        }, i.selected = function(e) {
            var t, r = [];
            if (0 < arguments.length) {
                for (t = 0; t < this.elt.length; t++) e.toString() === this.elt[t].value && (this.elt.selectedIndex = t);
                return this;
            }
            if (this.elt.getAttribute("multiple")) {
                for (t = 0; t < this.elt.selectedOptions.length; t++) r.push(this.elt.selectedOptions[t].value);
                return r;
            }
            return this.elt.value;
        }, i;
    }, e.prototype.createRadio = function(t) {
        e._validateParameters("createRadio", arguments);
        var i, n, o = document.querySelectorAll("input[type=radio]"), s = 0;
        if (1 < o.length) for (var a = o.length, h = o[0].name, l = o[1].name, u = s = 1; u < a; u++) h !== (l = o[u].name) && s++, 
        h = l; else 1 === o.length && (s = 1);
        "object" == typeof t ? (n = t, i = this.elt = t.elt) : (i = document.createElement("div"), 
        n = r(i, this)), n._getInputChildrenArray = function() {
            return Array.prototype.slice.call(this.elt.children).filter(function(e) {
                return "INPUT" === e.tagName;
            });
        };
        var c = -1;
        return n.option = function(e, t) {
            var r = document.createElement("input");
            if (r.type = "radio", r.innerHTML = e, r.value = t || e, r.setAttribute("name", "defaultradio" + s), 
            i.appendChild(r), e) {
                c++;
                var n = document.createElement("label");
                r.setAttribute("id", "defaultradio" + s + "-" + c), n.htmlFor = "defaultradio" + s + "-" + c, 
                n.appendChild(document.createTextNode(e)), i.appendChild(n);
            }
            return r;
        }, n.selected = function(e) {
            var t, r = n._getInputChildrenArray();
            if (e) {
                for (t = 0; t < r.length; t++) r[t].value === e && (r[t].checked = !0);
                return this;
            }
            for (t = 0; t < r.length; t++) if (!0 === r[t].checked) return r[t].value;
        }, n.value = function(e) {
            var t, r = n._getInputChildrenArray();
            if (e) {
                for (t = 0; t < r.length; t++) r[t].value === e && (r[t].checked = !0);
                return this;
            }
            for (t = 0; t < r.length; t++) if (!0 === r[t].checked) return r[t].value;
            return "";
        }, n;
    }, e.prototype.createColorPicker = function(t) {
        e._validateParameters("createColorPicker", arguments);
        var i, n = document.createElement("input");
        return n.type = "color", t ? t instanceof e.Color ? n.value = t.toString("#rrggbb") : (e.prototype._colorMode = "rgb", 
        e.prototype._colorMaxes = {
            rgb: [ 255, 255, 255, 255 ],
            hsb: [ 360, 100, 100, 1 ],
            hsl: [ 360, 100, 100, 1 ]
        }, n.value = e.prototype.color(t).toString("#rrggbb")) : n.value = "#000000", (i = r(n, this)).color = function() {
            return t.mode && (e.prototype._colorMode = t.mode), t.maxes && (e.prototype._colorMaxes = t.maxes), 
            e.prototype.color(this.elt.value);
        }, i;
    }, e.prototype.createInput = function(t, i) {
        e._validateParameters("createInput", arguments);
        var n = document.createElement("input");
        return n.type = i || "text", t && (n.value = t), r(n, this);
    }, e.prototype.createFileInput = function(t, i) {
        if (e._validateParameters("createFileInput", arguments), window.File && window.FileReader && window.FileList && window.Blob) {
            var n = document.createElement("input");
            return n.type = "file", i && (n.multiple = "multiple"), n.addEventListener("change", function(r) {
                for (var i = r.target.files, n = 0; n < i.length; n++) {
                    var o = i[n];
                    e.File._load(o, t);
                }
            }, !1), r(n, this);
        }
        console.log("The File APIs are not fully supported in this browser. Cannot create element.");
    }, e.prototype.createVideo = function(t, r) {
        return e._validateParameters("createVideo", arguments), i(this, "video", t, r);
    }, e.prototype.createAudio = function(t, r) {
        return e._validateParameters("createAudio", arguments), i(this, "audio", t, r);
    }, e.prototype.VIDEO = "video", e.prototype.AUDIO = "audio", void 0 === navigator.mediaDevices && (navigator.mediaDevices = {}), 
    void 0 === navigator.mediaDevices.getUserMedia && (navigator.mediaDevices.getUserMedia = function(e) {
        var t = navigator.webkitGetUserMedia || navigator.mozGetUserMedia;
        return t ? new Promise(function(r, i) {
            t.call(navigator, e, r, i);
        }) : Promise.reject(new Error("getUserMedia is not implemented in this browser"));
    }), e.prototype.createCapture = function() {
        e._validateParameters("createCapture", arguments);
        for (var t, i, n = !0, o = !0, s = 0; s < arguments.length; s++) arguments[s] === e.prototype.VIDEO ? o = !1 : arguments[s] === e.prototype.AUDIO ? n = !1 : "object" == typeof arguments[s] ? t = arguments[s] : "function" == typeof arguments[s] && (i = arguments[s]);
        if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) throw "getUserMedia not supported in this browser";
        var a = document.createElement("video");
        a.setAttribute("playsinline", ""), t || (t = {
            video: n,
            audio: o
        }), navigator.mediaDevices.getUserMedia(t).then(function(e) {
            try {
                "srcObject" in a ? a.srcObject = e : a.src = window.URL.createObjectURL(e);
            } catch (t) {
                a.src = e;
            }
            i && i(e);
        }, function(e) {
            console.log(e);
        });
        var h = r(a, this, !0);
        return h.loadedmetadata = !1, a.addEventListener("loadedmetadata", function() {
            a.play(), a.width ? (h.width = a.videoWidth = a.width, h.height = a.videoHeight = a.height) : (h.width = h.elt.width = a.videoWidth, 
            h.height = h.elt.height = a.videoHeight), h.loadedmetadata = !0;
        }), h;
    }, e.prototype.createElement = function(t, i) {
        e._validateParameters("createElement", arguments);
        var n = document.createElement(t);
        return void 0 !== i && (n.innerHTML = i), r(n, this);
    }, e.Element.prototype.addClass = function(e) {
        return this.elt.className ? this.hasClass(e) || (this.elt.className = this.elt.className + " " + e) : this.elt.className = e, 
        this;
    }, e.Element.prototype.removeClass = function(e) {
        return this.elt.classList.remove(e), this;
    }, e.Element.prototype.hasClass = function(e) {
        return this.elt.classList.contains(e);
    }, e.Element.prototype.toggleClass = function(e) {
        return this.elt.classList.contains(e) ? this.elt.classList.remove(e) : this.elt.classList.add(e), 
        this;
    }, e.Element.prototype.child = function(t) {
        return void 0 === t ? this.elt.childNodes : ("string" == typeof t ? ("#" === t[0] && (t = t.substring(1)), 
        t = document.getElementById(t)) : t instanceof e.Element && (t = t.elt), this.elt.appendChild(t), 
        this);
    }, e.Element.prototype.center = function(e) {
        var t = this.elt.style.display, r = "none" === this.elt.style.display, i = "none" === this.parent().style.display, n = {
            x: this.elt.offsetLeft,
            y: this.elt.offsetTop
        };
        r && this.show(), this.elt.style.display = "block", this.position(0, 0), i && (this.parent().style.display = "block");
        var o = Math.abs(this.parent().offsetWidth - this.elt.offsetWidth), s = Math.abs(this.parent().offsetHeight - this.elt.offsetHeight), a = n.y, h = n.x;
        return "both" === e || void 0 === e ? this.position(o / 2, s / 2) : "horizontal" === e ? this.position(o / 2, a) : "vertical" === e && this.position(h, s / 2), 
        this.style("display", t), r && this.hide(), i && (this.parent().style.display = "none"), 
        this;
    }, e.Element.prototype.html = function() {
        return 0 === arguments.length ? this.elt.innerHTML : (arguments[1] ? this.elt.innerHTML += arguments[0] : this.elt.innerHTML = arguments[0], 
        this);
    }, e.Element.prototype.position = function() {
        return 0 === arguments.length ? {
            x: this.elt.offsetLeft,
            y: this.elt.offsetTop
        } : (this.elt.style.position = "absolute", this.elt.style.left = arguments[0] + "px", 
        this.elt.style.top = arguments[1] + "px", this.x = arguments[0], this.y = arguments[1], 
        this);
    }, e.Element.prototype._translate = function() {
        this.elt.style.position = "absolute";
        var e = "";
        return this.elt.style.transform && (e = (e = this.elt.style.transform.replace(/translate3d\(.*\)/g, "")).replace(/translate[X-Z]?\(.*\)/g, "")), 
        2 === arguments.length ? this.elt.style.transform = "translate(" + arguments[0] + "px, " + arguments[1] + "px)" : 2 < arguments.length && (this.elt.style.transform = "translate3d(" + arguments[0] + "px," + arguments[1] + "px," + arguments[2] + "px)", 
        3 === arguments.length ? this.elt.parentElement.style.perspective = "1000px" : this.elt.parentElement.style.perspective = arguments[3] + "px"), 
        this.elt.style.transform += e, this;
    }, e.Element.prototype._rotate = function() {
        var e = "";
        return this.elt.style.transform && (e = (e = this.elt.style.transform.replace(/rotate3d\(.*\)/g, "")).replace(/rotate[X-Z]?\(.*\)/g, "")), 
        1 === arguments.length ? this.elt.style.transform = "rotate(" + arguments[0] + "deg)" : 2 === arguments.length ? this.elt.style.transform = "rotate(" + arguments[0] + "deg, " + arguments[1] + "deg)" : 3 === arguments.length && (this.elt.style.transform = "rotateX(" + arguments[0] + "deg)", 
        this.elt.style.transform += "rotateY(" + arguments[1] + "deg)", this.elt.style.transform += "rotateZ(" + arguments[2] + "deg)"), 
        this.elt.style.transform += e, this;
    }, e.Element.prototype.style = function(t, r) {
        if (r instanceof e.Color && (r = "rgba(" + r.levels[0] + "," + r.levels[1] + "," + r.levels[2] + "," + r.levels[3] / 255 + ")"), 
        void 0 === r) {
            if (-1 === t.indexOf(":")) return window.getComputedStyle(this.elt).getPropertyValue(t);
            for (var i = t.split(";"), n = 0; n < i.length; n++) {
                var o = i[n].split(":");
                o[0] && o[1] && (this.elt.style[o[0].trim()] = o[1].trim());
            }
        } else if (this.elt.style[t] = r, "width" === t || "height" === t || "left" === t || "top" === t) {
            var s = r.replace(/\D+/g, "");
            this[t] = parseInt(s, 10);
        }
        return this;
    }, e.Element.prototype.attribute = function(e, t) {
        if (null == this.elt.firstChild || "checkbox" !== this.elt.firstChild.type && "radio" !== this.elt.firstChild.type) return void 0 === t ? this.elt.getAttribute(e) : (this.elt.setAttribute(e, t), 
        this);
        if (void 0 === t) return this.elt.firstChild.getAttribute(e);
        for (var r = 0; r < this.elt.childNodes.length; r++) this.elt.childNodes[r].setAttribute(e, t);
    }, e.Element.prototype.removeAttribute = function(e) {
        if (null != this.elt.firstChild && ("checkbox" === this.elt.firstChild.type || "radio" === this.elt.firstChild.type)) for (var t = 0; t < this.elt.childNodes.length; t++) this.elt.childNodes[t].removeAttribute(e);
        return this.elt.removeAttribute(e), this;
    }, e.Element.prototype.value = function() {
        return 0 < arguments.length ? (this.elt.value = arguments[0], this) : "range" === this.elt.type ? parseFloat(this.elt.value) : this.elt.value;
    }, e.Element.prototype.show = function() {
        return this.elt.style.display = "block", this;
    }, e.Element.prototype.hide = function() {
        return this.elt.style.display = "none", this;
    }, e.Element.prototype.size = function(t, r) {
        if (0 === arguments.length) return {
            width: this.elt.offsetWidth,
            height: this.elt.offsetHeight
        };
        var i = t, n = r, o = e.prototype.AUTO;
        if (i !== o || n !== o) {
            if (i === o ? i = r * this.width / this.height : n === o && (n = t * this.height / this.width), 
            this.elt instanceof HTMLCanvasElement) {
                var s, a = {}, h = this.elt.getContext("2d");
                for (s in h) a[s] = h[s];
                for (s in this.elt.setAttribute("width", i * this._pInst._pixelDensity), this.elt.setAttribute("height", n * this._pInst._pixelDensity), 
                this.elt.style.width = i + "px", this.elt.style.height = n + "px", this._pInst.scale(this._pInst._pixelDensity, this._pInst._pixelDensity), 
                a) this.elt.getContext("2d")[s] = a[s];
            } else this.elt.style.width = i + "px", this.elt.style.height = n + "px", this.elt.width = i, 
            this.elt.height = n;
            this.width = this.elt.offsetWidth, this.height = this.elt.offsetHeight, this._pInst && this._pInst._curElement && this._pInst._curElement.elt === this.elt && (this._pInst._setProperty("width", this.elt.offsetWidth), 
            this._pInst._setProperty("height", this.elt.offsetHeight));
        }
        return this;
    }, e.Element.prototype.remove = function() {
        for (var e in this._events) this.elt.removeEventListener(e, this._events[e]);
        this.elt.parentNode && this.elt.parentNode.removeChild(this.elt);
    }, e.Element.prototype.drop = function(t, r) {
        if (window.File && window.FileReader && window.FileList && window.Blob) {
            if (!this._dragDisabled) {
                this._dragDisabled = !0;
                var i = function(e) {
                    e.preventDefault();
                };
                this.elt.addEventListener("dragover", i), this.elt.addEventListener("dragleave", i);
            }
            e.Element._attachListener("drop", function(i) {
                i.preventDefault(), "function" == typeof r && r.call(this, i);
                for (var n = i.dataTransfer.files, o = 0; o < n.length; o++) {
                    var s = n[o];
                    e.File._load(s, t);
                }
            }, this);
        } else console.log("The File APIs are not fully supported in this browser.");
        return this;
    }, e.MediaElement = function(t, r) {
        e.Element.call(this, t, r);
        var i = this;
        this.elt.crossOrigin = "anonymous", this._prevTime = 0, this._cueIDCounter = 0, 
        this._cues = [], (this._pixelsState = this)._pixelDensity = 1, this._modified = !1, 
        this._pixelsDirty = !0, this._pixelsTime = -1, Object.defineProperty(i, "src", {
            get: function() {
                var e = i.elt.children[0].src, t = i.elt.src === window.location.href ? "" : i.elt.src;
                return e === window.location.href ? t : e;
            },
            set: function(e) {
                for (var r = 0; r < i.elt.children.length; r++) i.elt.removeChild(i.elt.children[r]);
                var n = document.createElement("source");
                n.src = e, t.appendChild(n), i.elt.src = e, i.modified = !0;
            }
        }), i._onended = function() {}, i.elt.onended = function() {
            i._onended(i);
        };
    }, e.MediaElement.prototype = Object.create(e.Element.prototype), e.MediaElement.prototype.play = function() {
        var e;
        return this.elt.currentTime === this.elt.duration && (this.elt.currentTime = 0), 
        1 < this.elt.readyState || this.elt.load(), (e = this.elt.play()) && e.catch && e.catch(function(e) {
            console.log("WARN: Element play method raised an error asynchronously", e);
        }), this;
    }, e.MediaElement.prototype.stop = function() {
        return this.elt.pause(), this.elt.currentTime = 0, this;
    }, e.MediaElement.prototype.pause = function() {
        return this.elt.pause(), this;
    }, e.MediaElement.prototype.loop = function() {
        return this.elt.setAttribute("loop", !0), this.play(), this;
    }, e.MediaElement.prototype.noLoop = function() {
        return this.elt.setAttribute("loop", !1), this;
    }, e.MediaElement.prototype.autoplay = function(e) {
        return this.elt.setAttribute("autoplay", e), this;
    }, e.MediaElement.prototype.volume = function(e) {
        if (void 0 === e) return this.elt.volume;
        this.elt.volume = e;
    }, e.MediaElement.prototype.speed = function(e) {
        if (void 0 === e) return this.presetPlaybackRate || this.elt.playbackRate;
        this.loadedmetadata ? this.elt.playbackRate = e : this.presetPlaybackRate = e;
    }, e.MediaElement.prototype.time = function(e) {
        return void 0 === e ? this.elt.currentTime : (this.elt.currentTime = e, this);
    }, e.MediaElement.prototype.duration = function() {
        return this.elt.duration;
    }, e.MediaElement.prototype.pixels = [], e.MediaElement.prototype._ensureCanvas = function() {
        this.canvas || this.loadPixels();
    }, e.MediaElement.prototype.loadPixels = function() {
        if (this.canvas || (this.canvas = document.createElement("canvas"), this.drawingContext = this.canvas.getContext("2d")), 
        this.loadedmetadata) {
            this.canvas.width !== this.elt.width && (this.canvas.width = this.elt.width, this.canvas.height = this.elt.height, 
            this.width = this.canvas.width, this.height = this.canvas.height, this._pixelsDirty = !0);
            var t = this.elt.currentTime;
            (this._pixelsDirty || this._pixelsTime !== t) && (this._pixelsTime = t, this._pixelsDirty = !0, 
            this.drawingContext.drawImage(this.elt, 0, 0, this.canvas.width, this.canvas.height), 
            e.Renderer2D.prototype.loadPixels.call(this));
        }
        return this.setModified(!0), this;
    }, e.MediaElement.prototype.updatePixels = function(t, r, i, n) {
        return this.loadedmetadata && (this._ensureCanvas(), e.Renderer2D.prototype.updatePixels.call(this, t, r, i, n)), 
        this.setModified(!0), this;
    }, e.MediaElement.prototype.get = function() {
        return this._ensureCanvas(), e.Renderer2D.prototype.get.apply(this, arguments);
    }, e.MediaElement.prototype._getPixel = function() {
        if (this.loadedmetadata) {
            var t = this.elt.currentTime;
            this._pixelsTime !== t ? this.loadPixels() : this._ensureCanvas();
        }
        return e.Renderer2D.prototype._getPixel.apply(this, arguments);
    }, e.MediaElement.prototype.set = function(t, r, i) {
        this.loadedmetadata && (this._ensureCanvas(), e.Renderer2D.prototype.set.call(this, t, r, i), 
        this.setModified(!0));
    }, e.MediaElement.prototype.copy = function() {
        this._ensureCanvas(), e.Renderer2D.prototype.copy.apply(this, arguments);
    }, e.MediaElement.prototype.mask = function() {
        this.loadPixels(), this.setModified(!0), e.Image.prototype.mask.apply(this, arguments);
    }, e.MediaElement.prototype.isModified = function() {
        return this._modified;
    }, e.MediaElement.prototype.setModified = function(e) {
        this._modified = e;
    }, e.MediaElement.prototype.onended = function(e) {
        return this._onended = e, this;
    }, e.MediaElement.prototype.connect = function(t) {
        var r, i;
        if ("function" == typeof e.prototype.getAudioContext) r = e.prototype.getAudioContext(), 
        i = e.soundOut.input; else try {
            i = (r = t.context).destination;
        } catch (t) {
            throw "connect() is meant to be used with Web Audio API or p5.sound.js";
        }
        this.audioSourceNode || (this.audioSourceNode = r.createMediaElementSource(this.elt), 
        this.audioSourceNode.connect(i)), t ? t.input ? this.audioSourceNode.connect(t.input) : this.audioSourceNode.connect(t) : this.audioSourceNode.connect(i);
    }, e.MediaElement.prototype.disconnect = function() {
        if (!this.audioSourceNode) throw "nothing to disconnect";
        this.audioSourceNode.disconnect();
    }, e.MediaElement.prototype.showControls = function() {
        this.elt.style["text-align"] = "inherit", this.elt.controls = !0;
    }, e.MediaElement.prototype.hideControls = function() {
        this.elt.controls = !1;
    };
    var n = function(e, t, r, i) {
        this.callback = e, this.time = t, this.id = r, this.val = i;
    };
    e.MediaElement.prototype.addCue = function(e, t, r) {
        var i = this._cueIDCounter++, o = new n(t, e, i, r);
        return this._cues.push(o), this.elt.ontimeupdate || (this.elt.ontimeupdate = this._onTimeUpdate.bind(this)), 
        i;
    }, e.MediaElement.prototype.removeCue = function(e) {
        for (var t = 0; t < this._cues.length; t++) this._cues[t].id === e && (console.log(e), 
        this._cues.splice(t, 1));
        0 === this._cues.length && (this.elt.ontimeupdate = null);
    }, e.MediaElement.prototype.clearCues = function() {
        this._cues = [], this.elt.ontimeupdate = null;
    }, e.MediaElement.prototype._onTimeUpdate = function() {
        for (var e = this.time(), t = 0; t < this._cues.length; t++) {
            var r = this._cues[t].time, i = this._cues[t].val;
            this._prevTime < r && r <= e && this._cues[t].callback(i);
        }
        this._prevTime = e;
    }, e.File = function(e, t) {
        this.file = e, this._pInst = t;
        var r = e.type.split("/");
        this.type = r[0], this.subtype = r[1], this.name = e.name, this.size = e.size, this.data = void 0;
    }, e.File._createLoader = function(t, r) {
        var i = new FileReader();
        return i.onload = function(i) {
            var n = new e.File(t);
            n.data = i.target.result, r(n);
        }, i;
    }, e.File._load = function(t, r) {
        if (/^text\//.test(t.type)) e.File._createLoader(t, r).readAsText(t); else if (/^(video|audio)\//.test(t.type)) {
            var i = new e.File(t);
            i.data = URL.createObjectURL(t), r(i);
        } else e.File._createLoader(t, r).readAsDataURL(t);
    };
}), function(e, t) {
    "function" == typeof define && define.amd ? define("p5.play", [ "p5" ], function(e) {
        t(e);
    }) : "object" == typeof exports ? t(require("../p5")) : t(e.p5);
}(this, function(e) {
    function t(t, r) {
        Object.defineProperty(e.prototype, t, {
            configurable: !0,
            enumerable: !0,
            get: function() {
                var i = this instanceof e && !this._isGlobal ? this : window;
                return void 0 === i._p5PlayProperties && (i._p5PlayProperties = {}), t in i._p5PlayProperties || (i._p5PlayProperties[t] = r.call(i)), 
                i._p5PlayProperties[t];
            }
        });
    }
    function r(e) {
        if ("function" != typeof e) throw new Error("constructor must be a function");
        return function() {
            var t = this;
            function r() {
                var r = Array.prototype.slice.call(arguments);
                return e.apply(this, [ t ].concat(r));
            }
            return r.prototype = e.prototype, r;
        };
    }
    function i(e) {
        return function(t) {
            var r = e[t];
            if ("function" != typeof r) throw new Error('"' + t + '" is not a p5 method');
            return r.bind(e);
        };
    }
    e.prototype.registerMethod("init", function() {
        this.camera = new c(this, 0, 0, 1), this.camera.init = !1;
    });
    var n = e.prototype.abs, o = e.prototype.radians, s = e.prototype.dist, a = e.prototype.degrees, h = e.prototype.pow, l = e.prototype.round;
    t("allSprites", function() {
        return new e.prototype.Group();
    }), e.prototype.spriteUpdate = !0, e.prototype.createSprite = function(e, t, r, i) {
        var n = new u(this, e, t, r, i);
        return n.depth = this.allSprites.maxDepth() + 1, this.allSprites.add(n), n;
    }, e.prototype.removeSprite = function(e) {
        e.remove();
    }, e.prototype.updateSprites = function(e) {
        if (!1 === e && (this.spriteUpdate = !1), !0 === e && (this.spriteUpdate = !0), 
        this.spriteUpdate) for (var t = 0; t < this.allSprites.size(); t++) this.allSprites.get(t).update();
    }, e.prototype.getSprites = function() {
        if (0 === arguments.length) return this.allSprites.toArray();
        for (var e = [], t = 0; t < arguments.length; t++) for (var r = 0; r < this.allSprites.size(); r++) this.allSprites.get(r).isTagged(arguments[t]) && e.push(this.allSprites.get(r));
        return e;
    }, e.prototype.drawSprites = function(e) {
        if ("function" != typeof (e = e || this.allSprites).draw) throw "Error: with drawSprites you can only draw all sprites or a group";
        e.draw();
    }, e.prototype.drawSprite = function(e) {
        e && e.display();
    }, e.prototype.loadAnimation = function() {
        return y(this.Animation, arguments);
    }, e.prototype.loadSpriteSheet = function() {
        return y(this.SpriteSheet, arguments);
    }, e.prototype.animation = function(e, t, r) {
        e.draw(t, r);
    }, t("_p5play", function() {
        return {
            keyStates: {},
            mouseStates: {}
        };
    });
    function u(t, r, c, p, d) {
        var v = i(t), b = v("createVector"), x = v("color"), _ = v("random"), w = v("print"), S = v("push"), T = v("pop"), E = v("colorMode"), M = v("noStroke"), C = v("rectMode"), L = v("ellipseMode"), R = v("imageMode"), A = v("translate"), D = v("scale"), P = v("rotate"), k = v("stroke"), I = v("strokeWeight"), O = v("line"), U = v("noFill"), N = v("fill"), B = v("textAlign"), F = v("textSize"), G = v("text"), z = v("rect"), j = v("cos"), H = v("sin"), V = v("atan2"), W = t.quadTree, q = t.camera, X = e.prototype.RGB, Y = e.prototype.CENTER, Z = e.prototype.LEFT, Q = e.prototype.BOTTOM;
        this.position = b(r, c), this.previousPosition = b(r, c), this.newPosition = b(r, c), 
        this.deltaX = 0, this.deltaY = 0, this.velocity = b(0, 0), this.maxSpeed = -1, this.friction = 0, 
        this.collider = void 0, this.colliderType = "none", this.touching = {}, this.touching.left = !1, 
        this.touching.right = !1, this.touching.top = !1, this.touching.bottom = !1, this.mass = 1, 
        this.immovable = !1, this.restitution = 1, Object.defineProperty(this, "rotation", {
            enumerable: !0,
            get: function() {
                return this._rotation;
            },
            set: function(e) {
                this._rotation = e, this.rotateToDirection && this.setSpeed(this.getSpeed(), e);
            }
        }), this._rotation = 0, this.rotationSpeed = 0, this.rotateToDirection = !1, this.depth = 0, 
        this.scale = 1;
        var K = 1, $ = 1;
        this.visible = !0, this.mouseActive = !1, this.mouseIsOver = !1, this.mouseIsPressed = !1, 
        this._internalWidth = p, this._internalHeight = d, Object.defineProperty(this, "width", {
            enumerable: !0,
            configurable: !0,
            get: function() {
                return this._internalWidth;
            },
            set: function(e) {
                this._internalWidth = e;
            }
        }), this.width = void 0 === p ? 100 : p, Object.defineProperty(this, "height", {
            enumerable: !0,
            configurable: !0,
            get: function() {
                return this._internalHeight;
            },
            set: function(e) {
                this._internalHeight = e;
            }
        }), this.height = void 0 === d ? 100 : d, this.originalWidth = this._internalWidth, 
        this.originalHeight = this._internalHeight, this.removed = !1, this.life = -1, this.debug = !1, 
        this.shapeColor = x(_(255), _(255), _(255)), this.groups = [];
        var J = {}, ee = "";
        this.animation = void 0, this._syncAnimationSizes = function() {
            "default" === this.colliderType && 1 !== J[ee].getWidth() && 1 !== J[ee].getHeight() && (this.collider = this.getBoundingBox(), 
            this.colliderType = "image", this._internalWidth = J[ee].getWidth() * n(this._getScaleX()), 
            this._internalHeight = J[ee].getHeight() * n(this._getScaleY())), (J[ee].frameChanged || void 0 === this.width || void 0 === this.height) && (this._internalWidth = J[ee].getWidth() * n(this._getScaleX()), 
            this._internalHeight = J[ee].getHeight() * n(this._getScaleY()));
        }, this.update = function() {
            if (!this.removed) {
                if (this.newPosition !== this.position ? this.previousPosition = b(this.newPosition.x, this.newPosition.y) : this.previousPosition = b(this.position.x, this.position.y), 
                this.velocity.x *= 1 - this.friction, this.velocity.y *= 1 - this.friction, -1 !== this.maxSpeed && this.limitSpeed(this.maxSpeed), 
                this.rotateToDirection && this.velocity.mag() > 0 && (this._rotation = this.getDirection()), 
                this.rotation += this.rotationSpeed, this.position.x += this.velocity.x, this.position.y += this.velocity.y, 
                this.newPosition = b(this.position.x, this.position.y), this.deltaX = this.position.x - this.previousPosition.x, 
                this.deltaY = this.position.y - this.previousPosition.y, J[ee] && (J[ee].update(), 
                this._syncAnimationSizes()), this.collider) {
                    var e;
                    if (this.collider instanceof m) e = t._angleMode === t.RADIANS ? o(this.rotation) : this.rotation, 
                    "custom" === this.colliderType ? (this.collider.extents.x = this.collider.originalExtents.x * n(this._getScaleX()) * n(j(e)) + this.collider.originalExtents.y * n(this._getScaleY()) * n(H(e)), 
                    this.collider.extents.y = this.collider.originalExtents.x * n(this._getScaleX()) * n(H(e)) + this.collider.originalExtents.y * n(this._getScaleY()) * n(j(e))) : "default" === this.colliderType ? (this.collider.extents.x = this._internalWidth * n(this._getScaleX()) * n(j(e)) + this._internalHeight * n(this._getScaleY()) * n(H(e)), 
                    this.collider.extents.y = this._internalWidth * n(this._getScaleX()) * n(H(e)) + this._internalHeight * n(this._getScaleY()) * n(j(e))) : "image" === this.colliderType && (this.collider.extents.x = this._internalWidth * n(j(e)) + this._internalHeight * n(H(e)), 
                    this.collider.extents.y = this._internalWidth * n(H(e)) + this._internalHeight * n(j(e)));
                    this.collider instanceof f && (this.collider.radius = this.collider.originalRadius * n(this.scale));
                }
                this.mouseActive ? (this.collider || this.setDefaultCollider(), this.mouseUpdate()) : "function" != typeof this.onMouseOver && "function" != typeof this.onMouseOut && "function" != typeof this.onMousePressed && "function" != typeof this.onMouseReleased || (this.mouseActive = !0, 
                this.collider || this.setDefaultCollider(), this.mouseUpdate()), this.life > 0 && this.life--, 
                0 === this.life && this.remove();
            }
        }, this.setDefaultCollider = function() {
            J[ee] && 1 !== J[ee].getWidth() && 1 !== J[ee].getHeight() ? (this.collider = this.getBoundingBox(), 
            this._internalWidth = J[ee].getWidth() * n(this._getScaleX()), this._internalHeight = J[ee].getHeight() * n(this._getScaleY()), 
            this.colliderType = "image") : J[ee] && 1 === J[ee].getWidth() && 1 === J[ee].getHeight() || (this.collider = new m(t, this.position, b(this._internalWidth, this._internalHeight)), 
            this.colliderType = "default"), t.quadTree.insert(this);
        }, this.mouseUpdate = function() {
            var e, r = this.mouseIsOver, i = this.mouseIsPressed;
            this.mouseIsOver = !1, this.mouseIsPressed = !1, e = q.active ? b(q.mouseX, q.mouseY) : b(t.mouseX, t.mouseY), 
            this.collider && (this.collider instanceof f ? s(e.x, e.y, this.collider.center.x, this.collider.center.y) < this.collider.radius && (this.mouseIsOver = !0) : this.collider instanceof m && e.x > this.collider.left() && e.y > this.collider.top() && e.x < this.collider.right() && e.y < this.collider.bottom() && (this.mouseIsOver = !0), 
            this.mouseIsOver && t.mouseIsPressed && (this.mouseIsPressed = !0), !r && this.mouseIsOver && void 0 !== this.onMouseOver && ("function" == typeof this.onMouseOver ? this.onMouseOver.call(this, this) : w("Warning: onMouseOver should be a function")), 
            r && !this.mouseIsOver && void 0 !== this.onMouseOut && ("function" == typeof this.onMouseOut ? this.onMouseOut.call(this, this) : w("Warning: onMouseOut should be a function")), 
            !i && this.mouseIsPressed && void 0 !== this.onMousePressed && ("function" == typeof this.onMousePressed ? this.onMousePressed.call(this, this) : w("Warning: onMousePressed should be a function")), 
            !i || t.mouseIsPressed || this.mouseIsPressed || void 0 === this.onMouseReleased || ("function" == typeof this.onMouseReleased ? this.onMouseReleased.call(this, this) : w("Warning: onMouseReleased should be a function")));
        }, this.setCollider = function(e, r, i, n, o) {
            if ("rectangle" !== e && "circle" !== e) throw new TypeError('setCollider expects the first argument to be either "circle" or "rectangle"');
            if ("circle" === e && arguments.length > 1 && arguments.length < 4) throw new TypeError('Usage: setCollider("circle") or setCollider("circle", offsetX, offsetY, radius)');
            if ("circle" === e && arguments.length > 4) t._warn('Extra parameters to setCollider were ignored. Usage: setCollider("circle") or setCollider("circle", offsetX, offsetY, radius)'); else {
                if ("rectangle" === e && arguments.length > 1 && arguments.length < 5) throw new TypeError('Usage: setCollider("rectangle") or setCollider("rectangle", offsetX, offsetY, width, height)');
                "rectangle" === e && arguments.length > 5 && t._warn('Extra parameters to setCollider were ignored. Usage: setCollider("rectangle") or setCollider("rectangle", offsetX, offsetY, width, height)');
            }
            this.colliderType = "custom";
            var s = b(r, i);
            "rectangle" === e && 1 === arguments.length ? this.collider = new m(t, this.position, b(this.width, this.height)) : "rectangle" === e && arguments.length >= 5 ? this.collider = new m(t, this.position, b(n, o), s) : "circle" === e && 1 === arguments.length ? this.collider = new f(t, this.position, Math.floor(Math.max(this.width, this.height) / 2)) : "circle" === e && arguments.length >= 4 && (this.collider = new f(t, this.position, n, s)), 
            W.insert(this);
        }, this.getBoundingBox = function() {
            var e = J[ee].getWidth() * n(this._getScaleX()), r = J[ee].getHeight() * n(this._getScaleY());
            return new m(t, this.position, b(e, r));
        }, this.mirrorX = function(e) {
            if (1 !== e && -1 !== e) return K;
            K = e;
        }, this.mirrorY = function(e) {
            if (1 !== e && -1 !== e) return $;
            $ = e;
        }, this._getScaleX = function() {
            return this.scale;
        }, this._getScaleY = function() {
            return this.scale;
        }, this.display = function() {
            this.visible && !this.removed && (S(), E(X), M(), C(Y), L(Y), R(Y), A(this.position.x, this.position.y), 
            D(this._getScaleX() * K, this._getScaleY() * $), t._angleMode === t.RADIANS ? P(o(this.rotation)) : P(this.rotation), 
            this.draw(), T(), this.debug && (S(), k(0, 255, 0), I(1), O(this.position.x - 10, this.position.y, this.position.x + 10, this.position.y), 
            O(this.position.x, this.position.y - 10, this.position.x, this.position.y + 10), 
            U(), M(), N(0, 255, 0), B(Z, Q), F(16), G(this.depth + "", this.position.x + 4, this.position.y - 2), 
            U(), k(0, 255, 0), void 0 !== this.collider && this.collider.draw(), T()));
        }, this.draw = function() {
            "" !== ee && J ? J[ee] && J[ee].draw(0, 0, 0) : (M(), N(this.shapeColor), z(0, 0, this._internalWidth, this._internalHeight));
        }, this.remove = function() {
            for (this.removed = !0, W.removeObject(this); this.groups.length > 0; ) this.groups[0].remove(this);
        }, this.setVelocity = function(e, t) {
            this.velocity.x = e, this.velocity.y = t;
        }, this.getSpeed = function() {
            return this.velocity.mag();
        }, this.getDirection = function() {
            var e = V(this.velocity.y, this.velocity.x);
            return isNaN(e) && (e = 0), t._angleMode === t.RADIANS && (e = a(e)), e;
        }, this.addToGroup = function(e) {
            e instanceof Array ? e.add(this) : w("addToGroup error: " + e + " is not a group");
        }, this.limitSpeed = function(e) {
            var t = this.getSpeed();
            if (n(t) > e) {
                var r = e / n(t);
                this.velocity.x *= r, this.velocity.y *= r;
            }
        }, this.setSpeed = function(e, r) {
            var i;
            i = void 0 === r ? 0 !== this.velocity.x || 0 !== this.velocity.y ? t.atan2(this.velocity.y, this.velocity.x) : t._angleMode === t.RADIANS ? o(this._rotation) : this._rotation : t._angleMode === t.RADIANS ? o(r) : r, 
            this.velocity.x = j(i) * e, this.velocity.y = H(i) * e;
        }, this.addSpeed = function(e, r) {
            var i;
            i = t._angleMode === t.RADIANS ? o(r) : r, this.velocity.x += j(i) * e, this.velocity.y += H(i) * e;
        }, this.attractionPoint = function(e, t, r) {
            var i = V(r - this.position.y, t - this.position.x);
            this.velocity.x += j(i) * e, this.velocity.y += H(i) * e;
        }, this.addImage = function() {
            if ("string" == typeof arguments[0] && arguments[1] instanceof e.Image) this.addAnimation(arguments[0], arguments[1]); else {
                if (!(arguments[0] instanceof e.Image)) throw "addImage error: allowed usages are <image> or <label>, <image>";
                this.addAnimation("normal", arguments[0]);
            }
        }, this.addAnimation = function(e) {
            var r;
            if ("string" != typeof e) return w("Sprite.addAnimation error: the first argument must be a label (String)"), 
            -1;
            if (arguments.length < 2) return w("addAnimation error: you must specify a label and n frame images"), 
            -1;
            if (arguments[1] instanceof g) {
                var i = arguments[1], o = i.clone();
                return J[e] = o, "" === ee && (ee = e, this.animation = o), o.isSpriteAnimation = !0, 
                this._internalWidth = o.getWidth() * n(this._getScaleX()), this._internalHeight = o.getHeight() * n(this._getScaleY()), 
                o;
            }
            for (var s = [], a = 1; a < arguments.length; a++) s.push(arguments[a]);
            return r = y(t.Animation, s), J[e] = r, "" === ee && (ee = e, this.animation = r), 
            r.isSpriteAnimation = !0, this._internalWidth = r.getWidth() * n(this._getScaleX()), 
            this._internalHeight = r.getHeight() * n(this._getScaleY()), r;
        }, this.changeImage = function(e) {
            this.changeAnimation(e);
        }, this.getAnimationLabel = function() {
            return ee;
        }, this.changeAnimation = function(e) {
            J[e] ? (ee = e, this.animation = J[e]) : w("changeAnimation error: no animation labeled " + e);
        }, this.overlapPixel = function(e, t) {
            var r = b(e, t), i = this.animation.getFrameImage();
            return r.x -= this.position.x - i.width / 2, r.y -= this.position.y - i.height / 2, 
            !(r.x < 0 || r.x > i.width || r.y < 0 || r.y > i.height) && (0 === this.rotation && 1 === this.scale ? 255 === i.get(r.x, r.y)[3] : (w("Error: overlapPixel doesn't work with scaled or rotated sprites yet"), 
            !1));
        }, this.overlapPoint = function(e, t) {
            var r = b(e, t);
            if (this.collider || this.setDefaultCollider(), void 0 !== this.collider) {
                if (this.collider instanceof m) return r.x > this.collider.left() && r.x < this.collider.right() && r.y > this.collider.top() && r.y < this.collider.bottom();
                if (this.collider instanceof f) {
                    var i = this.collider.radius * this.collider.radius;
                    return h(this.collider.center.x - r.x, 2) + h(this.collider.center.y - r.y, 2) < i;
                }
                return !1;
            }
            return !1;
        }, this.overlap = function(e, t) {
            return this.AABBops("overlap", e, t);
        }, this.collide = function(e, t) {
            return this.AABBops("collide", e, t);
        }, this.displace = function(e, t) {
            return this.AABBops("displace", e, t);
        }, this.bounce = function(e, t) {
            return this.AABBops("bounce", e, t);
        }, this.AABBops = function(r, i, o) {
            this.touching.left = !1, this.touching.right = !1, this.touching.top = !1, this.touching.bottom = !1;
            var s = !1, a = [];
            if (i instanceof u) a.push(i); else {
                if (!(i instanceof Array)) throw "Error: overlap can only be checked between sprites or groups";
                void 0 !== W && W.active && (a = W.retrieveFromGroup(this, i)), 0 === a.length && (a = i);
            }
            for (var h = 0; h < a.length; h++) if (this !== a[h] && !this.removed) {
                var c, p = a[h];
                if (void 0 === this.collider && this.setDefaultCollider(), void 0 === p.collider && p.setDefaultCollider(), 
                void 0 !== this.collider && void 0 !== p.collider) if ("overlap" === r) (this.collider instanceof f ? p.collider.overlap(this.collider) : this.collider.overlap(p.collider)) && (s = !0, 
                void 0 !== o && "function" == typeof o && o.call(this, this, p)); else if ("collide" === r || "displace" === r || "bounce" === r) {
                    c = b(0, 0);
                    var d = n(this.velocity.x - p.velocity.x) >= p.collider.extents.x / 2 && 0 === l(this.deltaX - this.velocity.x), g = n(this.velocity.y - p.velocity.y) >= p.collider.size().y / 2 && 0 === l(this.deltaY - this.velocity.y);
                    if (d || g) {
                        var v = b((this.position.x + this.previousPosition.x) / 2, (this.position.y + this.previousPosition.y) / 2), y = b(n(this.position.x - this.previousPosition.x) + this.collider.extents.x, n(this.position.y - this.previousPosition.y) + this.collider.extents.y);
                        new m(t, v, y, this.collider.offset).overlap(p.collider) && (d && (this.velocity.x < 0 ? c.x = p.collider.right() - this.collider.left() + 1 : this.velocity.x > 0 && (c.x = p.collider.left() - this.collider.right() - 1)), 
                        g && (this.velocity.y > 0 ? c.y = p.collider.top() - this.collider.bottom() - 1 : this.velocity.y < 0 && (c.y = p.collider.bottom() - this.collider.top() + 1)));
                    } else c = this.collider instanceof f ? p.collider.collide(this.collider).mult(-1) : this.collider.collide(p.collider);
                    if (0 !== c.x || 0 !== c.y) {
                        var x, _, w, S;
                        if ("displace" !== r || p.immovable ? "collide" !== r && "bounce" !== r || this.immovable || (this.position.add(c), 
                        this.previousPosition = b(this.position.x, this.position.y), this.newPosition = b(this.position.x, this.position.y)) : p.position.sub(c), 
                        c.x > 0 && (this.touching.left = !0), c.x < 0 && (this.touching.right = !0), c.y < 0 && (this.touching.bottom = !0), 
                        c.y > 0 && (this.touching.top = !0), "bounce" === r) if (this.collider instanceof f && p.collider instanceof f) {
                            var T = e.Vector.sub(this.position, p.position), E = e.Vector.sub(p.position, this.position), M = T.magSq(), C = this.mass + p.mass, L = 0, R = 0;
                            this.immovable ? R = 2 : p.immovable ? L = 2 : (L = 2 * p.mass / C, R = 2 * this.mass / C);
                            var A = T.mult(L * e.Vector.sub(this.velocity, p.velocity).dot(T) / M), D = E.mult(R * e.Vector.sub(p.velocity, this.velocity).dot(E) / M);
                            this.velocity.sub(A.mult(this.restitution)), p.velocity.sub(D.mult(p.restitution));
                        } else p.immovable ? (x = -this.velocity.x + p.velocity.x, _ = -this.velocity.y + p.velocity.y) : (x = (this.velocity.x * (this.mass - p.mass) + 2 * p.mass * p.velocity.x) / (this.mass + p.mass), 
                        _ = (this.velocity.y * (this.mass - p.mass) + 2 * p.mass * p.velocity.y) / (this.mass + p.mass), 
                        w = (p.velocity.x * (p.mass - this.mass) + 2 * this.mass * this.velocity.x) / (this.mass + p.mass), 
                        S = (p.velocity.y * (p.mass - this.mass) + 2 * this.mass * this.velocity.y) / (this.mass + p.mass)), 
                        n(c.x) > n(c.y) && (this.immovable || (this.velocity.x = x * this.restitution), 
                        p.immovable || (p.velocity.x = w * p.restitution)), n(c.x) < n(c.y) && (this.immovable || (this.velocity.y = _ * this.restitution), 
                        p.immovable || (p.velocity.y = S * p.restitution));
                        void 0 !== o && "function" == typeof o && o.call(this, this, p), s = !0;
                    }
                }
            }
            return s;
        };
    }
    function c(e, t, r, i) {
        this.position = e.createVector(t, r), this.zoom = i, this.mouseX = e.mouseX, this.mouseY = e.mouseY, 
        this.active = !1, this.on = function() {
            this.active || (p.call(e), this.active = !0);
        }, this.off = function() {
            this.active && (d.call(e), this.active = !1);
        };
    }
    function p() {
        var e = this.camera;
        e.init || 0 !== e.position.x || 0 !== e.position.y || (e.position.x = this.width / 2, 
        e.position.y = this.height / 2, e.init = !0), e.mouseX = this.mouseX + e.position.x - this.width / 2, 
        e.mouseY = this.mouseY + e.position.y - this.height / 2, e.active || (e.active = !0, 
        this.push(), this.scale(e.zoom), this.translate(-e.position.x + this.width / 2 / e.zoom, -e.position.y + this.height / 2 / e.zoom));
    }
    function d() {
        this.camera.active && (this.pop(), this.camera.active = !1);
    }
    function f(t, r, o, a) {
        var l = i(t)("createVector"), u = e.prototype.CENTER;
        this.center = r, this.radius = o, this.originalRadius = o, this.offset = void 0 === a ? l(0, 0) : a, 
        this.extents = l(2 * o, 2 * o), this.draw = function() {
            t.noFill(), t.stroke(0, 255, 0), t.rectMode(u), t.ellipse(this.center.x + this.offset.x, this.center.y + this.offset.y, 2 * this.radius, 2 * this.radius);
        }, this.overlap = function(e) {
            var t = this.radius + e.radius;
            t *= t;
            var r = this.center.x + this.offset.x, i = this.center.y + this.offset.y, n = e.center.x + e.offset.x, o = e.center.y + e.offset.y;
            return t > h(r - n, 2) + h(i - o, 2);
        }, this.collide = function(e) {
            if (this.overlap(e)) {
                var r = this.center.x + this.offset.x, i = this.center.y + this.offset.y, o = e.center.x + e.offset.x, a = e.center.y + e.offset.y, h = t.atan2(i - a, r - o), u = this.radius + e.radius, c = n(u - s(r, i, o, a));
                return l(t.cos(h) * c, t.sin(h) * c);
            }
            return l(0, 0);
        }, this.size = function() {
            return l(2 * this.radius, 2 * this.radius);
        }, this.left = function() {
            return this.center.x + this.offset.x - this.radius;
        }, this.right = function() {
            return this.center.x + this.offset.x + this.radius;
        }, this.top = function() {
            return this.center.y + this.offset.y - this.radius;
        }, this.bottom = function() {
            return this.center.y + this.offset.y + this.radius;
        };
    }
    function m(t, r, s, a) {
        var h = i(t)("createVector"), l = e.prototype.CENTER, u = e.prototype.PI;
        this.center = r, this.extents = s, this.originalExtents = s.copy(), this.offset = void 0 === a ? h(0, 0) : a, 
        this.min = function() {
            return h(this.center.x + this.offset.x - this.extents.x, this.center.y + this.offset.y - this.extents.y);
        }, this.max = function() {
            return h(this.center.x + this.offset.x + this.extents.x, this.center.y + this.offset.y + this.extents.y);
        }, this.right = function() {
            return this.center.x + this.offset.x + this.extents.x / 2;
        }, this.left = function() {
            return this.center.x + this.offset.x - this.extents.x / 2;
        }, this.top = function() {
            return this.center.y + this.offset.y - this.extents.y / 2;
        }, this.bottom = function() {
            return this.center.y + this.offset.y + this.extents.y / 2;
        }, this.size = function() {
            return h(2 * this.extents.x, 2 * this.extents.y);
        }, this.rotate = function(e) {
            var r;
            r = t._angleMode === t.RADIANS ? o(e) : e;
            var i = this.extents.x * n(t.cos(r)) + this.extents.y * n(t.sin(r)), s = this.extents.x * n(t.sin(r)) + this.extents.y * n(t.cos(r));
            this.extents.x = i, this.extents.y = s;
        }, this.draw = function() {
            t.noFill(), t.stroke(0, 255, 0), t.rectMode(l), t.rect(this.center.x + this.offset.x, this.center.y + this.offset.y, this.size().x / 2, this.size().y / 2);
        }, this.overlap = function(e) {
            if (e instanceof m) {
                var t = e.minkowskiDifference(this);
                return t.min().x <= 0 && t.max().x >= 0 && t.min().y <= 0 && t.max().y >= 0;
            }
            if (e instanceof f) {
                var r = h(e.center.x, e.center.y);
                return e.center.x < this.left() ? r.x = this.left() : e.center.x > this.right() && (r.x = this.right()), 
                e.center.y < this.top() ? r.y = this.top() : e.center.y > this.bottom() && (r.y = this.bottom()), 
                r.dist(e.center) < e.radius;
            }
        }, this.collide = function(e) {
            if (e instanceof m) {
                var r = e.minkowskiDifference(this);
                return r.min().x <= 0 && r.max().x >= 0 && r.min().y <= 0 && r.max().y >= 0 ? r.closestPointOnBoundsToPoint(h(0, 0)) : h(0, 0);
            }
            if (e instanceof f) {
                var i, o = h(e.center.x, e.center.y);
                if (e.center.x < this.left() ? o.x = this.left() : e.center.x > this.right() && (o.x = this.right()), 
                e.center.y < this.top() ? o.y = this.top() : e.center.y > this.bottom() && (o.y = this.bottom()), 
                o.dist(e.center) < e.radius) {
                    if (o.x === e.center.x && o.y === e.center.y) {
                        var s = o.x - this.center.x, a = o.y - this.center.y;
                        n(s) < n(a) ? o.x = s > 0 ? this.right() : this.left() : o.y = a < 0 ? this.top() : this.bottom(), 
                        0 === (i = t.atan2(e.center.y - o.y, e.center.x - o.x)) && (o.x === this.right() && (i = u), 
                        o.y === this.top() && (i = u / 2), o.y === this.bottom() && (i = -u / 2));
                    } else i = t.atan2(o.y - e.center.y, o.x - e.center.x);
                    var l = h(o.x - e.center.x, o.y - e.center.y);
                    return h(t.cos(i) * e.radius - l.x, t.sin(i) * e.radius - l.y);
                }
                return h(0, 0);
            }
        }, this.minkowskiDifference = function(e) {
            var r = this.min().sub(e.max()), i = this.size().add(e.size());
            return new m(t, r.add(i.div(2)), i.div(2));
        }, this.closestPointOnBoundsToPoint = function(e) {
            var t = n(e.x - this.min().x), r = h(this.min().x, e.y);
            return n(this.max().x - e.x) < t && (t = n(this.max().x - e.x), r = h(this.max().x, e.y)), 
            n(this.max().y - e.y) < t && (t = n(this.max().y - e.y), r = h(e.x, this.max().y)), 
            n(this.min().y - e.y) < t && (t = n(this.min.y - e.y), r = h(e.x, this.min().y)), 
            r;
        };
    }
    function g(t) {
        var r, i = Array.prototype.slice.call(arguments, 1), n = e.prototype.CENTER;
        this.images = [];
        var s = 0, a = 0, h = -1;
        if (this.offX = 0, this.offY = 0, this.frameDelay = 4, this.playing = !0, this.visible = !0, 
        this.looping = !0, this.frameChanged = !1, this.imageCollider = !1, 2 === i.length && "string" == typeof i[0] && "string" == typeof i[1]) {
            var l = i[0], u = i[1];
            if (".png" !== l.substring(l.length - 4, l.length) && (t.print("Animation error: you need to use .png files (filename " + l + ")"), 
            l = -1), ".png" !== u.substring(u.length - 4, u.length) && (t.print("Animation error: you need to use .png files (filename " + u + ")"), 
            u = -1), -1 !== l && -1 !== u) {
                var c = 0, p = 0;
                for (r = l.length - 5; r >= 0; r--) l.charAt(r) >= "0" && l.charAt(r) <= "9" && c++;
                for (r = u.length - 5; r >= 0; r--) u.charAt(r) >= "0" && u.charAt(r) <= "9" && p++;
                var d, f = l.substring(0, l.length - (4 + c)), m = u.substring(0, u.length - (4 + p)), y = parseInt(l.substring(l.length - (4 + c), l.length - 4), 10), b = parseInt(u.substring(u.length - (4 + p), u.length - 4), 10);
                if (b < y) {
                    var x = b;
                    b = y, y = x;
                }
                if (f !== m) this.images.push(t.loadImage(l)), this.images.push(t.loadImage(u)); else if (c === p) for (r = y; r <= b; r++) d = f + t.nf(r, c) + ".png", 
                this.images.push(t.loadImage(d)); else for (r = y; r <= b; r++) d = f + r + ".png", 
                this.images.push(t.loadImage(d));
            }
        } else if (1 === i.length && i[0] instanceof v) this.spriteSheet = i[0], this.images = this.spriteSheet.frames; else if (0 !== i.length) for (r = 0; r < i.length; r++) i[r] instanceof e.Image ? this.images.push(i[r]) : this.images.push(t.loadImage(i[r]));
        this.clone = function() {
            var e = new g(t);
            return e.images = [], this.spriteSheet && (e.spriteSheet = this.spriteSheet.clone()), 
            e.images = this.images.slice(), e.offX = this.offX, e.offY = this.offY, e.frameDelay = this.frameDelay, 
            e.playing = this.playing, e.looping = this.looping, e;
        }, this.draw = function(e, r, i) {
            if (this.xpos = e, this.ypos = r, this.rotation = i || 0, this.visible) {
                if (this.isSpriteAnimation || this.update(), t.push(), t.imageMode(n), t.translate(this.xpos, this.ypos), 
                t._angleMode === t.RADIANS ? t.rotate(o(this.rotation)) : t.rotate(this.rotation), 
                void 0 !== this.images[s]) if (this.spriteSheet) {
                    var a = this.images[s].frame;
                    t.image(this.spriteSheet.image, a.x, a.y, a.width, a.height, this.offX, this.offY, a.width, a.height);
                } else t.image(this.images[s], this.offX, this.offY); else t.print("Warning undefined frame " + s);
                t.pop();
            }
        }, this.update = function() {
            a++;
            var e = s;
            this.frameChanged = !1, 1 === this.images.length && (this.playing = !1, s = 0), 
            this.playing && a % this.frameDelay == 0 && (h > s && -1 !== h ? s++ : h < s && -1 !== h ? s-- : h === s && -1 !== h ? this.playing = !1 : this.looping ? s >= this.images.length - 1 ? s = 0 : s++ : s < this.images.length - 1 && s++), 
            e !== s && (this.frameChanged = !0);
        }, this.play = function() {
            this.playing = !0, h = -1;
        }, this.stop = function() {
            this.playing = !1;
        }, this.rewind = function() {
            s = 0;
        }, this.changeFrame = function(e) {
            s = e < this.images.length ? e : this.images.length - 1, h = -1;
        }, this.nextFrame = function() {
            s < this.images.length - 1 ? s += 1 : this.looping && (s = 0), h = -1, this.playing = !1;
        }, this.previousFrame = function() {
            s > 0 ? s -= 1 : this.looping && (s = this.images.length - 1), h = -1, this.playing = !1;
        }, this.goToFrame = function(e) {
            e < 0 || e >= this.images.length || (h = e) !== s && (this.playing = !0);
        }, this.getFrame = function() {
            return s;
        }, this.getLastFrame = function() {
            return this.images.length - 1;
        }, this.getFrameImage = function() {
            return this.images[s];
        }, this.getImageAt = function(e) {
            return this.images[e];
        }, this.getWidth = function() {
            return this.images[s] instanceof e.Image ? this.images[s].width : this.images[s] ? this.images[s].frame.width : 1;
        }, this.getHeight = function() {
            return this.images[s] instanceof e.Image ? this.images[s].height : this.images[s] ? this.images[s].frame.height : 1;
        };
    }
    function v(t) {
        var r = Array.prototype.slice.call(arguments, 1);
        this.image = null, this.frames = [], this.frame_width = 0, this.frame_height = 0, 
        this.num_frames = 0, this._generateSheetFrames = function() {
            for (var e = 0, t = 0, r = 0; r < this.num_frames; r++) this.frames.push({
                name: r,
                frame: {
                    x: e,
                    y: t,
                    width: this.frame_width,
                    height: this.frame_height
                }
            }), (e += this.frame_width) >= this.image.width && (e = 0, (t += this.frame_height) >= this.image.height && (t = 0));
        }, 2 === r.length && Array.isArray(r[1]) ? (this.frames = r[1], this.num_frames = this.frames.length) : 4 === r.length && "number" == typeof r[1] && "number" == typeof r[2] && "number" == typeof r[3] && (this.frame_width = r[1], 
        this.frame_height = r[2], this.num_frames = r[3]), r[0] instanceof e.Image ? (this.image = r[0], 
        4 === r.length && this._generateSheetFrames()) : 2 === r.length ? this.image = t.loadImage(r[0]) : 4 === r.length && (this.image = t.loadImage(r[0], this._generateSheetFrames.bind(this))), 
        this.drawFrame = function(e, r, i, n, o) {
            var s;
            if ("number" == typeof e) s = this.frames[e].frame; else for (var a = 0; a < this.frames.length; a++) if (this.frames[a].name === e) {
                s = this.frames[a].frame;
                break;
            }
            var h = n || s.width, l = o || s.height;
            t.image(this.image, s.x, s.y, s.width, s.height, r, i, h, l);
        }, this.clone = function() {
            for (var e = new v(t), r = 0; r < this.frames.length; r++) {
                var i = this.frames[r].frame, n = {
                    name: i.name,
                    frame: {
                        x: i.x,
                        y: i.y,
                        width: i.width,
                        height: i.height
                    }
                };
                e.frames.push(n);
            }
            return e.image = this.image, e.frame_width = this.frame_width, e.frame_height = this.frame_height, 
            e.num_frames = this.num_frames, e;
        };
    }
    function y(e, t) {
        function r() {
            return e.apply(this, t);
        }
        return r.prototype = e.prototype, new r();
    }
    function b(e, t, r, i) {
        this.active = !0, this.max_objects = t || 10, this.max_levels = r || 4, this.level = i || 0, 
        this.bounds = e, this.objects = [], this.object_refs = [], this.nodes = [];
    }
    e.prototype.keyWentDown = function(e) {
        return this._isKeyInState(e, 1);
    }, e.prototype.keyWentUp = function(e) {
        return this._isKeyInState(e, 3);
    }, e.prototype.keyDown = function(e) {
        return this._isKeyInState(e, 2);
    }, e.prototype._isKeyInState = function(e, t) {
        var r, i = this._p5play.keyStates;
        return void 0 === i[r = "string" == typeof e ? this._keyCodeFromAlias(e) : e] && (this.keyIsDown(r) ? i[r] = 2 : i[r] = 0), 
        i[r] === t;
    }, e.prototype.mouseDown = function(e) {
        return this._isMouseButtonInState(e, 2);
    }, e.prototype.mouseUp = function(e) {
        return this._isMouseButtonInState(e, 0);
    }, e.prototype.mouseWentUp = function(e) {
        return this._isMouseButtonInState(e, 3);
    }, e.prototype.mouseWentDown = function(e) {
        return this._isMouseButtonInState(e, 1);
    }, e.prototype._isMouseButtonInState = function(e, t) {
        var r = this._p5play.mouseStates;
        return void 0 === e && (e = this.LEFT), void 0 === r[e] && (this.mouseIsPressed && this.mouseButton === e ? r[e] = 2 : r[e] = 0), 
        r[e] === t;
    }, e.prototype.KEY = {
        BACKSPACE: 8,
        TAB: 9,
        ENTER: 13,
        SHIFT: 16,
        CTRL: 17,
        ALT: 18,
        PAUSE: 19,
        CAPS_LOCK: 20,
        ESC: 27,
        SPACE: 32,
        " ": 32,
        PAGE_UP: 33,
        PAGE_DOWN: 34,
        END: 35,
        HOME: 36,
        LEFT_ARROW: 37,
        LEFT: 37,
        UP_ARROW: 38,
        UP: 38,
        RIGHT_ARROW: 39,
        RIGHT: 39,
        DOWN_ARROW: 40,
        DOWN: 40,
        INSERT: 45,
        DELETE: 46,
        0: 48,
        1: 49,
        2: 50,
        3: 51,
        4: 52,
        5: 53,
        6: 54,
        7: 55,
        8: 56,
        9: 57,
        A: 65,
        B: 66,
        C: 67,
        D: 68,
        E: 69,
        F: 70,
        G: 71,
        H: 72,
        I: 73,
        J: 74,
        K: 75,
        L: 76,
        M: 77,
        N: 78,
        O: 79,
        P: 80,
        Q: 81,
        R: 82,
        S: 83,
        T: 84,
        U: 85,
        V: 86,
        W: 87,
        X: 88,
        Y: 89,
        Z: 90,
        "0NUMPAD": 96,
        "1NUMPAD": 97,
        "2NUMPAD": 98,
        "3NUMPAD": 99,
        "4NUMPAD": 100,
        "5NUMPAD": 101,
        "6NUMPAD": 102,
        "7NUMPAD": 103,
        "8NUMPAD": 104,
        "9NUMPAD": 105,
        MULTIPLY: 106,
        PLUS: 107,
        MINUS: 109,
        DOT: 110,
        SLASH1: 111,
        F1: 112,
        F2: 113,
        F3: 114,
        F4: 115,
        F5: 116,
        F6: 117,
        F7: 118,
        F8: 119,
        F9: 120,
        F10: 121,
        F11: 122,
        F12: 123,
        EQUAL: 187,
        COMMA: 188,
        SLASH: 191,
        BACKSLASH: 220
    }, e.prototype.KEY_DEPRECATIONS = {
        MINUT: "MINUS",
        COMA: "COMMA"
    }, e.prototype._keyCodeFromAlias = function(e) {
        return e = e.toUpperCase(), this.KEY_DEPRECATIONS[e] && (this._warn('Key literal "' + e + '" is deprecated and may be removed in a future version of p5.play. Please use "' + this.KEY_DEPRECATIONS[e] + '" instead.'), 
        e = this.KEY_DEPRECATIONS[e]), this.KEY[e];
    }, e.prototype.readPresses = function() {
        var e = this._p5play.keyStates, t = this._p5play.mouseStates;
        for (var r in e) this.keyIsDown(r) ? 0 === e[r] ? e[r] = 1 : e[r] = 2 : 2 === e[r] ? e[r] = 3 : e[r] = 0;
        for (var i in t) this.mouseIsPressed && this.mouseButton === i ? 0 === t[i] ? t[i] = 1 : t[i] = 2 : 2 === t[i] ? t[i] = 3 : t[i] = 0;
    }, e.prototype.useQuadTree = function(e) {
        return void 0 !== this.quadTree && (void 0 === e ? this.quadTree.active : void (this.quadTree.active = !!e));
    }, t("quadTree", function() {
        return new b({
            x: 0,
            y: 0,
            width: 0,
            height: 0
        }, 4);
    }), t("Sprite", r(u)), t("Camera", r(c)), e.prototype.Group = function() {
        var e = [];
        function t(e, t) {
            return null === e || null === t ? null === e && null === t : "string" == typeof e ? e === t : "object" != typeof e ? e === t : e.equals instanceof Function ? e.equals(t) : e === t;
        }
        function r(e, t, r) {
            for (var i = !1, n = 0; n < this.size(); n++) i = this.get(n).AABBops(e, t, r) || i;
            return i;
        }
        return e.get = function(t) {
            return e[t];
        }, e.contains = function(e) {
            return this.indexOf(e) > -1;
        }, e.indexOf = function(r) {
            for (var i = 0, n = e.length; i < n; ++i) if (t(r, e[i])) return i;
            return -1;
        }, e.add = function(t) {
            if (!(t instanceof u)) throw "Error: you can only add sprites to a group";
            -1 === this.indexOf(t) && (e.push(t), t.groups.push(this));
        }, e.size = function() {
            return e.length;
        }, e.removeSprites = function() {
            for (;e.length > 0; ) e[0].remove();
        }, e.clear = function() {
            e.length = 0;
        }, e.remove = function(t) {
            if (!(t instanceof u)) throw "Error: you can only remove sprites from a group";
            var r, i = !1;
            for (r = e.length - 1; r >= 0; r--) e[r] === t && (e.splice(r, 1), i = !0);
            if (i) for (r = t.groups.length - 1; r >= 0; r--) t.groups[r] === this && t.groups.splice(r, 1);
            return i;
        }, e.toArray = function() {
            return e.slice(0);
        }, e.maxDepth = function() {
            return 0 === e.length ? 0 : e.reduce(function(e, t) {
                return Math.max(e, t.depth);
            }, -1 / 0);
        }, e.minDepth = function() {
            return 0 === e.length ? 99999 : e.reduce(function(e, t) {
                return Math.min(e, t.depth);
            }, 1 / 0);
        }, e.draw = function() {
            this.sort(function(e, t) {
                return e.depth - t.depth;
            });
            for (var e = 0; e < this.size(); e++) this.get(e).display();
        }, e.overlap = r.bind(e, "overlap"), e.collide = r.bind(e, "collide"), e.displace = r.bind(e, "displace"), 
        e.bounce = r.bind(e, "bounce"), e;
    }, t("CircleCollider", r(f)), t("AABB", r(m)), t("Animation", r(g)), t("SpriteSheet", r(v)), 
    b.prototype.updateBounds = function() {
        for (var e = this.getAll(), t = 1e4, r = 1e4, i = -1e4, n = -1e4, o = 0; o < e.length; o++) e[o].position.x < t && (t = e[o].position.x), 
        e[o].position.y < r && (r = e[o].position.y), e[o].position.x > i && (i = e[o].position.x), 
        e[o].position.y > n && (n = e[o].position.y);
        this.bounds = {
            x: t,
            y: r,
            width: i,
            height: n
        };
    }, b.prototype.split = function() {
        var e = this.level + 1, t = Math.round(this.bounds.width / 2), r = Math.round(this.bounds.height / 2), i = Math.round(this.bounds.x), n = Math.round(this.bounds.y);
        this.nodes[0] = new b({
            x: i + t,
            y: n,
            width: t,
            height: r
        }, this.max_objects, this.max_levels, e), this.nodes[1] = new b({
            x: i,
            y: n,
            width: t,
            height: r
        }, this.max_objects, this.max_levels, e), this.nodes[2] = new b({
            x: i,
            y: n + r,
            width: t,
            height: r
        }, this.max_objects, this.max_levels, e), this.nodes[3] = new b({
            x: i + t,
            y: n + r,
            width: t,
            height: r
        }, this.max_objects, this.max_levels, e);
    }, b.prototype.getIndex = function(e) {
        if (e.collider) {
            var t = -1, r = this.bounds.x + this.bounds.width / 2, i = this.bounds.y + this.bounds.height / 2, n = e.collider.top() < i && e.collider.top() + e.collider.size().y < i, o = e.collider.top() > i;
            return e.collider.left() < r && e.collider.left() + e.collider.size().x < r ? n ? t = 1 : o && (t = 2) : e.collider.left() > r && (n ? t = 0 : o && (t = 3)), 
            t;
        }
        return -1;
    }, b.prototype.insert = function(e) {
        if (-1 === this.objects.indexOf(e)) {
            var t, r = 0;
            if (void 0 !== this.nodes[0] && -1 !== (t = this.getIndex(e))) return void this.nodes[t].insert(e);
            if (this.objects.push(e), this.objects.length > this.max_objects && this.level < this.max_levels) for (void 0 === this.nodes[0] && this.split(); r < this.objects.length; ) -1 !== (t = this.getIndex(this.objects[r])) ? this.nodes[t].insert(this.objects.splice(r, 1)[0]) : r += 1;
        }
    }, b.prototype.retrieve = function(e) {
        var t = this.getIndex(e), r = this.objects;
        if (void 0 !== this.nodes[0]) if (-1 !== t) r = r.concat(this.nodes[t].retrieve(e)); else for (var i = 0; i < this.nodes.length; i += 1) r = r.concat(this.nodes[i].retrieve(e));
        return r;
    }, b.prototype.retrieveFromGroup = function(e, t) {
        for (var r = [], i = this.retrieve(e), n = 0; n < i.length; n++) t.contains(i[n]) && r.push(i[n]);
        return r;
    }, b.prototype.getAll = function() {
        for (var e = this.objects, t = 0; t < this.nodes.length; t += 1) e = e.concat(this.nodes[t].getAll());
        return e;
    }, b.prototype.getObjectNode = function(e) {
        var t;
        if (!this.nodes.length) return this;
        if (-1 === (t = this.getIndex(e))) return this;
        var r = this.nodes[t].getObjectNode(e);
        return r || !1;
    }, b.prototype.removeObject = function(e) {
        var t = this.getObjectNode(e), r = t.objects.indexOf(e);
        if (-1 === r) return !1;
        t.objects.splice(r, 1);
    }, b.prototype.clear = function() {
        if (this.objects = [], this.nodes.length) {
            for (var e = 0; e < this.nodes.length; e += 1) this.nodes[e].clear();
            this.nodes = [];
        }
    }, b.prototype.cleanup = function() {
        var e = this.getAll();
        this.clear();
        for (var t = 0; t < e.length; t++) this.insert(e[t]);
    }, e.prototype.registerMethod("pre", e.prototype.readPresses), e.prototype.registerMethod("pre", e.prototype.updateSprites), 
    e.prototype.registerMethod("post", function() {
        this.quadTree.active && (this.quadTree.updateBounds(), this.quadTree.cleanup());
    }), e.prototype.registerMethod("pre", p), e.prototype.registerMethod("post", d), 
    e.prototype._warn = function(e) {
        var t = window.console;
        t && ("function" == typeof t.warn ? t.warn(e) : "function" == typeof t.log && t.log("Warning: " + e));
    };
});